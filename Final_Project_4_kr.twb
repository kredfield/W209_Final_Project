<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <NavigationAction />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Final_Project_4_15642958352660' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Votes&quot;'>
        <calculation class='tableau' formula='&quot;Map by Votes&quot;' />
        <members>
          <member value='&quot;Map by Votes&quot;' />
          <member value='&quot;Map by Donations&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='county_race_vote_donate' inline='true' name='federated.111462w1qeyrfp1adgtd00ipgciu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='county_race_vote_donate' name='textscan.087laeq11cmjag1fk9s5z1h1k5vv'>
            <connection class='textscan' directory='C:/Users/krred/Documents/Berkeley/w209/Final_Project' filename='county_race_vote_donate.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.087laeq11cmjag1fk9s5z1h1k5vv' name='county_race_vote_donate.csv' table='[county_race_vote_donate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
            <column datatype='integer' name='county_fips' ordinal='3' />
            <column datatype='integer' name='Per_Capita_Inc' ordinal='4' />
            <column datatype='integer' name='Personal_Inc' ordinal='5' />
            <column datatype='integer' name='Population' ordinal='6' />
            <column datatype='string' name='state_postal' ordinal='7' />
            <column datatype='string' name='county_name' ordinal='8' />
            <column datatype='string' name='candidate' ordinal='9' />
            <column datatype='string' name='candidate_fec' ordinal='10' />
            <column datatype='string' name='party' ordinal='11' />
            <column datatype='string' name='office' ordinal='12' />
            <column datatype='integer' name='votes' ordinal='13' />
            <column datatype='real' name='total_donations' ordinal='14' />
            <column datatype='real' name='donation_count' ordinal='15' />
            <column datatype='real' name='total_race_donations' ordinal='16' />
            <column datatype='integer' name='total_race_county_votes' ordinal='17' />
            <column datatype='real' name='total_race_county_donations' ordinal='18' />
            <column datatype='integer' name='votes_winner' ordinal='19' />
            <column datatype='integer' name='donation_winner' ordinal='20' />
            <column datatype='integer' name='total_party_county_votes' ordinal='21' />
            <column datatype='real' name='total_party_county_donations' ordinal='22' />
            <column datatype='integer' name='county_votes_winner' ordinal='23' />
            <column datatype='integer' name='county_donation_winner' ordinal='24' />
            <column datatype='real' name='normalized_votes' ordinal='25' />
            <column datatype='real' name='normalized_donations' ordinal='26' />
            <column datatype='integer' name='party_binary' ordinal='27' />
            <column datatype='real' name='normalized_votes_interacted' ordinal='28' />
            <column datatype='real' name='normalized_donate_interacted' ordinal='29' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_fips</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per_Capita_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per_Capita_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Per_Capita_Inc</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Personal_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Personal_Inc</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_postal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_postal]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>state_postal</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate_fec</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate_fec]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate_fec</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[party]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>office</remote-name>
            <remote-type>129</remote-type>
            <local-name>[office]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>office</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_donations</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[donation_count]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_count</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_donations</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_race_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_votes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_donations</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes_winner</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_winner</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_party_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_votes</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_party_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_donations</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_votes_winner</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_donation_winner</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donations</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party_binary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[party_binary]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party_binary</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes_interacted</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donate_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donate_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donate_interacted</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Display Sheet' datatype='string' name='[Calculation_453737681150197760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
      <column caption='Candidate Fec' datatype='string' name='[candidate_fec]' role='dimension' type='nominal' />
      <column caption='County Donation Winner' datatype='integer' name='[county_donation_winner]' role='measure' type='quantitative' />
      <column caption='County Fips' datatype='integer' name='[county_fips]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Votes Winner' datatype='integer' name='[county_votes_winner]' role='measure' type='quantitative' />
      <column caption='Donation Winner' datatype='integer' name='[donation_winner]' role='measure' type='quantitative' />
      <column caption='normalized_votes' datatype='real' name='[normalized_votes]' role='measure' type='quantitative' />
      <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
      <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
      <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
      <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
      <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
      <column-instance column='[donation_winner]' derivation='Attribute' name='[attr:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[votes_winner]' derivation='Attribute' name='[attr:votes_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[donation_winner]' derivation='Count' name='[cnt:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[donation_winner]' derivation='CountD' name='[ctd:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[donation_winner]' derivation='None' name='[none:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
      <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
      <group caption='Action (Candidate,County Name,Party,State Postal)' hidden='true' name='[Action (Candidate,County Name,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (Candidate,Party)' hidden='true' name='[Action (Candidate,Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[party]' />
        </groupfilter>
      </group>
      <group caption='Action (Candidate,Party,State Postal)' hidden='true' name='[Action (Candidate,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,Party)' hidden='true' name='[Action (County Name,Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,Party,State Postal)' hidden='true' name='[Action (County Name,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,State Postal)' hidden='true' name='[Action (County Name,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (Party,State Postal)' hidden='true' name='[Action (Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state_postal, county_name'>
          <field>[state_postal]</field>
          <field>[county_name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Scott/OneDrive/Documents/My Tableau Repository/Datasources/county_race_vote_donate.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/04/2019 04:42:53 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='county_race_vote_donate' increment-value='%null%' refresh-type='create' rows-inserted='20502' timestamp-start='2019-08-04 04:42:53.712' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20502</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_fips</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_fips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_fips</remote-alias>
              <ordinal>1</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3649</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Per_Capita_Inc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Per_Capita_Inc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Per_Capita_Inc</remote-alias>
              <ordinal>2</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3553</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Personal_Inc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Personal_Inc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Personal_Inc</remote-alias>
              <ordinal>3</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3649</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>4</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3631</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_postal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_postal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_postal</remote-alias>
              <ordinal>5</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_name</remote-alias>
              <ordinal>6</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2378</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate</remote-alias>
              <ordinal>7</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1031</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate_fec</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate_fec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate_fec</remote-alias>
              <ordinal>8</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>883</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>party</remote-alias>
              <ordinal>9</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>office</remote-name>
              <remote-type>129</remote-type>
              <local-name>[office]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>office</remote-alias>
              <ordinal>10</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>votes</remote-alias>
              <ordinal>11</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_donations</remote-alias>
              <ordinal>12</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3511</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>donation_count</remote-name>
              <remote-type>5</remote-type>
              <local-name>[donation_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>donation_count</remote-alias>
              <ordinal>13</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>725</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_race_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_donations</remote-alias>
              <ordinal>14</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3511</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_county_votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_race_county_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_county_votes</remote-alias>
              <ordinal>15</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5447</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_county_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_race_county_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_county_donations</remote-alias>
              <ordinal>16</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3582</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>votes_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[votes_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>votes_winner</remote-alias>
              <ordinal>17</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>donation_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[donation_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>donation_winner</remote-alias>
              <ordinal>18</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_party_county_votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_party_county_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_party_county_votes</remote-alias>
              <ordinal>19</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5049</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_party_county_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_party_county_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_party_county_donations</remote-alias>
              <ordinal>20</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4532</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_votes_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_votes_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_votes_winner</remote-alias>
              <ordinal>21</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_donation_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_donation_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_donation_winner</remote-alias>
              <ordinal>22</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_votes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized_votes</remote-alias>
              <ordinal>23</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17254</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized_donations</remote-alias>
              <ordinal>24</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14224</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:county_name:nk]'>
          <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
        </filter>
        <filter class='categorical' column='[none:state_postal:nk]'>
          <groupfilter function='level-members' level='[none:state_postal:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.273794' measure-ordering='alphabetic' measure-percentage='0.696219' parameter-percentage='0.029987' rowDisplayCount='100000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:donation_winner:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>15</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>16</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>23</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:donation_winner:ok]&#10;[none:party:nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>1</bucket>
                <bucket>&quot;DEM&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>0</bucket>
                <bucket>&quot;DEM&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>0</bucket>
                <bucket>&quot;REP&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>1</bucket>
                <bucket>&quot;REP&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ctd:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:party:nk]&#10;[attr:votes_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>0</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>1</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>%many-values%</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>1</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>0</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>%many-values%</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:party:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;DEM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;REP&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='state_postal' />
        <field-sort-custom-order field='county_fips' />
        <field-sort-custom-order field='county_name' />
        <field-sort-custom-order field='candidate' />
        <field-sort-custom-order field='candidate_fec' />
        <field-sort-custom-order field='party' />
        <field-sort-custom-order field='office' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='votes' />
        <field-sort-custom-order field='total_donations' />
        <field-sort-custom-order field='donation_count' />
        <field-sort-custom-order field='total_votes' />
        <field-sort-custom-order field='votes_winner' />
        <field-sort-custom-order field='donation_winner' />
        <field-sort-custom-order field='total_county_votes' />
        <field-sort-custom-order field='total_county_donations' />
        <field-sort-custom-order field='county_votes_winner' />
        <field-sort-custom-order field='county_donation_winner' />
        <field-sort-custom-order field='total_party_votes_county' />
        <field-sort-custom-order field='total_party_donations_county' />
        <field-sort-custom-order field='total_donation_count_county' />
        <field-sort-custom-order field='Calculation_1319273230062022656' />
        <field-sort-custom-order field='Total Donations (bin)' />
        <field-sort-custom-order field='Per_Capita_Inc' />
        <field-sort-custom-order field='Personal_Inc' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='normalized_votes' />
        <field-sort-custom-order field='normalized_donations' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Votes&quot;'>
          <calculation class='tableau' formula='&quot;Map by Votes&quot;' />
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[office]' filter-group='2'>
        <groupfilter function='member' level='[office]' member='&quot;US House&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Hover 1 1' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Map by Donate (2)' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Map by Donate (2)' />
      </command>
    </action>
    <action caption='Same Sheet' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total by County' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total by County' />
      </command>
    </action>
    <action caption='Same Sheet 1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Us Candidate Votes' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Us Candidate Votes' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Map by Votes (2)' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Party,ATTR(Votes Winner)' />
        <param name='target' value='Map by Votes (2)' />
      </command>
    </action>
    <action caption='Hover' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Map by Votes' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Map by Votes' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Us Candidate Votes' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Party' />
        <param name='target' value='Us Candidate Votes' />
      </command>
    </action>
    <action caption='Same Sheet 2' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total by County (2)' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total by County (2)' />
      </command>
    </action>
    <action caption='Filter1' name='[Action8]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dash with changing views' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map by Donations' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dash with changing views' />
      </command>
    </action>
    <action caption='Hover 1' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Map by Votes (3)' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Map by Votes (3)' />
      </command>
    </action>
    <nav-action caption='Map by' name='[Action7]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Map by Donations' />
      <params>
        <param name='sheet' value='Map by Votes' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='$ per House Candidate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]</rows>
        <cols>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / ([federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]))</cols>
      </table>
      <simple-id uuid='{F23BB9FF-A904-401F-A559-71282BD2845B}' />
    </worksheet>
    <worksheet name='Bar # of Donations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</rows>
        <cols>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk])</cols>
      </table>
      <simple-id uuid='{32066775-2004-473B-8E3C-82C86D5C52E0}' />
    </worksheet>
    <worksheet name='Bar # of Donations (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5C8D31A0-AA41-450F-8F3F-7D76A81FF5B9}' />
    </worksheet>
    <worksheet name='Bar # of Donations (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{E3888DDC-2C16-4032-866C-93D97BEC5AFB}' />
    </worksheet>
    <worksheet name='Candidate Votes vs Donations'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes]' derivation='Sum' name='[sum:votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]'>
            <groupfilter function='level-members' level='[none:candidate:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]</cols>
      </table>
      <simple-id uuid='{B15F5557-C936-4D1A-997F-E28DA3184E8A}' />
    </worksheet>
    <worksheet name='Map by Donate (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Votes&quot;'>
              <calculation class='tableau' formula='&quot;Map by Votes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_donate_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_donate_interacted]' derivation='Sum' name='[sum:normalized_donate_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6949375.2669335324' min='-14787849.795397056' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='10047596.511373963' min='324873.58569716604' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{32EE3578-988E-40E1-9AD8-8F3F8D165C90}' />
    </worksheet>
    <worksheet name='Map by Donations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Donations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Votes&quot;'>
              <calculation class='tableau' formula='&quot;Map by Votes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Donation Winner' datatype='integer' name='[county_donation_winner]' role='measure' type='quantitative' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_donation_winner]' derivation='None' name='[none:county_donation_winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_race_donations]' derivation='Sum' name='[sum:total_race_donations:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_race_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_donation_winner:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_donation_winner:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7892699.7255507763' min='-13846854.838619573' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='8813236.1454661079' min='1427793.9639990251' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_race_donations:qk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{41D32722-7896-4D6A-9AF0-C5C706E7701B}' />
    </worksheet>
    <worksheet name='Map by Votes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Votes&quot;'>
              <calculation class='tableau' formula='&quot;Map by Votes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column-instance column='[votes_winner]' derivation='None' name='[none:votes_winner:qk]' pivot='key' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:votes_winner:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:votes_winner:qk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6949375.2669335324' min='-14787849.795397056' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='10047596.511373963' min='324873.58569716604' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{39261132-0304-416A-A78D-CFA26D20FC94}' />
    </worksheet>
    <worksheet name='Map by Votes (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Votes&quot;'>
              <calculation class='tableau' formula='&quot;Map by Votes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[votes_winner]' derivation='Attribute' name='[attr:votes_winner:ok]' pivot='key' type='ordinal' />
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]'>
            <groupfilter function='member' level='[attr:votes_winner:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7173114.8695446355' min='-14542987.838705925' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7312568.6699103191' min='1960147.083167108' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EBA4A509-A86E-4A5F-9D50-AA61C4C41904}' />
    </worksheet>
    <worksheet name='Map by Votes (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Votes&quot;'>
              <calculation class='tableau' formula='&quot;Map by Votes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_votes_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_votes_interacted]' derivation='Sum' name='[sum:normalized_votes_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6949375.2669335324' min='-14787849.795397056' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='10047596.511373963' min='324873.58569716604' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F89E83A5-A2F1-41D0-ACEE-901993559971}' />
    </worksheet>
    <worksheet name='Pie Total Donation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total County Donations&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_party_county_donations]' derivation='Sum' name='[sum:total_party_county_donations:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_party_county_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='279' />
            <format attr='height' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' value='272' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>$ </run>
                <run>Æ&#10;</run>
                <run>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2F1CA1D7-D40C-4B43-8AEC-1FB6272EEC25}' />
    </worksheet>
    <worksheet name='Pie Total Donation (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total County Donations&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_party_county_donations]' derivation='Sum' name='[sum:total_party_county_donations:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_party_county_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='279' />
            <format attr='height' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' value='272' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>$ </run>
                <run>Æ&#10;</run>
                <run>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{3BA1E7B0-5714-428B-B407-335574B3A8C4}' />
    </worksheet>
    <worksheet name='Pres'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US President&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7422578.4077404393' min='-14209091.804296914' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6999002.9555749316' min='2513002.6296488163' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E394C042-5C71-47B9-8C7D-FCFE5D2BFE80}' />
    </worksheet>
    <worksheet name='Senate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US Senate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7422578.4077404393' min='-14209091.804296914' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6999002.9555749316' min='2513002.6296488163' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{669847FB-3C0C-4020-BA92-FBB2D07E6910}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{90E885BD-F33E-4276-BB83-959A1A86A360}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{599D347A-A8F9-45BA-8EFB-B01A93A326C9}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{746244B3-FCF8-4CC4-A465-4A7B3EE2DEF9}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</cols>
      </table>
      <simple-id uuid='{7F4A63E6-36D9-4B3A-A8AC-4EE50CDD232E}' />
    </worksheet>
    <worksheet name='US House Map (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_donations]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_donations]' derivation='Sum' name='[sum:normalized_donations:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7332935.8776561785' min='-14526204.679557364' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6924657.60306226' min='2344454.0062558725' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donations:qk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D44E7151-3300-40C2-8F02-9222D06C5EC7}' />
    </worksheet>
    <worksheet name='Votes per Candidate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes]' derivation='Sum' name='[sum:votes:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Greg\&quot; Ellison&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Gus\&quot; Rantz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Mike\&quot; Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Rick\&quot; John&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;[Write-in]&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;A. Donald McEachin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ACCAVITTI, JR., FRANK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adam B. Schiff&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ADAM KINZINGER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adam Smith&quot;' />
              <groupfilter from='&quot;Adrian Petrus&quot;' function='range' level='[none:candidate:nk]' to='&quot;Adriano Espaillat&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adrienne Nicole Edwards&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Agha Khan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Agha KHAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Al Lawson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AL McAFFREY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alan Bohms&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alan Lowenthal&quot;' />
              <groupfilter from='&quot;Albio Sires&quot;' function='range' level='[none:candidate:nk]' to='&quot;Alcee L. Hastings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alejandro Vega&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ALEX X. MOONEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alina Valdes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Allan Romaguera&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alma Adams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AMANDA HOWLAND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AMASH, JUSTIN&quot;' />
              <groupfilter from='&quot;Ami Bera&quot;' function='range' level='[none:candidate:nk]' to='&quot;Amodei, Mark E.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andre D. Carson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andrea Leigh McGee&quot;' />
              <groupfilter from='&quot;Andy Barr&quot;' function='range' level='[none:candidate:nk]' to='&quot;Andy Biggs&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Harris&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Millard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Whallon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angel Cadena&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angel Cardenas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angela Demaree&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ANGELA PENDLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Dalrymple&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann McLane Kuster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Wagner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Wofford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anna G. Eshoo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anna Throne-Hols&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anthony G. Brown&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Antonio C. Amador&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;April Freeman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Arik Bjorn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Arrington&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ART HALVORSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AUGUST (O&apos;NEILL) DEUSER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AUSTIN SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;B. Mark Walker&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Babin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bao Nguyen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BARBARA JEAN COMSTOCK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barbara Lee&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barrera&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BARRY LOUDERMILK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barry Welsh&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bartley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BEN R LUJAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;bennie g thompson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BERGMAN, JACK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bernice Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Beverly A. Goldstein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BILL FOSTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Otto&quot;' />
              <groupfilter from='&quot;Bill Pascrell&quot;' function='range' level='[none:candidate:nk]' to='&quot;Bill PASCRELL, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Posey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Billy Burkette&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Billy Long&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BISHOP, MIKE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Blaine Luetkemeyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Gibbs&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Latta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Patterson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Seay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BOBBY L. RUSH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bonnie Watson Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bonnie WATSON COLEMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Ashford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRAD SCHNEIDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Sherman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Wenstrup&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bradley Byrne&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bradshaw&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brady Pinero Walkinshaw&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRENDAN F BOYLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brent SONNEK-SCHMELZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brett Geymann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brett Murdock&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian Higgins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian J Heinrich&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRIAN K FITZPATRICK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian Mast&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bruce Davis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bruce Westerman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan Barrilleaux&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan Caforio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Burgess&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;C. A. Dutch Ruppersberger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cadien&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cain, Emily *&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cain, Emily Ann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Calvin Sidle&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Calvin Silde&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cargas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carlos Curbelo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carlos Santamaria&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carol Shea-Porter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carolyn Maloney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Casey Lucius&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Castro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Catherine Ping&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cathy McMorris Rodgers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cedric Richmond&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charlene Albarran&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES \&quot;\&quot;C.J.\&quot;\&quot; BARICEVIC&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charles \&quot;\&quot;Casper\&quot;\&quot; Stockham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES ALAN HERNICK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES W DENT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charlie Crist&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHERI BUSTOS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Blake Wiggins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Collins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Fedalei&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Gibson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Stewart&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christian Cano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHRISTINA M HARTMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHRISTINA OWEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christine Quinn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher H. Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher H. SMITH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher Peters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chuck Fleischmann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clark&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Claudia Tenney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clay Cope&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clay Higgins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CLEMENTS, PAUL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clint Didier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Colleen Deacon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Colm Willis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Conaway&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CONYERS, JR., JOHN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Corrogan R. Vaughn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Corry Westbrook&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Craig Bowden&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CROSS, Peter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cuellar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Culberson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dale K. Mensing&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Cox&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Donovan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Newhouse&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dana Rohrabacher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel B. Giroux&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel M. Wik&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel Webster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DANIEL WILLIAM LIPINSKI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danil Ezekiel Faust&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danniel Maio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DANNY K. DAVIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danny R. Turner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daria Novak&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DARIN LaHOOD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Darrell Issa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Darren Soto&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Cowell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Giles&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Hughes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Koller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Loebsack&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Reichert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID A BRAT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David A. Rosa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID B. MCKINLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David E. Bruderly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Gurfein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. COLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. Pinckney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. PINCKNEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David J. Putman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Kustoff&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David M Blackwell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David N. Cicilline&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David P. Joyce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Price&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Rouzer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Schweikert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Valadao&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David W. Jolly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David W. Kent&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Young&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Debbie Wasserman Schultz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DEBORAH L WILLIAMS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Denise Gitsham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DENISE JUNEAU&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dennis A. Ross&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;dennis c quinn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Denny Heck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Derek Kilmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DEREK W KITTS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Devin G. Nunes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diana DeGette&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diana Kastenbaum&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diane Black&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dianne Curry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dimitri Cherny&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DINGELL, DEBBIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doggett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Don Bacon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DON WILSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald Howbert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald M. Payne Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald M. PAYNE, JR.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald P. Larson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DONALD STERNOFF BEYER Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald W. Norcross&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DONALD W. NORCROSS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doris Matsui&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Applegate&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Basler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DOUG COLLINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug La Malfa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Lamborn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Owens&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Shepherd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DOUGLAS BELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DREW FERGUSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DRISKELL, GRETCHEN D.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Du Wayne Gregory&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Duncan Hunter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DWIGHT EVANS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EARL âBUDDYâ CARTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Albertson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Perlmutter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Royce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EILEEN MCNEIL BEDELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elbert Guillory&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eleanor Holmes Norton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elijah Cummings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eliot Engel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elise Stefanik&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elizabeth Esty&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Emanuel Cleaver II&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Emilio Huerta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eric Swalwell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Erik Paulsen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ERIN R MCCLELLAND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ernest T. Reeves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EVAN JENKINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EVANS, H.D. CHIP&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eve Nunez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;F. James Sensenbrenner, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Farenthold&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Flores&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Fran Person&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Francis Rooney&quot;' />
              <groupfilter from='&quot;Frank A. Lobiondo&quot;' function='range' level='[none:candidate:nk]' to='&quot;FRANK A. LOBIONDO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;FRANK D. LUCAS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Guinta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank LoBiondo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Nelson Drake&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank PALLONE, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Spotorno&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;FRANKIE ROBBINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frederick John LaVERGNE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;French Hill&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;G. Burt Lancaster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;G. K. Butterfield&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GABBARD, Tulsi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gail Schwartz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gallego&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Garret Graves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gary Jill Stein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gary Palmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Garza&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Genevieve (Gen) Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George Athanasopoulos&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George E. McDermott&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George Holding&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GEORGE J KELLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GERALD EDWARD CONNOLLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gibson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Giroux, Daniel B.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Glenn Grothman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GLENN WILLIAM THOMPSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Glo Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gohmert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gonzalez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gordon Christensen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GORMAN, JEFF&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grace F. Napolitano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grace Meng&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Granger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Green&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GREG DUKE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Greg Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;gregg harper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gregory Meeks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grover Joseph Rees&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gus Michael Bilirakis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gwen S. Moore&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;H. Powell Dew, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hakeem Jeffries&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HANABUSA, Colleen Wakako&quot;' />
              <groupfilter from='&quot;Hardin&quot;' function='range' level='[none:candidate:nk]' to='&quot;Hardy, Cresent&quot;' />
              <groupfilter from='&quot;Harold \&quot;\&quot;Hal\&quot;\&quot; Rogers&quot;' function='range' level='[none:candidate:nk]' to='&quot;Harold Bratcher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Harold Russell Taub&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector Castillo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector L. Castillo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector L. CASTILLO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HENRY C âHANKâ JOHNSON JR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hensarling&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Herman L. Vidrine&quot;' />
              <groupfilter from='&quot;Holbrook&quot;' function='range' level='[none:candidate:nk]' to='&quot;Holbrook, Mark I.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hosea Cleveland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HOWARD MORGAN GRIFFITH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Huelskamp, Tim&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HUIZENGA, BILL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hurd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ileana Ros-Lehtinen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Isadore Hall, III&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;J. Wesley Casteen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JACK A MCGRANN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jack Martins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jack Orswell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackie Speier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackie Walorski&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackson Lee&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jacob \&quot;Dorian Phibian\&quot; Hebert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;jacob owens&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jacob Turk&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jaime Herrera Beutler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JAMES A JONES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James E Jim Clyburn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JAMES NEAL HARRIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Neu Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James P. McGovern&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Piotrowski&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James R. COMER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James R. Langevin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Veltmeyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jamie Raskin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jan Schneider&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jane D. Dittmar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Janet Garrett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JANICE D. SCHAKOWSKY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jared Polis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jared W. Huffman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Chaffetz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Lewis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jay Sidie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Denham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Duncan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Fortenberry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Stone&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JEFFREY A. LEEF&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jenkins, Lynn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jennifer Martinez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jermaine Sampson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerrold Nadler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerry Kobishop (wr-in)&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerry McNerney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jesse Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Banks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Cooper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Costa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Hagedorn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Himes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Jordan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Lange&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Lawrence&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Moeller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Mowrer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Postma&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Renacci&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JIM WALZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jimmy Panetta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOAN McCARTHY LASONDE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JODY HICE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Courtney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Garcia&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Pakootas&quot;' />
              <groupfilter from='&quot;Joe Vitollo&quot;' function='range' level='[none:candidate:nk]' to='&quot;Joe Wilson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John A. YARMUTH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Adams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John B. Larson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;john bouie, ii&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Dale&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN F MORROW&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Faso&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Garamendi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John J. Duncan, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John K. Delaney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Katko&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN M. SHIMKUS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Mica&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John P. McNeil&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Plumb&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN R. LEWIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Rutherford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Sarbanes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Shaban&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Yarmuth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Johnny M. Tacherra&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHNSON, LON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JONES, JEFF&quot;' />
              <groupfilter from='&quot;Jose Serrano&quot;' function='range' level='[none:candidate:nk]' to='&quot;Joseph \&quot;Joe\&quot; Swider&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph Crowley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph M. Wenzel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph M. WENZEL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph P. Kennedy, III&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Josh Brannon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Josh Gottheimer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joshua Gottheimer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOSHUA HARRIS-TILL&quot;' />
              <groupfilter from='&quot;Joshua S. Gottheimer&quot;' function='range' level='[none:candidate:nk]' to='&quot;JOSHUA T BURKHOLDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joyce Beatty&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Juan M. Hidalgo, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Juan Vargas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Judy Chu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Julia Brownley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JUNIUS RODRIGUEZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Justin Donald Fareed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KAAIHUE, Angela Aulani&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kai Degner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Karen Bass&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Katherine M. Clark&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kathleen Rice&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kathy Castor&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KEITH JAMES ROTHFUS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Keith Mundy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ken Buck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ken Calvert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth \&quot;\&quot;Ken\&quot;\&quot; McGurn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth Cutno&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth W. Wright&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KERITH STRANO TAYLOR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Cramer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin McCarthy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Miller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Khary Penebaker&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KIHUEN, RUBEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KILDEE, DANIEL T.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kim Myers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kim Weaver&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KIM, Howard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KLAUSNER, HOWARD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kristi Noem&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KUMAR, ANIL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kyrsten Sinema&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lacy Clay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Buchson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Bucshon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry D. Bucshon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Rader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Laura Sterling&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LAWRENCE, BRENDA L.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lee Ann Dugas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lee Zeldin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lenore Solis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Leon Threatt&quot;' />
              <groupfilter from='&quot;LEONARD FRANCIS MCALLISTER&quot;' function='range' level='[none:candidate:nk]' to='&quot;Leonard LANCE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LEVIN, SANDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Linda T. Sanchez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lingerfelt&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Liz Cheney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LLOYD K SMUCKER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lois Frankel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lorna Phillipson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lorna PHILLIPSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LOU BARLETTA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lou Correa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Louie J. Campos&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Louise Slaughter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LuAnn L. Bennett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lucille Roybal-Allard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LUIS V. GUTIERREZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Luke Messer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn C. Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn Jenkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mal Hyman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marc Hennemann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marchant&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marcia L. Fudge&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marcy Kaptur&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mario Diaz-Balart&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Arness&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Assini&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark C. Alliegro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARK D. WICKLUND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark DeSaulnier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;mark gladney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARK HUNT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Meadows&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Plaster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Pocan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Sanford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Takano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARKWAYNE MULLIN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marsha Blackburn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marshall Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marshall, Roger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martha McSally&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martha Roby&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martin L Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARY ELLEN BALCHUNIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mary Hoeft&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATT DETCH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matt Gaetz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matt Heinz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW ALTON CARTWRIGHT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW CONNOLLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW DEW ROWE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matthew M. Corey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mauck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Maxine Waters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McCaul&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McDowell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McKellar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Melody Shekari&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Melvin L. \&quot;Kip\&quot; Holden&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MERRIE LEE SOULES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mia Love&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL BOST&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL D PARRISH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael E. Capuano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Eggman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL F DOYLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL H ROMERO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael L. Lorentz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael L. Wade&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL M MOLESEVICH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael O&apos;Reilly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL PAUL MARSICANO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Pompeo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael T. Pearson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Wager&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michele Young&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHELLE LUJAN GRISHAM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mick Mulvaney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Coffman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Derrick&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Gallagher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Honda&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MIKE MANYPENNY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MIKE QUIGLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Rogers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Simpson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Thompson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Turner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mikel Weisser&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mimi Walters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Misty Plowright&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mitchell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MITCHELL, PAUL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mo Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Monica Vernon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MOOLENAAR, JOHN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Morgan Carroll&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MORSE, CHRISTOPHER R.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MURPHY, DENNIS B.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;N. Eugene Cleek&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nancy Jo Kemper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nancy Pelosi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nanette Diaz Barragan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Narvaiz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nathan Mathis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Neal Dunn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nicholas Morse&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nicola S. Tsongas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nita Lowey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Norma J. Torres&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nydia Velazquez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;O&apos;Rourke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OCASIO, Javier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Oliver Jenkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Olson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Omar Navarro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OSTROV, Shirlene D. (Shirl)&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OSTROV, Shirlene DelaCruz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pat McDonough&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pat Tiberi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICIA C. MCCRACKEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICK HARLAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICK L MEEHAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Patrick Malloy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Patrick McHenry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Babeu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Chabot&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Cook&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Gosar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Spain&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Tonko&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paula Hawks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Perry, Mary&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pete Aguilar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pete Glidewell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PETER \&quot;\&quot;PETE\&quot;\&quot; DiCIANNI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Clemens&quot;' />
              <groupfilter from='&quot;PETER J. ROSKAM&quot;' function='range' level='[none:candidate:nk]' to='&quot;Peter King&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Theron&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Visclosky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Phil Oliva&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Phil Roe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Philip Rosenthal&quot;' />
              <groupfilter from='&quot;Pingree&quot;' function='range' level='[none:candidate:nk]' to='&quot;Pingree, Mchellie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Poe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Poliquin, Bruce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pompeo, Michael&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Potter, Britani&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pramila Jayapal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RaÃºl Grijalva&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rafael A. Dagnesses&quot;' />
              <groupfilter from='&quot;RAJA KRISHNAMOORTHI&quot;' function='range' level='[none:candidate:nk]' to='&quot;Ralph Abraham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RANDALL M. \&quot;\&quot;RANDY\&quot;\&quot; HULTGREN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Randy Perkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RASHID MALIK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ratcliffe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Raul R. Labrador&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Raul Ruiz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;REIGLE H&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rhue R. Reis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard A. Morckel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Alarcon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard B. Fox&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICHARD D DAUGHERTY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard E. Neal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICHARD GREGORY PRIEM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Hudson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Lieberman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Reichard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICK ALLEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Bryson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Crawford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Larsen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rickey Hobson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rita Ramirez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ro Khanna&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rob Bishop&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROB WOODALL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT A BRADY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Aderholt&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Ardini&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT CORTEZ SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT DOLD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Evans&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert J. Sutherland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT JOSEPH WITTMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Klepinger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Lamar \&quot;Bob\&quot; Bell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert M. Neeld&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Matthew Tager&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Pittenger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert W. Derlet&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT WILLIAM GOODLATTE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBIN KELLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROCHESTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rod Blum&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RODNEY DAVIS&quot;' />
              <groupfilter from='&quot;Rodney P. Frelinghuysen&quot;' function='range' level='[none:candidate:nk]' to='&quot;RODNEY STOOKSBURY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roger Allen Petersen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roger Hernandez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Desantis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Drake&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Kind&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Varasteh&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rosa L. DeLauro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rosen, Jacky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roy Rich&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ruben Gallego&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RYAN A COSTELLO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Downing&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Greene&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Peterson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Solen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RYAN ZINKE&quot;' />
              <groupfilter from='&quot;S. Bret Guthrie&quot;' function='range' level='[none:candidate:nk]' to='&quot;S. Brett GUTHRIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Salud Carbajal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sam Graves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SANFORD BISHOP&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sarah Lloyd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott A. Angelle&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott DesJarlais&quot;' />
              <groupfilter from='&quot;Scott Fuhrman&quot;' function='range' level='[none:candidate:nk]' to='&quot;Scott GARRETT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SCOTT PERRY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott Peters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott R. Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott R. Tipton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott Wharton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SCOTT WILLIAM TAYLOR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sean Duffy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sean Maloney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sessions&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Seth W. Moulton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shaun D. Brown&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelli Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelly Schratz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelly Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SHKRELI, SUZANNA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sidie, Jay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SMITH, DOUGLAS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stacy Ries Snyder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steny H. Hoyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephanie Murphy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephen F. Lynch&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephen Tryon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Chabot&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Cohen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve King&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Knight&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;STEVE PEARCE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;STEVE RUSSELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Scalise&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Stivers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Womack&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Fought&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven G. Bailey&quot;' />
              <groupfilter from='&quot;STEVEN J SANTARSIERO&quot;' function='range' level='[none:candidate:nk]' to='&quot;Steven J. UCCIO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;steven palazzo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Reynolds&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Specht&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Uccio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stewart Mills&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stuart Starr&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sue Caro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sue Googe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan A. Davis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan W. Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Suzan DelBene&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Suzanne Savary&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Talia Fuentes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tarkanian, Danny&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Budd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Deutch&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted W. Lieu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Yoho&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Terri A. Sewell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tharon Chandler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;THOMAS A MARINO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Massie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas MASSIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Mills&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Reed, II&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Suozzi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thornberry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thuy Lowe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tim Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tim Sheridan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TIMOTHY F MURPHY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Titus, Dina&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Todd A. Bloom&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Todd Rokita&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom A. Garrett Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM COLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Emmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM GRAVES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Macarthur&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom MacARTHUR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom McClintock&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Nelson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom O&apos;Halleran&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM PRICE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Rice&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Rooney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tommy A. Schrader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tommy Schrader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TONIA KHOURI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Cardenas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Evans&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Ventrella&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Trent Franks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;trent kelly&quot;' />
              <groupfilter from='&quot;Trey Collingsworth&quot;' function='range' level='[none:candidate:nk]' to='&quot;Trey Hollingsworth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TROTT, DAVID A.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Troy Hollingsworth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tyler Fischella&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;UPTON, FRED&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Val Demings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Veasey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vela&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vern Buchanan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vicky Hartzler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;VICTOR ARMENDARIZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;VINCE KOLBER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Virginia Foxx&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;W. John Williamson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wakely&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WALBERG, TIM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Walter B. Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Walter Dartland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Warren Davidson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wayne Alberson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wayne Liebnitzky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Weber&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wendy Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Westley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Will Boyd, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William (Bill) McCullough&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William Burke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WILLIAM F SHUSTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William R. Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William Richard Keating&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William T. Newton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WIRTH, DEBRA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Woolridge&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Xavier Becerra&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Yoder, Kevin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Yvette Clarke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Zephyr Teachout&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Zoe Lofgren&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</cols>
      </table>
      <simple-id uuid='{D700B012-036B-4621-8C66-AE6EC1EAA014}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dash with changing views'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Votes&quot;'>
          <calculation class='tableau' formula='&quot;Map by Votes&quot;' />
          <members>
            <member value='&quot;Map by Votes&quot;' />
            <member value='&quot;Map by Donations&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='45' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='30' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='28' type='layout-basic' w='98400' x='800' y='1000'>
                <zone h='98000' id='26' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                  <zone h='98000' id='24' type='layout-basic' w='63290' x='800' y='1000'>
                    <zone h='98000' id='20' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                      <zone h='98000' id='16' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                        <zone h='98000' id='14' type='layout-basic' w='63290' x='800' y='1000'>
                          <zone h='98000' id='7' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                            <zone h='98000' id='3' param='vert' type='layout-flow' w='63290' x='800' y='1000'>
                              <zone h='97875' id='12' name='Map by Donations' show-title='false' w='63290' x='800' y='1000'>
                                <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='125' id='13' name='Map by Votes' show-title='false' w='63290' x='800' y='98875'>
                                <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='49000' id='27' name='Pie Total Donation' show-title='false' w='35110' x='64090' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='43' name='Bar # of Donations' w='35110' x='64090' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='18900' y='12000' />
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='30' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='28' type='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='98000' id='26' param='horz' type='layout-flow' w='63291' x='800' y='1000'>
                    <zone h='98000' id='24' type='layout-basic' w='63291' x='800' y='1000'>
                      <zone h='98000' id='20' param='horz' type='layout-flow' w='63291' x='800' y='1000'>
                        <zone h='98000' id='16' param='horz' type='layout-flow' w='63291' x='800' y='1000'>
                          <zone h='98000' id='14' type='layout-basic' w='63291' x='800' y='1000'>
                            <zone h='98000' id='7' param='horz' type='layout-flow' w='63291' x='800' y='1000'>
                              <zone h='98000' id='3' param='vert' type='layout-flow' w='63291' x='800' y='1000'>
                                <zone h='125' id='12' name='Map by Donations' show-title='false' w='63291' x='800' y='1000'>
                                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='97875' id='13' name='Map by Votes' show-title='false' w='63291' x='800' y='1125'>
                                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='98000' id='27' name='Pie Total Donation' w='35109' x='64091' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
            <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='37100' y='9500' />
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='51' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='97875' id='12' is-fixed='true' name='Map by Donations' show-title='false' w='63290' x='800' y='1000'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='27' is-fixed='true' name='Pie Total Donation' show-title='false' w='35110' x='64090' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='18900' y='12000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='43' is-fixed='true' name='Bar # of Donations' w='35110' x='64090' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='125' id='13' is-fixed='true' name='Map by Votes' show-title='false' w='63290' x='800' y='98875'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{774B7288-7F3D-489B-9CB7-F8F01EA8E589}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Us Candidate Votes' id='1'>
                    <capturedDeltas>
                      <worksheet name='Map by Donations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7013286.9990137909' min='2442845.5362214488' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6161713.1272184942' min='-15056284.747356778' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Total by County' id='2'>
                    <capturedDeltas>
                      <worksheet name='Bar # of Donations'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Map by Donations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7067711.4259140678' min='3646871.0507484148' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6355917.255950857' min='-16165679.842839595' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Votes vs Donations' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{B7810F8D-6EC4-4FB6-8987-AD73836584BD}' />
    </dashboard>
    <dashboard name='Total by County'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='52' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='49' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='49000' id='3' name='Map by Donations' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='15' name='Pie Total Donation' w='49200' x='800' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='35' name='Bar # of Donations' w='49200' x='50000' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750' />
        <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625' />
        <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='110' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='111' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Map by Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Pie Total Donation' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='35' is-fixed='true' name='Bar # of Donations' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{156FD58E-F13B-433C-9B38-7F02D949D65C}' />
    </dashboard>
    <dashboard name='Total by County (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='52' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='49' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='49000' id='3' name='Map by Donations' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='15' name='Pie Total Donation' w='49200' x='800' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='84' name='Bar # of Donations (2)' w='49200' x='50000' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750' />
        <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625' />
        <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='111' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='112' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Map by Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Pie Total Donation' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='84' is-fixed='true' name='Bar # of Donations (2)' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EE9F55AD-1699-4806-B79B-F073DABF6FCA}' />
    </dashboard>
    <dashboard name='Us Candidate Votes'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Votes&quot;'>
          <calculation class='tableau' formula='&quot;Map by Votes&quot;' />
          <members>
            <member value='&quot;Map by Votes&quot;' />
            <member value='&quot;Map by Donations&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
        <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='98' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='95' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='64' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='61' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='20' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                    <zone h='98000' id='18' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                      <zone h='98000' id='16' type='layout-basic' w='98400' x='800' y='1000'>
                        <zone h='94000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                          <zone h='94000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                            <zone h='94000' id='93' name='Map by Votes' w='98400' x='800' y='1000'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                        <zone h='4000' id='100' param='vert' type='layout-flow' w='98400' x='800' y='95000' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9125' id='65' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16800' x='81500' y='53625' />
        <zone h='6500' id='96' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' w='16800' x='80700' y='4125' />
        <zone h='5500' id='99' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='82000' y='11875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='119' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='120' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='9125' id='65' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16800' x='81500' y='53625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='96' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' w='16800' x='80700' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='94000' id='93' is-fixed='true' name='Map by Votes' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='99' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='82000' y='11875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5326E33C-41A6-4915-921A-E79C52A16406}' />
    </dashboard>
    <dashboard name='Votes vs Donations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
        <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='50' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='53' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='51' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='49' name='Candidate Votes vs Donations' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6500' id='54' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='82500' y='11375' />
        <zone h='7250' id='56' name='Candidate Votes vs Donations' pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='85400' y='2125' />
        <zone h='6500' id='55' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' w='16800' x='82500' y='17000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='95' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='96' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='6500' id='54' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='82500' y='11375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='55' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' w='16800' x='82500' y='17000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='49' is-fixed='true' name='Candidate Votes vs Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='56' name='Candidate Votes vs Donations' pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='85400' y='2125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{35D6897E-1A73-4F10-B039-994C44F6C4DF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Us Candidate Votes'>
      <viewpoints>
        <viewpoint name='Map by Votes'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{47BE7D0E-1D32-4C46-9C8B-1673DCC6856C}' />
    </window>
    <window class='dashboard' name='Total by County'>
      <viewpoints>
        <viewpoint name='Bar # of Donations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Pie Total Donation' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AFDABAED-A0F2-42D6-8AE7-E3766E9ABF6E}' />
    </window>
    <window class='dashboard' name='Total by County (2)'>
      <viewpoints>
        <viewpoint name='Bar # of Donations (2)' />
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Pie Total Donation' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{44BBF57F-82BD-4039-840C-AC8A6E9EF3F5}' />
    </window>
    <window class='dashboard' name='Votes vs Donations'>
      <viewpoints>
        <viewpoint name='Candidate Votes vs Donations'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2EE89F30-6326-4A9F-A967-A907A1AD44B3}' />
    </window>
    <window class='worksheet' name='Candidate Votes vs Donations'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' />
            <card pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FC924821-6BFF-4566-BDC2-F45612CA1F01}' />
    </window>
    <window class='worksheet' name='US House Map (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donations:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{88AC9686-A1F6-4C7B-B924-0F93FDA32832}' />
    </window>
    <window class='worksheet' name='Senate'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E78C116D-563D-4D30-A313-F362D67D8A2F}' />
    </window>
    <window class='dashboard' name='Dash with changing views'>
      <viewpoints>
        <viewpoint name='Bar # of Donations'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]</field>
                      <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Sacramento County&quot;</value>
                  <value>&quot;DEM&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>4254.0</value>
                  <value>900011.0</value>
                  <value>4511244</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Map by Votes'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Pie Total Donation' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4F9BE995-60E3-4C4D-9737-CA352404A7A5}' />
    </window>
    <window class='worksheet' name='Map by Votes (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]&#10;[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{87715CC3-FAB9-4626-8125-5FD703C9F71C}' />
    </window>
    <window class='worksheet' name='Map by Votes'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3F52DCAC-069A-4C36-9D2B-02403311EAF5}' />
    </window>
    <window class='worksheet' maximized='true' name='Map by Votes (3)'>
      <cards>
        <edge name='left'>
          <strip size='287'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{79524F4B-0279-4BD2-916B-F1606619EE0D}' />
    </window>
    <window class='worksheet' name='Map by Donate (2)'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5CD988E4-D3E5-43A9-B461-A0DBB686192E}' />
    </window>
    <window class='worksheet' name='Map by Donations'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='31' type='pages' />
            <card size='138' type='filters' />
            <card size='220' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:donation_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_donation_winner:qk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:qk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9D490D5C-7EAB-4AA2-B7BA-6CF0F0355CED}' />
    </window>
    <window class='worksheet' name='Pres'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8106DE6D-7A08-47AB-977B-F6A6F9B57CA6}' />
    </window>
    <window class='worksheet' name='$ per House Candidate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EBD10A94-E36E-477D-91FC-39C8DA945043}' />
    </window>
    <window class='worksheet' name='Votes per Candidate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{417269ED-B07B-45D7-972E-0161CDCB5DA6}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BC531E96-962A-4388-9471-2A5E99DDFC82}' />
    </window>
    <window class='worksheet' name='Pie Total Donation'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B8634721-91A9-4CEF-9F7A-26661D49E618}' />
    </window>
    <window class='worksheet' name='Pie Total Donation (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{54E3652F-EC3C-405B-A637-D088A1B09A1E}' />
    </window>
    <window class='worksheet' name='Bar # of Donations'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{90279A2D-4E39-40F1-8D72-C4F4A6BA06F1}' />
    </window>
    <window class='worksheet' name='Bar # of Donations (2)'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5B943908-2C80-4583-BCC2-EC801D119669}' />
    </window>
    <window class='worksheet' name='Bar # of Donations (3)'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A101C932-7DC8-4DB2-B106-1DCAC0E8501E}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D48CF897-FA70-40C0-A418-21E5FADF0067}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F66C50FD-2D4C-4F07-BBB0-E35A33A9DA22}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5EB41E4A-53D3-4F69-AD7E-7E5E9D1D579C}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{315CE4A8-FADF-4D3E-9D6C-A9E680EC23F1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='$ per House Candidate' width='192'>
      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
      eHMrwKMIYgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bar # of Donations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar # of Donations (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Candidate Votes vs Donations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dash with changing views' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map by Donate (2)' width='192'>
      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
      D/cKnxb4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map by Votes' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Map by Votes (2)' width='192'>
      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
      zAz/Hy8CLa6plTGtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map by Votes (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie Total Donation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie Total Donation (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAF0ElEQVR4nO3d30/VdRzH8RfnHIQDeI6B/ChElFQSRAQH6bDSZvbDLmTddNHWfbl10T/A
      P2BrrgvlomY1axXpWqRrTiDmqgulTDHRIHWhpPw4KD/kxzld2ExDc0wU2uv5uDrnfDjf8z5n
      e/I9Z+d7zklKJBIJAaYCsz0AMJsIANYIANZuC+BwY4N21+9WQ2OTNNqvnzvOT3uDv/70vXbt
      +WzGBgQepNCtZ46f7tQbb72toBI6cnCv9jadVm1trSqKsvTVgUOqrHlOxTnJ6uiO6fyFS8rN
      ylBVVZXa2o5pTUWlkiRNhDIUHL86S3cHmJ7b9gC1W7do13s79UVjk2pqNmjdphe1uWatGvY3
      6tXXXtcP336twYGL+vJAqzZtekoXzpxU/8ioTpzoUNLf21i1quzmaWCuuyWACY0F5mv79jfV
      231WCgQ0fPWa4vH4lCtVrd+g9JSQXnh+oz7c+Y6K1j79EEcGZk7g1pM9507p/Q8+0uaXtkmR
      AhWmDujIsXa9sm2rPv14j9ZteVmRBY9qeUG2JCkta4mSUtK0ruSxG5sY7Vd9fb3i8Ul9su/g
      LNwdYHqS7ueNsB+bv9FIuEAbnyybyZmAh+a+AgD+73gfANYIANYIANZC9/4TT319ferr65vt
      MabIz8/XyMjIbI8xRTgcnpNzZWZm/uc6ewBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBY4wMxdxEOh+/5YYrZEAqFFA6HZ3uMKebqXPfCt0LAGk+BYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYO2OATQ3NUua0I4d7yohqbW1VZcvX77rRsaGYooNjd39
      VhITOny4RZLU0txy21L7yV+mOzMwY+54LFA4mKRLXe1aU75GnRe7lZSapd86zir52nk1d04o
      Mdyr9Y9H1dabprHBHj1Tkq3ucKm+O/i5cnOiSskr15Wuo3okPVkTC8tUXZynQCChyZErCqVn
      6+gPrZoMpEihVHW1H9P1eEiB6zGNxqVg6gIN/HFG0dxCVVauVvBhPyKwcsc9wKoVOWpo6dLG
      Z6t1ZN9+LS8tvrm2orRcedlRSdITZRXKzZx/c21hXoGqq1ZreDCmlLRMVZQu0/jkjbWS/Kj2
      HWpTWflKDY8nVF1drbHhmBYXLVNF2Upd7OlRKJisUFJCpaUlGvzzggaGp/5AHzCTgnV1dXX/
      vnBeRpYmhmMqXLxUQ+NjWllUKEmKRCMKhecrbV5A0UhU89KjCoekSCT6z+XRiBRIVXJiSOc6
      z0qRxVq0MF3pWTmK9fVp2ZJFykgJ6ET7aS1dUaacSKpO/d6t1cVF6u2/qqzsPA3FehUPpmnp
      knwF+c1VPEAP7GjQ9uNHNTgSV2VVlebxUhtzFIdDwxr/m2GNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGDtL3l1JotzaYH9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total by County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total by County (2)' width='192'>
      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
      APYy/x9i26idAICbaAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='US House Map (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Us Candidate Votes' width='192'>
      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
      zWZpNpu0221WV1dptVqsr6/TbDYpl8tUq1XK5TJSSqSUXWJ4VIjPb6ftk3N6WsAYQ6vV2pbD
      JxkQbGZYvXArta+0i9lslv7+/i6XHhsbY2FhoYvgtVqNkZER4D5ieZ7X86VpnDj6SRJN2t9J
      zv6oHKLXGJM/ccRTStFut6lWq7iuS7VaxRjDrVu3GBoaotFoEAQBUkqGhoYolUr09fU98J44
      gu4GsZPPJp/fjrifBjDGpO5tkuH1IpA401RKdXGr1Wr1fOcmN2hcl41e1Gw2abVaVKtVHMeh
      VquRy+UolUqbFntlZYXBwcGuehIfVNRfLz08OYkkEu5mc5PPxceQBmncJBpfHLk8z8MYQz6f
      7/ZXr9cZHR1lbW2NoaEh1tfXGR4e3iQle40xTQ2L3/d9H9d1U+2SpCoXt5uS/WUyGQYGBj73
      ksBa21Wr0yCJR2m4EM07qUJLKRkcHEyXHL0IID6wdrtNvV5nbm6O6enpTcgVdWqMYXl5mYmJ
      iZ4b3wt6EUnc4I0IYCeEk2y73eanGcm9ECoO2WyWvr4+1tbWHri3U+6eJq57EUByPL303KQ6
      EDGm3agGP26o1Wo0m80HuHvaeKWUm5hbms2Y7KOvrw8pJa7rbsax7QYmhCCbzZLJZJiamupe
      7+/v76ojuVyuS2ULCwu7WuQkx48gySHjP2kTjK73QrpeSBx/V5qkib/Ldd2uBIgM1Xa7je/7
      m3T1NORPW5OHRcikdEuzd+J/V6tVarUa1WqVRqPxuVSTIrtzJzZPnEji0j5tDyIcrVQqbGxs
      0G63N/W9I0stoiCg20G73d6EcNZaMpkMIyMjrK2tMTw8nDqJNFUo7t6MrkUT7aUSJTc5jhBp
      703TG+NEkXwmjWCiObZaLay11Gq1Tfd69b/VvYeBpAOgV5toPYMgIAju53Jns9nPnXcon8/j
      ed6un0vb163WpNkM09EzmQzGmJ0RAIQb1t/fTzabpdFooJQim83i+35XP47aRQsfGdFJZIXN
      uvpWXHCnasxO3V7JZyLpkYxlpPXj+z61Wq2n7h2HpDG/nUoVVyWj9z8Kp95q3YIg+NwRQGSr
      1Gq1LiE8CXXN932CICCbzYZOi908HIn9yCVYqVS6XDG+YUNDQ5tcglv5suMbn6Z6JBFhN+7W
      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
      RvhE4/8HVaYnrayKFMAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Votes per Candidate' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Votes vs Donations' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
