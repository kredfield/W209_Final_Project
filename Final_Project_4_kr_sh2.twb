<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <NavigationAction />
    <ParameterAction ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Final_Project_4_15642958352660' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
        <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
        <members>
          <member value='&quot;Map by Votes&quot;' />
          <member value='&quot;Map by Donations&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='county_race_vote_donate' inline='true' name='federated.111462w1qeyrfp1adgtd00ipgciu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='county_race_vote_donate' name='textscan.087laeq11cmjag1fk9s5z1h1k5vv'>
            <connection class='textscan' directory='C:/Users/Scott/OneDrive/Documents/Berkeley/W209/fp' filename='county_race_vote_donate.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.087laeq11cmjag1fk9s5z1h1k5vv' name='county_race_vote_donate.csv' table='[county_race_vote_donate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
            <column datatype='integer' name='county_fips' ordinal='3' />
            <column datatype='integer' name='Per_Capita_Inc' ordinal='4' />
            <column datatype='integer' name='Personal_Inc' ordinal='5' />
            <column datatype='integer' name='Population' ordinal='6' />
            <column datatype='string' name='state_postal' ordinal='7' />
            <column datatype='string' name='county_name' ordinal='8' />
            <column datatype='string' name='candidate' ordinal='9' />
            <column datatype='string' name='candidate_fec' ordinal='10' />
            <column datatype='string' name='party' ordinal='11' />
            <column datatype='string' name='office' ordinal='12' />
            <column datatype='integer' name='votes' ordinal='13' />
            <column datatype='real' name='total_donations' ordinal='14' />
            <column datatype='real' name='donation_count' ordinal='15' />
            <column datatype='real' name='total_race_donations' ordinal='16' />
            <column datatype='integer' name='total_race_county_votes' ordinal='17' />
            <column datatype='real' name='total_race_county_donations' ordinal='18' />
            <column datatype='integer' name='votes_winner' ordinal='19' />
            <column datatype='integer' name='donation_winner' ordinal='20' />
            <column datatype='integer' name='total_party_county_votes' ordinal='21' />
            <column datatype='real' name='total_party_county_donations' ordinal='22' />
            <column datatype='integer' name='county_votes_winner' ordinal='23' />
            <column datatype='integer' name='county_donation_winner' ordinal='24' />
            <column datatype='real' name='normalized_votes' ordinal='25' />
            <column datatype='real' name='normalized_donations' ordinal='26' />
            <column datatype='integer' name='party_binary' ordinal='27' />
            <column datatype='real' name='normalized_votes_interacted' ordinal='28' />
            <column datatype='real' name='normalized_donate_interacted' ordinal='29' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_fips</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per_Capita_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per_Capita_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Per_Capita_Inc</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Personal_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Personal_Inc</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_postal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_postal]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>state_postal</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate_fec</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate_fec]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate_fec</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[party]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>office</remote-name>
            <remote-type>129</remote-type>
            <local-name>[office]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>office</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_donations</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[donation_count]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_count</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_donations</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_race_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_votes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_donations</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes_winner</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_winner</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_party_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_votes</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_party_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_donations</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_votes_winner</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_donation_winner</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donations</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party_binary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[party_binary]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party_binary</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes_interacted</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donate_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donate_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donate_interacted</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Display Sheet' datatype='string' name='[Calculation_453737681150197760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
      <column caption='Candidate Fec' datatype='string' name='[candidate_fec]' role='dimension' type='nominal' />
      <column caption='County Donation Winner' datatype='integer' name='[county_donation_winner]' role='measure' type='quantitative' />
      <column caption='County Fips' datatype='integer' name='[county_fips]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Votes Winner' datatype='integer' name='[county_votes_winner]' role='measure' type='quantitative' />
      <column caption='Donation Winner' datatype='integer' name='[donation_winner]' role='measure' type='quantitative' />
      <column caption='normalized_votes' datatype='real' name='[normalized_votes]' role='measure' type='quantitative' />
      <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
      <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
      <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
      <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
      <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
      <column-instance column='[donation_winner]' derivation='Attribute' name='[attr:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[votes_winner]' derivation='Attribute' name='[attr:votes_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[donation_winner]' derivation='Count' name='[cnt:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[donation_winner]' derivation='CountD' name='[ctd:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[donation_winner]' derivation='None' name='[none:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
      <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
      <group caption='Action (Candidate,County Name,Party,State Postal)' hidden='true' name='[Action (Candidate,County Name,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (Candidate,Party)' hidden='true' name='[Action (Candidate,Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[party]' />
        </groupfilter>
      </group>
      <group caption='Action (Candidate,Party,State Postal)' hidden='true' name='[Action (Candidate,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,Party)' hidden='true' name='[Action (County Name,Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,Party,State Postal)' hidden='true' name='[Action (County Name,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,State Postal)' hidden='true' name='[Action (County Name,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (Party,State Postal)' hidden='true' name='[Action (Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state_postal, county_name'>
          <field>[state_postal]</field>
          <field>[county_name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Scott/OneDrive/Documents/My Tableau Repository/Datasources/county_race_vote_donate.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/04/2019 04:42:53 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='county_race_vote_donate' increment-value='%null%' refresh-type='create' rows-inserted='20502' timestamp-start='2019-08-04 04:42:53.712' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20502</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_fips</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_fips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_fips</remote-alias>
              <ordinal>1</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3649</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Per_Capita_Inc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Per_Capita_Inc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Per_Capita_Inc</remote-alias>
              <ordinal>2</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3553</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Personal_Inc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Personal_Inc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Personal_Inc</remote-alias>
              <ordinal>3</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3649</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>4</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3631</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_postal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_postal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_postal</remote-alias>
              <ordinal>5</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_name</remote-alias>
              <ordinal>6</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2378</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate</remote-alias>
              <ordinal>7</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1031</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate_fec</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate_fec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate_fec</remote-alias>
              <ordinal>8</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>883</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>party</remote-alias>
              <ordinal>9</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>office</remote-name>
              <remote-type>129</remote-type>
              <local-name>[office]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>office</remote-alias>
              <ordinal>10</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>votes</remote-alias>
              <ordinal>11</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_donations</remote-alias>
              <ordinal>12</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3511</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>donation_count</remote-name>
              <remote-type>5</remote-type>
              <local-name>[donation_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>donation_count</remote-alias>
              <ordinal>13</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>725</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_race_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_donations</remote-alias>
              <ordinal>14</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3511</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_county_votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_race_county_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_county_votes</remote-alias>
              <ordinal>15</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5447</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_county_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_race_county_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_county_donations</remote-alias>
              <ordinal>16</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3582</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>votes_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[votes_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>votes_winner</remote-alias>
              <ordinal>17</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>donation_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[donation_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>donation_winner</remote-alias>
              <ordinal>18</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_party_county_votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_party_county_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_party_county_votes</remote-alias>
              <ordinal>19</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5049</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_party_county_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_party_county_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_party_county_donations</remote-alias>
              <ordinal>20</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4532</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_votes_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_votes_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_votes_winner</remote-alias>
              <ordinal>21</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_donation_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_donation_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_donation_winner</remote-alias>
              <ordinal>22</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_votes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized_votes</remote-alias>
              <ordinal>23</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17254</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized_donations</remote-alias>
              <ordinal>24</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14224</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:county_name:nk]'>
          <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
        </filter>
        <filter class='categorical' column='[none:state_postal:nk]'>
          <groupfilter function='level-members' level='[none:state_postal:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.273794' measure-ordering='alphabetic' measure-percentage='0.696219' parameter-percentage='0.029987' rowDisplayCount='100000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:donation_winner:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>15</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>16</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>23</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:donation_winner:ok]&#10;[none:party:nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>1</bucket>
                <bucket>&quot;DEM&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>0</bucket>
                <bucket>&quot;DEM&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>0</bucket>
                <bucket>&quot;REP&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>1</bucket>
                <bucket>&quot;REP&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ctd:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:party:nk]&#10;[attr:votes_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>0</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>1</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>%many-values%</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>1</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>0</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>%many-values%</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:party:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;DEM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;REP&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='state_postal' />
        <field-sort-custom-order field='county_fips' />
        <field-sort-custom-order field='county_name' />
        <field-sort-custom-order field='candidate' />
        <field-sort-custom-order field='candidate_fec' />
        <field-sort-custom-order field='party' />
        <field-sort-custom-order field='office' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='votes' />
        <field-sort-custom-order field='total_donations' />
        <field-sort-custom-order field='donation_count' />
        <field-sort-custom-order field='total_votes' />
        <field-sort-custom-order field='votes_winner' />
        <field-sort-custom-order field='donation_winner' />
        <field-sort-custom-order field='total_county_votes' />
        <field-sort-custom-order field='total_county_donations' />
        <field-sort-custom-order field='county_votes_winner' />
        <field-sort-custom-order field='county_donation_winner' />
        <field-sort-custom-order field='total_party_votes_county' />
        <field-sort-custom-order field='total_party_donations_county' />
        <field-sort-custom-order field='total_donation_count_county' />
        <field-sort-custom-order field='Calculation_1319273230062022656' />
        <field-sort-custom-order field='Total Donations (bin)' />
        <field-sort-custom-order field='Per_Capita_Inc' />
        <field-sort-custom-order field='Personal_Inc' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='normalized_votes' />
        <field-sort-custom-order field='normalized_donations' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Same Sheet' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total by County' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total by County' />
      </command>
    </action>
    <action caption='Same Sheet 1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Us Candidate Votes' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Us Candidate Votes' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source type='sheet' worksheet='Map by Votes' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Pie Total Donation' />
      </command>
    </action>
    <action caption='Filter2' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dash with changing views' type='sheet'>
        <exclude-sheet name='Bar # of Donations' />
        <exclude-sheet name='Pie Total Donation' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dash with changing views' />
      </command>
    </action>
    <action caption='Same Sheet 2' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total by County (2)' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total by County (2)' />
      </command>
    </action>
    <action caption='Filter1' name='[Action8]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dash with changing views' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map by Donations' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dash with changing views' />
      </command>
    </action>
    <nav-action caption='Map by' name='[Action7]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Map by Donations' />
      <params>
        <param name='sheet' value='Map by Votes' />
      </params>
    </nav-action>
    <edit-parameter-action caption='Parameter1' name='[Action4]'>
      <activation type='on-hover' />
      <source type='sheet' worksheet='Map by Donations' />
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='$ per House Candidate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]</rows>
        <cols>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / ([federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]))</cols>
      </table>
      <simple-id uuid='{F23BB9FF-A904-401F-A559-71282BD2845B}' />
    </worksheet>
    <worksheet name='Bar # of Donations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' scope='rows' value='Number of Individual Donations' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</rows>
        <cols>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk])</cols>
      </table>
      <simple-id uuid='{32066775-2004-473B-8E3C-82C86D5C52E0}' />
    </worksheet>
    <worksheet name='Bar # of Donations (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5C8D31A0-AA41-450F-8F3F-7D76A81FF5B9}' />
    </worksheet>
    <worksheet name='Bar # of Donations (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{E3888DDC-2C16-4032-866C-93D97BEC5AFB}' />
    </worksheet>
    <worksheet name='Candidate Votes vs Donations'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes]' derivation='Sum' name='[sum:votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]'>
            <groupfilter function='level-members' level='[none:candidate:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]</cols>
      </table>
      <simple-id uuid='{B15F5557-C936-4D1A-997F-E28DA3184E8A}' />
    </worksheet>
    <worksheet name='Explanation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>This interactive map shows both voting and donation information at a county level, for the 2016 congressional elections. Use the &quot;Select View&quot; drop down menu to view the map by votes or donations. </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='508' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9A60AB75-063F-4CEB-B457-F672491BB8D0}' />
    </worksheet>
    <worksheet name='Map by Donate (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_donate_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_donate_interacted]' derivation='Sum' name='[sum:normalized_donate_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6949375.2669335324' min='-14787849.795397056' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='10047596.511373963' min='324873.58569716604' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{32EE3578-988E-40E1-9AD8-8F3F8D165C90}' />
    </worksheet>
    <worksheet name='Map by Donations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Donations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_donate_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_donate_interacted]' derivation='Sum' name='[sum:normalized_donate_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7363395.8091500523' min='-14022839.946596365' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='11023624.378876872' min='2763352.5680421493' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' num-steps='2' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State Postal:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{41D32722-7896-4D6A-9AF0-C5C706E7701B}' />
    </worksheet>
    <worksheet name='Map by Votes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_votes_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_votes_interacted]' derivation='Sum' name='[sum:normalized_votes_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7308437.7775747078' min='-13953506.087983372' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='11013227.725395329' min='2770787.4687242331' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' num-steps='2' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State Postal:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{39261132-0304-416A-A78D-CFA26D20FC94}' />
    </worksheet>
    <worksheet name='Map by Votes (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[votes_winner]' derivation='Attribute' name='[attr:votes_winner:ok]' pivot='key' type='ordinal' />
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]'>
            <groupfilter function='member' level='[attr:votes_winner:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7173114.8695446355' min='-14542987.838705925' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7312568.6699103191' min='1960147.083167108' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EBA4A509-A86E-4A5F-9D50-AA61C4C41904}' />
    </worksheet>
    <worksheet name='Map by Votes (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_votes_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_votes_interacted]' derivation='Sum' name='[sum:normalized_votes_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7073454.4047695613' min='-14272459.377853507' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7256042.4439830892' min='2720320.4917366654' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F89E83A5-A2F1-41D0-ACEE-901993559971}' />
    </worksheet>
    <worksheet name='Pie Total Donation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total County Donations&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_party_county_donations]' derivation='Sum' name='[sum:total_party_county_donations:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_party_county_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='279' />
            <format attr='height' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' value='272' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>$ </run>
                <run>Æ&#10;</run>
                <run>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2F1CA1D7-D40C-4B43-8AEC-1FB6272EEC25}' />
    </worksheet>
    <worksheet name='Pres'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US President&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7422578.4077404393' min='-14209091.804296914' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6999002.9555749316' min='2513002.6296488163' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E394C042-5C71-47B9-8C7D-FCFE5D2BFE80}' />
    </worksheet>
    <worksheet name='Senate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US Senate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7422578.4077404393' min='-14209091.804296914' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6999002.9555749316' min='2513002.6296488163' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{669847FB-3C0C-4020-BA92-FBB2D07E6910}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{90E885BD-F33E-4276-BB83-959A1A86A360}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{599D347A-A8F9-45BA-8EFB-B01A93A326C9}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</cols>
      </table>
      <simple-id uuid='{7F4A63E6-36D9-4B3A-A8AC-4EE50CDD232E}' />
    </worksheet>
    <worksheet name='US House Map (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_donations]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_donations]' derivation='Sum' name='[sum:normalized_donations:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7332935.8776561785' min='-14526204.679557364' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6924657.60306226' min='2344454.0062558725' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donations:qk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D44E7151-3300-40C2-8F02-9222D06C5EC7}' />
    </worksheet>
    <worksheet name='Votes Explanation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>The color indicates which party received the most votes or votes during the 2016 congressional election.  Red for Republicans and Blue for Democrats.&#10;&#10;Please hover over the county to see more information.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='508' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7921CA64-5D92-42E0-A9AB-54AADC43644D}' />
    </worksheet>
    <worksheet name='Votes per Candidate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes]' derivation='Sum' name='[sum:votes:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Greg\&quot; Ellison&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Gus\&quot; Rantz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Mike\&quot; Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Rick\&quot; John&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;[Write-in]&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;A. Donald McEachin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ACCAVITTI, JR., FRANK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adam B. Schiff&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ADAM KINZINGER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adam Smith&quot;' />
              <groupfilter from='&quot;Adrian Petrus&quot;' function='range' level='[none:candidate:nk]' to='&quot;Adriano Espaillat&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adrienne Nicole Edwards&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Agha Khan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Agha KHAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Al Lawson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AL McAFFREY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alan Bohms&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alan Lowenthal&quot;' />
              <groupfilter from='&quot;Albio Sires&quot;' function='range' level='[none:candidate:nk]' to='&quot;Alcee L. Hastings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alejandro Vega&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ALEX X. MOONEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alina Valdes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Allan Romaguera&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alma Adams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AMANDA HOWLAND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AMASH, JUSTIN&quot;' />
              <groupfilter from='&quot;Ami Bera&quot;' function='range' level='[none:candidate:nk]' to='&quot;Amodei, Mark E.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andre D. Carson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andrea Leigh McGee&quot;' />
              <groupfilter from='&quot;Andy Barr&quot;' function='range' level='[none:candidate:nk]' to='&quot;Andy Biggs&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Harris&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Millard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Whallon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angel Cadena&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angel Cardenas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angela Demaree&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ANGELA PENDLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Dalrymple&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann McLane Kuster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Wagner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Wofford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anna G. Eshoo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anna Throne-Hols&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anthony G. Brown&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Antonio C. Amador&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;April Freeman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Arik Bjorn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Arrington&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ART HALVORSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AUGUST (O&apos;NEILL) DEUSER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AUSTIN SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;B. Mark Walker&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Babin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bao Nguyen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BARBARA JEAN COMSTOCK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barbara Lee&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barrera&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BARRY LOUDERMILK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barry Welsh&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bartley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BEN R LUJAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;bennie g thompson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BERGMAN, JACK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bernice Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Beverly A. Goldstein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BILL FOSTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Otto&quot;' />
              <groupfilter from='&quot;Bill Pascrell&quot;' function='range' level='[none:candidate:nk]' to='&quot;Bill PASCRELL, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Posey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Billy Burkette&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Billy Long&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BISHOP, MIKE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Blaine Luetkemeyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Gibbs&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Latta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Patterson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Seay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BOBBY L. RUSH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bonnie Watson Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bonnie WATSON COLEMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Ashford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRAD SCHNEIDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Sherman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Wenstrup&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bradley Byrne&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bradshaw&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brady Pinero Walkinshaw&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRENDAN F BOYLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brent SONNEK-SCHMELZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brett Geymann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brett Murdock&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian Higgins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian J Heinrich&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRIAN K FITZPATRICK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian Mast&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bruce Davis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bruce Westerman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan Barrilleaux&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan Caforio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Burgess&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;C. A. Dutch Ruppersberger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cadien&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cain, Emily *&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cain, Emily Ann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Calvin Sidle&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Calvin Silde&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cargas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carlos Curbelo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carlos Santamaria&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carol Shea-Porter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carolyn Maloney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Casey Lucius&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Castro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Catherine Ping&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cathy McMorris Rodgers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cedric Richmond&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charlene Albarran&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES \&quot;\&quot;C.J.\&quot;\&quot; BARICEVIC&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charles \&quot;\&quot;Casper\&quot;\&quot; Stockham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES ALAN HERNICK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES W DENT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charlie Crist&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHERI BUSTOS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Blake Wiggins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Collins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Fedalei&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Gibson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Stewart&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christian Cano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHRISTINA M HARTMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHRISTINA OWEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christine Quinn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher H. Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher H. SMITH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher Peters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chuck Fleischmann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clark&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Claudia Tenney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clay Cope&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clay Higgins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CLEMENTS, PAUL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clint Didier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Colleen Deacon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Colm Willis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Conaway&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CONYERS, JR., JOHN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Corrogan R. Vaughn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Corry Westbrook&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Craig Bowden&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CROSS, Peter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cuellar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Culberson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dale K. Mensing&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Cox&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Donovan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Newhouse&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dana Rohrabacher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel B. Giroux&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel M. Wik&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel Webster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DANIEL WILLIAM LIPINSKI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danil Ezekiel Faust&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danniel Maio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DANNY K. DAVIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danny R. Turner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daria Novak&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DARIN LaHOOD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Darrell Issa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Darren Soto&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Cowell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Giles&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Hughes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Koller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Loebsack&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Reichert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID A BRAT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David A. Rosa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID B. MCKINLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David E. Bruderly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Gurfein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. COLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. Pinckney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. PINCKNEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David J. Putman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Kustoff&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David M Blackwell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David N. Cicilline&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David P. Joyce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Price&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Rouzer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Schweikert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Valadao&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David W. Jolly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David W. Kent&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Young&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Debbie Wasserman Schultz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DEBORAH L WILLIAMS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Denise Gitsham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DENISE JUNEAU&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dennis A. Ross&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;dennis c quinn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Denny Heck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Derek Kilmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DEREK W KITTS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Devin G. Nunes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diana DeGette&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diana Kastenbaum&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diane Black&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dianne Curry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dimitri Cherny&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DINGELL, DEBBIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doggett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Don Bacon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DON WILSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald Howbert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald M. Payne Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald M. PAYNE, JR.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald P. Larson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DONALD STERNOFF BEYER Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald W. Norcross&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DONALD W. NORCROSS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doris Matsui&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Applegate&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Basler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DOUG COLLINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug La Malfa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Lamborn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Owens&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Shepherd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DOUGLAS BELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DREW FERGUSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DRISKELL, GRETCHEN D.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Du Wayne Gregory&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Duncan Hunter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DWIGHT EVANS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EARL âBUDDYâ CARTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Albertson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Perlmutter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Royce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EILEEN MCNEIL BEDELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elbert Guillory&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eleanor Holmes Norton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elijah Cummings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eliot Engel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elise Stefanik&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elizabeth Esty&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Emanuel Cleaver II&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Emilio Huerta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eric Swalwell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Erik Paulsen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ERIN R MCCLELLAND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ernest T. Reeves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EVAN JENKINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EVANS, H.D. CHIP&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eve Nunez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;F. James Sensenbrenner, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Farenthold&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Flores&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Fran Person&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Francis Rooney&quot;' />
              <groupfilter from='&quot;Frank A. Lobiondo&quot;' function='range' level='[none:candidate:nk]' to='&quot;FRANK A. LOBIONDO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;FRANK D. LUCAS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Guinta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank LoBiondo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Nelson Drake&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank PALLONE, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Spotorno&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;FRANKIE ROBBINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frederick John LaVERGNE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;French Hill&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;G. Burt Lancaster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;G. K. Butterfield&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GABBARD, Tulsi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gail Schwartz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gallego&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Garret Graves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gary Jill Stein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gary Palmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Garza&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Genevieve (Gen) Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George Athanasopoulos&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George E. McDermott&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George Holding&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GEORGE J KELLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GERALD EDWARD CONNOLLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gibson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Giroux, Daniel B.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Glenn Grothman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GLENN WILLIAM THOMPSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Glo Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gohmert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gonzalez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gordon Christensen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GORMAN, JEFF&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grace F. Napolitano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grace Meng&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Granger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Green&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GREG DUKE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Greg Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;gregg harper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gregory Meeks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grover Joseph Rees&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gus Michael Bilirakis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gwen S. Moore&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;H. Powell Dew, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hakeem Jeffries&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HANABUSA, Colleen Wakako&quot;' />
              <groupfilter from='&quot;Hardin&quot;' function='range' level='[none:candidate:nk]' to='&quot;Hardy, Cresent&quot;' />
              <groupfilter from='&quot;Harold \&quot;\&quot;Hal\&quot;\&quot; Rogers&quot;' function='range' level='[none:candidate:nk]' to='&quot;Harold Bratcher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Harold Russell Taub&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector Castillo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector L. Castillo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector L. CASTILLO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HENRY C âHANKâ JOHNSON JR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hensarling&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Herman L. Vidrine&quot;' />
              <groupfilter from='&quot;Holbrook&quot;' function='range' level='[none:candidate:nk]' to='&quot;Holbrook, Mark I.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hosea Cleveland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HOWARD MORGAN GRIFFITH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Huelskamp, Tim&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HUIZENGA, BILL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hurd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ileana Ros-Lehtinen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Isadore Hall, III&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;J. Wesley Casteen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JACK A MCGRANN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jack Martins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jack Orswell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackie Speier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackie Walorski&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackson Lee&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jacob \&quot;Dorian Phibian\&quot; Hebert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;jacob owens&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jacob Turk&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jaime Herrera Beutler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JAMES A JONES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James E Jim Clyburn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JAMES NEAL HARRIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Neu Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James P. McGovern&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Piotrowski&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James R. COMER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James R. Langevin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Veltmeyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jamie Raskin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jan Schneider&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jane D. Dittmar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Janet Garrett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JANICE D. SCHAKOWSKY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jared Polis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jared W. Huffman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Chaffetz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Lewis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jay Sidie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Denham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Duncan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Fortenberry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Stone&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JEFFREY A. LEEF&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jenkins, Lynn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jennifer Martinez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jermaine Sampson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerrold Nadler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerry Kobishop (wr-in)&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerry McNerney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jesse Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Banks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Cooper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Costa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Hagedorn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Himes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Jordan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Lange&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Lawrence&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Moeller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Mowrer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Postma&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Renacci&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JIM WALZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jimmy Panetta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOAN McCARTHY LASONDE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JODY HICE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Courtney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Garcia&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Pakootas&quot;' />
              <groupfilter from='&quot;Joe Vitollo&quot;' function='range' level='[none:candidate:nk]' to='&quot;Joe Wilson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John A. YARMUTH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Adams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John B. Larson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;john bouie, ii&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Dale&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN F MORROW&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Faso&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Garamendi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John J. Duncan, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John K. Delaney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Katko&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN M. SHIMKUS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Mica&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John P. McNeil&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Plumb&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN R. LEWIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Rutherford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Sarbanes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Shaban&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Yarmuth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Johnny M. Tacherra&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHNSON, LON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JONES, JEFF&quot;' />
              <groupfilter from='&quot;Jose Serrano&quot;' function='range' level='[none:candidate:nk]' to='&quot;Joseph \&quot;Joe\&quot; Swider&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph Crowley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph M. Wenzel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph M. WENZEL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph P. Kennedy, III&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Josh Brannon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Josh Gottheimer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joshua Gottheimer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOSHUA HARRIS-TILL&quot;' />
              <groupfilter from='&quot;Joshua S. Gottheimer&quot;' function='range' level='[none:candidate:nk]' to='&quot;JOSHUA T BURKHOLDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joyce Beatty&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Juan M. Hidalgo, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Juan Vargas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Judy Chu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Julia Brownley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JUNIUS RODRIGUEZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Justin Donald Fareed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KAAIHUE, Angela Aulani&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kai Degner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Karen Bass&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Katherine M. Clark&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kathleen Rice&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kathy Castor&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KEITH JAMES ROTHFUS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Keith Mundy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ken Buck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ken Calvert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth \&quot;\&quot;Ken\&quot;\&quot; McGurn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth Cutno&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth W. Wright&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KERITH STRANO TAYLOR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Cramer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin McCarthy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Miller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Khary Penebaker&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KIHUEN, RUBEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KILDEE, DANIEL T.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kim Myers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kim Weaver&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KIM, Howard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KLAUSNER, HOWARD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kristi Noem&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KUMAR, ANIL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kyrsten Sinema&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lacy Clay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Buchson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Bucshon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry D. Bucshon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Rader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Laura Sterling&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LAWRENCE, BRENDA L.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lee Ann Dugas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lee Zeldin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lenore Solis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Leon Threatt&quot;' />
              <groupfilter from='&quot;LEONARD FRANCIS MCALLISTER&quot;' function='range' level='[none:candidate:nk]' to='&quot;Leonard LANCE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LEVIN, SANDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Linda T. Sanchez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lingerfelt&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Liz Cheney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LLOYD K SMUCKER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lois Frankel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lorna Phillipson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lorna PHILLIPSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LOU BARLETTA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lou Correa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Louie J. Campos&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Louise Slaughter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LuAnn L. Bennett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lucille Roybal-Allard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LUIS V. GUTIERREZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Luke Messer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn C. Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn Jenkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mal Hyman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marc Hennemann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marchant&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marcia L. Fudge&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marcy Kaptur&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mario Diaz-Balart&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Arness&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Assini&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark C. Alliegro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARK D. WICKLUND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark DeSaulnier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;mark gladney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARK HUNT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Meadows&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Plaster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Pocan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Sanford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Takano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARKWAYNE MULLIN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marsha Blackburn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marshall Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marshall, Roger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martha McSally&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martha Roby&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martin L Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARY ELLEN BALCHUNIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mary Hoeft&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATT DETCH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matt Gaetz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matt Heinz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW ALTON CARTWRIGHT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW CONNOLLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW DEW ROWE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matthew M. Corey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mauck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Maxine Waters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McCaul&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McDowell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McKellar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Melody Shekari&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Melvin L. \&quot;Kip\&quot; Holden&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MERRIE LEE SOULES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mia Love&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL BOST&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL D PARRISH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael E. Capuano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Eggman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL F DOYLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL H ROMERO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael L. Lorentz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael L. Wade&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL M MOLESEVICH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael O&apos;Reilly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL PAUL MARSICANO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Pompeo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael T. Pearson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Wager&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michele Young&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHELLE LUJAN GRISHAM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mick Mulvaney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Coffman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Derrick&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Gallagher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Honda&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MIKE MANYPENNY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MIKE QUIGLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Rogers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Simpson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Thompson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Turner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mikel Weisser&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mimi Walters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Misty Plowright&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mitchell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MITCHELL, PAUL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mo Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Monica Vernon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MOOLENAAR, JOHN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Morgan Carroll&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MORSE, CHRISTOPHER R.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MURPHY, DENNIS B.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;N. Eugene Cleek&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nancy Jo Kemper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nancy Pelosi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nanette Diaz Barragan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Narvaiz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nathan Mathis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Neal Dunn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nicholas Morse&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nicola S. Tsongas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nita Lowey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Norma J. Torres&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nydia Velazquez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;O&apos;Rourke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OCASIO, Javier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Oliver Jenkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Olson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Omar Navarro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OSTROV, Shirlene D. (Shirl)&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OSTROV, Shirlene DelaCruz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pat McDonough&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pat Tiberi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICIA C. MCCRACKEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICK HARLAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICK L MEEHAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Patrick Malloy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Patrick McHenry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Babeu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Chabot&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Cook&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Gosar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Spain&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Tonko&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paula Hawks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Perry, Mary&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pete Aguilar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pete Glidewell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PETER \&quot;\&quot;PETE\&quot;\&quot; DiCIANNI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Clemens&quot;' />
              <groupfilter from='&quot;PETER J. ROSKAM&quot;' function='range' level='[none:candidate:nk]' to='&quot;Peter King&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Theron&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Visclosky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Phil Oliva&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Phil Roe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Philip Rosenthal&quot;' />
              <groupfilter from='&quot;Pingree&quot;' function='range' level='[none:candidate:nk]' to='&quot;Pingree, Mchellie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Poe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Poliquin, Bruce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pompeo, Michael&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Potter, Britani&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pramila Jayapal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RaÃºl Grijalva&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rafael A. Dagnesses&quot;' />
              <groupfilter from='&quot;RAJA KRISHNAMOORTHI&quot;' function='range' level='[none:candidate:nk]' to='&quot;Ralph Abraham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RANDALL M. \&quot;\&quot;RANDY\&quot;\&quot; HULTGREN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Randy Perkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RASHID MALIK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ratcliffe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Raul R. Labrador&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Raul Ruiz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;REIGLE H&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rhue R. Reis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard A. Morckel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Alarcon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard B. Fox&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICHARD D DAUGHERTY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard E. Neal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICHARD GREGORY PRIEM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Hudson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Lieberman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Reichard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICK ALLEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Bryson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Crawford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Larsen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rickey Hobson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rita Ramirez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ro Khanna&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rob Bishop&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROB WOODALL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT A BRADY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Aderholt&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Ardini&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT CORTEZ SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT DOLD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Evans&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert J. Sutherland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT JOSEPH WITTMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Klepinger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Lamar \&quot;Bob\&quot; Bell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert M. Neeld&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Matthew Tager&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Pittenger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert W. Derlet&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT WILLIAM GOODLATTE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBIN KELLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROCHESTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rod Blum&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RODNEY DAVIS&quot;' />
              <groupfilter from='&quot;Rodney P. Frelinghuysen&quot;' function='range' level='[none:candidate:nk]' to='&quot;RODNEY STOOKSBURY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roger Allen Petersen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roger Hernandez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Desantis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Drake&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Kind&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Varasteh&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rosa L. DeLauro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rosen, Jacky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roy Rich&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ruben Gallego&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RYAN A COSTELLO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Downing&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Greene&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Peterson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Solen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RYAN ZINKE&quot;' />
              <groupfilter from='&quot;S. Bret Guthrie&quot;' function='range' level='[none:candidate:nk]' to='&quot;S. Brett GUTHRIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Salud Carbajal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sam Graves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SANFORD BISHOP&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sarah Lloyd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott A. Angelle&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott DesJarlais&quot;' />
              <groupfilter from='&quot;Scott Fuhrman&quot;' function='range' level='[none:candidate:nk]' to='&quot;Scott GARRETT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SCOTT PERRY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott Peters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott R. Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott R. Tipton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott Wharton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SCOTT WILLIAM TAYLOR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sean Duffy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sean Maloney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sessions&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Seth W. Moulton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shaun D. Brown&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelli Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelly Schratz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelly Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SHKRELI, SUZANNA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sidie, Jay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SMITH, DOUGLAS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stacy Ries Snyder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steny H. Hoyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephanie Murphy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephen F. Lynch&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephen Tryon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Chabot&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Cohen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve King&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Knight&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;STEVE PEARCE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;STEVE RUSSELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Scalise&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Stivers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Womack&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Fought&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven G. Bailey&quot;' />
              <groupfilter from='&quot;STEVEN J SANTARSIERO&quot;' function='range' level='[none:candidate:nk]' to='&quot;Steven J. UCCIO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;steven palazzo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Reynolds&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Specht&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Uccio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stewart Mills&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stuart Starr&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sue Caro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sue Googe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan A. Davis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan W. Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Suzan DelBene&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Suzanne Savary&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Talia Fuentes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tarkanian, Danny&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Budd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Deutch&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted W. Lieu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Yoho&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Terri A. Sewell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tharon Chandler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;THOMAS A MARINO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Massie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas MASSIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Mills&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Reed, II&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Suozzi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thornberry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thuy Lowe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tim Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tim Sheridan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TIMOTHY F MURPHY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Titus, Dina&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Todd A. Bloom&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Todd Rokita&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom A. Garrett Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM COLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Emmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM GRAVES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Macarthur&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom MacARTHUR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom McClintock&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Nelson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom O&apos;Halleran&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM PRICE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Rice&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Rooney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tommy A. Schrader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tommy Schrader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TONIA KHOURI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Cardenas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Evans&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Ventrella&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Trent Franks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;trent kelly&quot;' />
              <groupfilter from='&quot;Trey Collingsworth&quot;' function='range' level='[none:candidate:nk]' to='&quot;Trey Hollingsworth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TROTT, DAVID A.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Troy Hollingsworth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tyler Fischella&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;UPTON, FRED&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Val Demings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Veasey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vela&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vern Buchanan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vicky Hartzler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;VICTOR ARMENDARIZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;VINCE KOLBER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Virginia Foxx&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;W. John Williamson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wakely&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WALBERG, TIM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Walter B. Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Walter Dartland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Warren Davidson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wayne Alberson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wayne Liebnitzky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Weber&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wendy Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Westley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Will Boyd, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William (Bill) McCullough&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William Burke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WILLIAM F SHUSTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William R. Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William Richard Keating&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William T. Newton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WIRTH, DEBRA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Woolridge&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Xavier Becerra&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Yoder, Kevin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Yvette Clarke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Zephyr Teachout&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Zoe Lofgren&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</cols>
      </table>
      <simple-id uuid='{D700B012-036B-4621-8C66-AE6EC1EAA014}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dash with changing views'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
          <members>
            <member value='&quot;Map by Votes&quot;' />
            <member value='&quot;Map by Donations&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='53' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='45' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='30' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='28' type='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='98000' id='26' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                    <zone h='98000' id='24' type='layout-basic' w='63288' x='800' y='1000'>
                      <zone h='98000' id='20' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                        <zone h='98000' id='16' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                          <zone h='98000' id='14' type='layout-basic' w='63288' x='800' y='1000'>
                            <zone h='98000' id='7' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                              <zone h='98000' id='3' param='vert' type='layout-flow' w='63288' x='800' y='1000'>
                                <zone h='97875' id='12' name='Map by Donations' show-title='false' w='63288' x='800' y='1000'>
                                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='125' id='13' name='Map by Votes' show-title='false' w='63288' x='800' y='98875'>
                                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='98000' id='59' name='Votes per Candidate' show-title='false' w='35112' x='64088' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='25500' id='68' name='Explanation' w='62600' x='900' y='1750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='47875' id='27' name='Pie Total Donation' show-title='false' w='35700' x='65200' y='875' />
        <zone h='50625' id='43' name='Bar # of Donations' show-title='false' w='36200' x='63600' y='49375' />
        <zone h='29250' id='91' name='Votes Explanation' w='61600' x='1100' y='20750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='46700' y='13125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='9625' id='94' is-centered='0' is-scaled='1' param='C:/Users/Scott/OneDrive/Pictures/legend.PNG' type='bitmap' w='13800' x='2200' y='39375' />
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='45' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='30' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='28' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='98000' id='26' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                      <zone h='98000' id='24' type='layout-basic' w='63290' x='800' y='1000'>
                        <zone h='98000' id='20' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                          <zone h='98000' id='16' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                            <zone h='98000' id='14' type='layout-basic' w='63290' x='800' y='1000'>
                              <zone h='98000' id='7' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                                <zone h='98000' id='3' param='vert' type='layout-flow' w='63290' x='800' y='1000'>
                                  <zone h='125' id='12' name='Map by Donations' show-title='false' w='63290' x='800' y='1000'>
                                    <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                  <zone h='97875' id='13' name='Map by Votes' show-title='false' w='63290' x='800' y='1125'>
                                    <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='49000' id='27' name='Pie Total Donation' show-title='false' w='35110' x='64090' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='43' name='Bar # of Donations' w='35110' x='64090' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
            <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='18900' y='12000' />
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='103' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='104' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='47875' id='27' is-fixed='true' name='Pie Total Donation' show-title='false' w='35700' x='65200' y='875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97875' id='12' is-fixed='true' name='Map by Donations' show-title='false' w='63288' x='800' y='1000'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='59' is-fixed='true' name='Votes per Candidate' show-title='false' w='35112' x='64088' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='204' h='25500' id='68' is-fixed='true' name='Explanation' w='62600' x='900' y='1750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='46700' y='13125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='29250' id='91' is-fixed='true' name='Votes Explanation' w='61600' x='1100' y='20750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='77' h='9625' id='94' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Scott/OneDrive/Pictures/legend.PNG' type='bitmap' w='13800' x='2200' y='39375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50625' id='43' is-fixed='true' name='Bar # of Donations' show-title='false' w='36200' x='63600' y='49375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='125' id='13' is-fixed='true' name='Map by Votes' show-title='false' w='63288' x='800' y='98875'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{774B7288-7F3D-489B-9CB7-F8F01EA8E589}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Us Candidate Votes' id='1'>
                    <capturedDeltas>
                      <worksheet name='Map by Donations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7013286.9990137909' min='2442845.5362214488' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6161713.1272184942' min='-15056284.747356778' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Total by County' id='2'>
                    <capturedDeltas>
                      <worksheet name='Bar # of Donations'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Map by Donations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7067711.4259140678' min='3646871.0507484148' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6355917.255950857' min='-16165679.842839595' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Votes vs Donations' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{B7810F8D-6EC4-4FB6-8987-AD73836584BD}' />
    </dashboard>
    <dashboard name='Total by County'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='52' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='49' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='49000' id='3' name='Map by Donations' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='15' name='Pie Total Donation' w='49200' x='800' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='35' name='Bar # of Donations' w='49200' x='50000' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750' />
        <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625' />
        <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='156' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='157' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Map by Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Pie Total Donation' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='35' is-fixed='true' name='Bar # of Donations' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{156FD58E-F13B-433C-9B38-7F02D949D65C}' />
    </dashboard>
    <dashboard name='Total by County (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='52' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='49' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='49000' id='3' name='Map by Donations' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='15' name='Pie Total Donation' w='49200' x='800' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='84' name='Bar # of Donations (2)' w='49200' x='50000' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750' />
        <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625' />
        <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='157' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='158' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Map by Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Pie Total Donation' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='84' is-fixed='true' name='Bar # of Donations (2)' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EE9F55AD-1699-4806-B79B-F073DABF6FCA}' />
    </dashboard>
    <dashboard name='Us Candidate Votes'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
          <members>
            <member value='&quot;Map by Votes&quot;' />
            <member value='&quot;Map by Donations&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
        <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='98' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='95' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='64' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='61' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='20' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                    <zone h='98000' id='18' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                      <zone h='98000' id='16' type='layout-basic' w='98400' x='800' y='1000'>
                        <zone h='94000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                          <zone h='94000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                            <zone h='94000' id='93' name='Map by Votes' w='98400' x='800' y='1000'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                        <zone h='4000' id='100' param='vert' type='layout-flow' w='98400' x='800' y='95000' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9125' id='65' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16800' x='81500' y='53625' />
        <zone h='6500' id='96' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' w='16800' x='80700' y='4125' />
        <zone h='5500' id='99' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='82000' y='11875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='165' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='166' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9125' id='65' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16800' x='81500' y='53625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='96' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' w='16800' x='80700' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='94000' id='93' is-fixed='true' name='Map by Votes' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='99' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='82000' y='11875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5326E33C-41A6-4915-921A-E79C52A16406}' />
    </dashboard>
    <dashboard name='Votes vs Donations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
        <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='50' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='53' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='51' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='49' name='Candidate Votes vs Donations' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6500' id='54' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='82500' y='11375' />
        <zone h='7250' id='56' name='Candidate Votes vs Donations' pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='85400' y='2125' />
        <zone h='6500' id='55' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' w='16800' x='82500' y='17000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='141' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='142' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='54' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='82500' y='11375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='55' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' w='16800' x='82500' y='17000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='49' is-fixed='true' name='Candidate Votes vs Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='56' name='Candidate Votes vs Donations' pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='85400' y='2125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{35D6897E-1A73-4F10-B039-994C44F6C4DF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dash with changing views'>
      <viewpoints>
        <viewpoint name='Bar # of Donations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Explanation' />
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Map by Votes'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Pie Total Donation'>
          <highlight field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='Votes Explanation' />
        <viewpoint name='Votes per Candidate'>
          <zoom type='entire-view' />
          <highlight field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <simple-id uuid='{4F9BE995-60E3-4C4D-9737-CA352404A7A5}' />
    </window>
    <window class='dashboard' name='Us Candidate Votes'>
      <viewpoints>
        <viewpoint name='Map by Votes'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{47BE7D0E-1D32-4C46-9C8B-1673DCC6856C}' />
    </window>
    <window class='dashboard' name='Total by County'>
      <viewpoints>
        <viewpoint name='Bar # of Donations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Pie Total Donation' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AFDABAED-A0F2-42D6-8AE7-E3766E9ABF6E}' />
    </window>
    <window class='dashboard' name='Total by County (2)'>
      <viewpoints>
        <viewpoint name='Bar # of Donations (2)' />
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Pie Total Donation' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{44BBF57F-82BD-4039-840C-AC8A6E9EF3F5}' />
    </window>
    <window class='dashboard' name='Votes vs Donations'>
      <viewpoints>
        <viewpoint name='Candidate Votes vs Donations'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2EE89F30-6326-4A9F-A967-A907A1AD44B3}' />
    </window>
    <window class='worksheet' name='Map by Donations'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='31' type='pages' />
            <card size='138' type='filters' />
            <card size='220' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]' type='filter' />
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:donation_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_donation_winner:qk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:qk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9D490D5C-7EAB-4AA2-B7BA-6CF0F0355CED}' />
    </window>
    <window class='worksheet' name='Bar # of Donations'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90279A2D-4E39-40F1-8D72-C4F4A6BA06F1}' />
    </window>
    <window class='worksheet' name='Pie Total Donation'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8634721-91A9-4CEF-9F7A-26661D49E618}' />
    </window>
    <window class='worksheet' name='Map by Votes'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
        <map-navigation value='1' />
      </viewpoint>
      <simple-id uuid='{3F52DCAC-069A-4C36-9D2B-02403311EAF5}' />
    </window>
    <window class='worksheet' name='Candidate Votes vs Donations'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' />
            <card pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FC924821-6BFF-4566-BDC2-F45612CA1F01}' />
    </window>
    <window class='worksheet' name='US House Map (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donations:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{88AC9686-A1F6-4C7B-B924-0F93FDA32832}' />
    </window>
    <window class='worksheet' name='Senate'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E78C116D-563D-4D30-A313-F362D67D8A2F}' />
    </window>
    <window class='worksheet' name='Map by Votes (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]&#10;[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{87715CC3-FAB9-4626-8125-5FD703C9F71C}' />
    </window>
    <window class='worksheet' name='Map by Votes (3)'>
      <cards>
        <edge name='left'>
          <strip size='287'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{79524F4B-0279-4BD2-916B-F1606619EE0D}' />
    </window>
    <window class='worksheet' name='Map by Donate (2)'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5CD988E4-D3E5-43A9-B461-A0DBB686192E}' />
    </window>
    <window class='worksheet' name='Pres'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8106DE6D-7A08-47AB-977B-F6A6F9B57CA6}' />
    </window>
    <window class='worksheet' name='$ per House Candidate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EBD10A94-E36E-477D-91FC-39C8DA945043}' />
    </window>
    <window class='worksheet' name='Votes per Candidate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{417269ED-B07B-45D7-972E-0161CDCB5DA6}' />
    </window>
    <window class='worksheet' name='Bar # of Donations (2)'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5B943908-2C80-4583-BCC2-EC801D119669}' />
    </window>
    <window class='worksheet' name='Bar # of Donations (3)'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A101C932-7DC8-4DB2-B106-1DCAC0E8501E}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D48CF897-FA70-40C0-A418-21E5FADF0067}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F66C50FD-2D4C-4F07-BBB0-E35A33A9DA22}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5EB41E4A-53D3-4F69-AD7E-7E5E9D1D579C}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{315CE4A8-FADF-4D3E-9D6C-A9E680EC23F1}' />
    </window>
    <window class='worksheet' name='Explanation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='300'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{586DBC73-7DBB-4CC4-8B6B-4A27C795BC7D}' />
    </window>
    <window class='worksheet' name='Votes Explanation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='300'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59F9F848-E929-4FA1-AEE7-B67E02B7AC93}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='$ per House Candidate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar # of Donations' width='192'>
      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
      krz6idcAKBWLAGRyk6wpkVxs5CRYMtVIA0imGmkAyVQjDSCZai50KsT7dzb55rcHuTt/4+1X
      +MLry+fYI8lV40IboGO53N9o9Mstwz7H3kiuInIIJJlqpAEkU400gGSqOdEcwO62WX20TbWS
      p2G6VEsFPM+lVCqdVf8kkjPlRAZwuh3cEFqmTUoIVlfukK9cp3BGyXBR+GRCVTRZkptMhjuR
      TibDTYgeT6NGTQhV6k7A/MI1LNs5u2Q45cmEqsOJWDIZ7tnbPc9kuCCEexvNfnmulKGQSYxo
      zj0Z7oBUtsBrrxVOsorkFPA2NwnN7mBB+eoMOXdbJv/k997pl//hVz7Dlz/zwnNr/0I/B5D0
      aPz+H2C//4N+Ofdv/jXsZ+VKng15F0gy1VzZK0DoOPhb2/2yks2cY28uPm3TodV1++WZfIp0
      MnaOPXo+XFkDeGvrbH/tn/XLmS9/Gb74K+fYo4vNn/1glf/4rR/3y//473yOtz99/Rx7dLY4
      XsD/ePfO+RjAsFw63cFHk0q5JKmEfh5dkUwpXdvjd//o/dM1wJ/9YJXvf7TRL//mlz7J4szh
      dyf/1/ce8I0/+Um//Nu/+Tk+/6mLc7axXZ9/9Dv/rV9+7cYMv/3Vz59jjyRnxaka4MFGg3d+
      /Khf/rXPvsTizGm28HyIot5X5A7oWO5T1JJJiTwPv17vl5VkcuJ1f3R/m9/748FJ8ytvv8Kv
      f/72M/fpYxmgvrPJbttmtlLEdV2q1eozd+S8CJpNtr72z/vlxOufhq/8xjn26OriPV5j659+
      rV/O/PKX4Eu/OtG6rhdQb1v9suV4T1FPzscyQNf1ycU0Hj+6T67yfIcufq2G/cEH/XJs+dle
      kInCkKBW65fDdueZ6juKb3zrRzQ7vatKPKbyW7/+5pm08yTv/PghP7iz1S//xi+9ymLl43/S
      487jGn/+o7V++e3Xr/MLL80/Ux+fxN/Zwf7ww35ZW74x8body+V791b65cVKltvXK0fqP5YB
      kjGVvbbL0rVbOK7L0zJI2n/8PzG+9a1+Of73/x5w+NJn/+xnmO98p1+OvfUWcPg2nLuySv3f
      /4d+Ofe3/xa88OmPsxnPlXd/usZGrWeudEI/EwM0//Mf0v2Lv+iX4//gt7i7ZvO/3x8cEF96
      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
    </thumbnail>
    <thumbnail height='192' name='Bar # of Donations (2)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Candidate Votes vs Donations' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dash with changing views' width='192'>
      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
      hJSb4WkuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Explanation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map by Donate (2)' width='192'>
      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
      a83/B+jaEIcbeIKfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map by Votes' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Pie Total Donation' width='192'>
      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
      QDC0/w9cSuTTnvjE/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pres' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAF0ElEQVR4nO3d30/VdRzH8RfnHIQDeI6B/ChElFQSRAQH6bDSZvbDLmTddNHWfbl10T/A
      P2BrrgvlomY1axXpWqRrTiDmqgulTDHRIHWhpPw4KD/kxzld2ExDc0wU2uv5uDrnfDjf8z5n
      e/I9Z+d7zklKJBIJAaYCsz0AMJsIANYIANZuC+BwY4N21+9WQ2OTNNqvnzvOT3uDv/70vXbt
      +WzGBgQepNCtZ46f7tQbb72toBI6cnCv9jadVm1trSqKsvTVgUOqrHlOxTnJ6uiO6fyFS8rN
      ylBVVZXa2o5pTUWlkiRNhDIUHL86S3cHmJ7b9gC1W7do13s79UVjk2pqNmjdphe1uWatGvY3
      6tXXXtcP336twYGL+vJAqzZtekoXzpxU/8ioTpzoUNLf21i1quzmaWCuuyWACY0F5mv79jfV
      231WCgQ0fPWa4vH4lCtVrd+g9JSQXnh+oz7c+Y6K1j79EEcGZk7g1pM9507p/Q8+0uaXtkmR
      AhWmDujIsXa9sm2rPv14j9ZteVmRBY9qeUG2JCkta4mSUtK0ruSxG5sY7Vd9fb3i8Ul9su/g
      LNwdYHqS7ueNsB+bv9FIuEAbnyybyZmAh+a+AgD+73gfANYIANYIANZC9/4TT319ferr65vt
      MabIz8/XyMjIbI8xRTgcnpNzZWZm/uc6ewBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBY4wMxdxEOh+/5YYrZEAqFFA6HZ3uMKebqXPfCt0LAGk+BYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYO2OATQ3NUua0I4d7yohqbW1VZcvX77rRsaGYooNjd39
      VhITOny4RZLU0txy21L7yV+mOzMwY+54LFA4mKRLXe1aU75GnRe7lZSapd86zir52nk1d04o
      Mdyr9Y9H1dabprHBHj1Tkq3ucKm+O/i5cnOiSskr15Wuo3okPVkTC8tUXZynQCChyZErCqVn
      6+gPrZoMpEihVHW1H9P1eEiB6zGNxqVg6gIN/HFG0dxCVVauVvBhPyKwcsc9wKoVOWpo6dLG
      Z6t1ZN9+LS8tvrm2orRcedlRSdITZRXKzZx/c21hXoGqq1ZreDCmlLRMVZQu0/jkjbWS/Kj2
      HWpTWflKDY8nVF1drbHhmBYXLVNF2Upd7OlRKJisUFJCpaUlGvzzggaGp/5AHzCTgnV1dXX/
      vnBeRpYmhmMqXLxUQ+NjWllUKEmKRCMKhecrbV5A0UhU89KjCoekSCT6z+XRiBRIVXJiSOc6
      z0qRxVq0MF3pWTmK9fVp2ZJFykgJ6ET7aS1dUaacSKpO/d6t1cVF6u2/qqzsPA3FehUPpmnp
      knwF+c1VPEAP7GjQ9uNHNTgSV2VVlebxUhtzFIdDwxr/m2GNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGDtL3l1JotzaYH9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total by County' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total by County (2)' width='192'>
      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
      B13nB3loD4+oAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='US House Map (2)' width='192'>
      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
      Fc7w/wHQE7Y6bhtz3QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Us Candidate Votes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEH0lEQVR4nO3ZX08cVQCG8XeBJVgbKIFYscifrq1ua7eWKN7pVzB+0V56Y02MsVRiLVB1
      i21hd6EiXSOw0s1mpawXpkQuemNQYp7nd3UmJ3MyM5knc5Ip9Hq9XiSovtO+AOk0GYDQDEBo
      BiA0AxDasQBqtfUkycLCQpKkXq+l2Wy+9OTus73sPeu+fPXeQdbWG0mS9Vrt2FRrb++fXK90
      ogb+flCr1TN1/myWl1ZTmf8gjcZWZqcn09n5Od89/CXFYjHlyZF8X/8txeJgrk6dS7f4apa+
      /SbdP57nrcr72X3yMLu/tzMxU87E2NnU1h/n4uyFbDQ2MzzUn8eNrUyV3s6Xn93M5esfpjQx
      mupaPbOX3k1rey077V7m5irpP60nIpRjX4DpkcF8fqeaTz79OIu3vsjw5DvZ3NhMZ3crI2+W
      c9BpZb+5kddKlXTbO+nsbqW5f5B253nmb1zM6oNanmy3Mlcaz9r2fpLk3FBf6j/9kPFSJdVH
      65mfn8+j6kqmS5dy41o5X93+OgP9/bmzcDvN7adJoc99mf4zx961matXsrz0IK+fn8nyykrK
      M6NHc4VCISm8GPe9GB4d/2Ug7VYz9+5Xj+auv3clN28tpXxhOK8MFLK4uJjBM6MZ6k/u3q9m
      anIyh4dJpXIto2Nj2Wms5mn78N+6X+mYwkn/Cf5x5W52fm3mjcpHmR0/c5JLSyfuxAOQ/k/c
      bgvNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBC
      MwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxA
      aAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoB
      CM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIz
      AKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBo
      BiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEI
      zQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMA
      oRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgG
      IDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjN
      AIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAof0JwIW1FXRlVOsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Votes Explanation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Votes vs Donations' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
