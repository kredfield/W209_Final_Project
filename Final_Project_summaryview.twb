<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <NavigationAction />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Final_Project_4_15642958352660' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
        <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
        <members>
          <member value='&quot;Map by Votes&quot;' />
          <member value='&quot;Map by Donations&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='county_race_vote_donate' inline='true' name='federated.111462w1qeyrfp1adgtd00ipgciu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='county_race_vote_donate' name='textscan.087laeq11cmjag1fk9s5z1h1k5vv'>
            <connection class='textscan' directory='C:/Users/krred/Documents/Berkeley/w209/Final_Project' filename='county_race_vote_donate.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.087laeq11cmjag1fk9s5z1h1k5vv' name='county_race_vote_donate.csv' table='[county_race_vote_donate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
            <column datatype='integer' name='Unnamed: 0.1.1' ordinal='3' />
            <column datatype='integer' name='county_fips' ordinal='4' />
            <column datatype='integer' name='Per_Capita_Inc' ordinal='5' />
            <column datatype='integer' name='Personal_Inc' ordinal='6' />
            <column datatype='integer' name='Population' ordinal='7' />
            <column datatype='string' name='state_postal' ordinal='8' />
            <column datatype='string' name='county_name' ordinal='9' />
            <column datatype='string' name='candidate' ordinal='10' />
            <column datatype='string' name='candidate_fec' ordinal='11' />
            <column datatype='string' name='party' ordinal='12' />
            <column datatype='string' name='office' ordinal='13' />
            <column datatype='integer' name='votes' ordinal='14' />
            <column datatype='real' name='total_donations' ordinal='15' />
            <column datatype='real' name='donation_count' ordinal='16' />
            <column datatype='real' name='total_race_donations' ordinal='17' />
            <column datatype='integer' name='total_race_county_votes' ordinal='18' />
            <column datatype='real' name='total_race_county_donations' ordinal='19' />
            <column datatype='integer' name='votes_winner' ordinal='20' />
            <column datatype='integer' name='donation_winner' ordinal='21' />
            <column datatype='integer' name='total_party_county_votes' ordinal='22' />
            <column datatype='real' name='total_party_county_donations' ordinal='23' />
            <column datatype='integer' name='county_votes_winner' ordinal='24' />
            <column datatype='integer' name='county_donation_winner' ordinal='25' />
            <column datatype='real' name='normalized_votes' ordinal='26' />
            <column datatype='real' name='normalized_donations' ordinal='27' />
            <column datatype='integer' name='party_binary' ordinal='28' />
            <column datatype='real' name='normalized_votes_interacted' ordinal='29' />
            <column datatype='real' name='normalized_donate_interacted' ordinal='30' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1.1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0.1.1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_fips</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per_Capita_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per_Capita_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Per_Capita_Inc</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Personal_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Personal_Inc</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_postal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_postal]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>state_postal</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate_fec</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate_fec]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate_fec</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[party]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>office</remote-name>
            <remote-type>129</remote-type>
            <local-name>[office]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>office</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_donations</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[donation_count]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_count</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_donations</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_race_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_votes</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_donations</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes_winner</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_winner</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_party_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_votes</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_party_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_donations</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_votes_winner</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_donation_winner</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donations</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party_binary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[party_binary]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party_binary</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes_interacted</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donate_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donate_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donate_interacted</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Binarized Votes' datatype='integer' name='[Calculation_3895050747208953856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[party_binary]*[votes]' />
      </column>
      <column caption='Binarized Donations' datatype='real' name='[Calculation_3895050747209064449]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[party_binary]*[total_donations]' />
      </column>
      <column aggregation='Sum' caption='Copy Donation Winner' datatype='integer' name='[Calculation_3895050747209302018]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[donation_winner]*1' />
      </column>
      <column caption='Display Sheet' datatype='string' name='[Calculation_453737681150197760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
      <column caption='Candidate Fec' datatype='string' name='[candidate_fec]' role='dimension' type='nominal' />
      <column caption='County Donation Winner' datatype='integer' name='[county_donation_winner]' role='measure' type='quantitative' />
      <column caption='County Fips' datatype='integer' name='[county_fips]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Votes Winner' datatype='integer' name='[county_votes_winner]' role='measure' type='quantitative' />
      <column caption='Donation Winner' datatype='integer' name='[donation_winner]' role='measure' type='quantitative' />
      <column caption='normalized_votes' datatype='real' name='[normalized_votes]' role='measure' type='quantitative' />
      <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
      <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
      <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
      <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
      <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
      <column-instance column='[donation_winner]' derivation='Attribute' name='[attr:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[votes_winner]' derivation='Attribute' name='[attr:votes_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[donation_winner]' derivation='Count' name='[cnt:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[donation_winner]' derivation='CountD' name='[ctd:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[donation_winner]' derivation='None' name='[none:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
      <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
      <group caption='Action (Candidate,County Name,Party,State Postal)' hidden='true' name='[Action (Candidate,County Name,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (Candidate,Party)' hidden='true' name='[Action (Candidate,Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[party]' />
        </groupfilter>
      </group>
      <group caption='Action (Candidate,Party,State Postal)' hidden='true' name='[Action (Candidate,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,Party)' hidden='true' name='[Action (County Name,Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,Party,State Postal)' hidden='true' name='[Action (County Name,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,State Postal)' hidden='true' name='[Action (County Name,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (Party,State Postal)' hidden='true' name='[Action (Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state_postal, county_name'>
          <field>[state_postal]</field>
          <field>[county_name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Scott/OneDrive/Documents/My Tableau Repository/Datasources/county_race_vote_donate.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/04/2019 04:42:53 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='county_race_vote_donate' increment-value='%null%' refresh-type='create' rows-inserted='20502' timestamp-start='2019-08-04 04:42:53.712' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20502</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_fips</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_fips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_fips</remote-alias>
              <ordinal>1</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3649</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Per_Capita_Inc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Per_Capita_Inc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Per_Capita_Inc</remote-alias>
              <ordinal>2</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3553</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Personal_Inc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Personal_Inc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Personal_Inc</remote-alias>
              <ordinal>3</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3649</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>4</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3631</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_postal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_postal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_postal</remote-alias>
              <ordinal>5</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_name</remote-alias>
              <ordinal>6</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2378</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate</remote-alias>
              <ordinal>7</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1031</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate_fec</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate_fec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate_fec</remote-alias>
              <ordinal>8</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>883</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>party</remote-alias>
              <ordinal>9</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>office</remote-name>
              <remote-type>129</remote-type>
              <local-name>[office]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>office</remote-alias>
              <ordinal>10</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>votes</remote-alias>
              <ordinal>11</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_donations</remote-alias>
              <ordinal>12</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3511</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>donation_count</remote-name>
              <remote-type>5</remote-type>
              <local-name>[donation_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>donation_count</remote-alias>
              <ordinal>13</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>725</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_race_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_donations</remote-alias>
              <ordinal>14</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3511</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_county_votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_race_county_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_county_votes</remote-alias>
              <ordinal>15</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5447</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_county_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_race_county_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_county_donations</remote-alias>
              <ordinal>16</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3582</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>votes_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[votes_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>votes_winner</remote-alias>
              <ordinal>17</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>donation_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[donation_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>donation_winner</remote-alias>
              <ordinal>18</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_party_county_votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_party_county_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_party_county_votes</remote-alias>
              <ordinal>19</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5049</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_party_county_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_party_county_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_party_county_donations</remote-alias>
              <ordinal>20</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4532</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_votes_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_votes_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_votes_winner</remote-alias>
              <ordinal>21</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_donation_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_donation_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_donation_winner</remote-alias>
              <ordinal>22</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_votes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized_votes</remote-alias>
              <ordinal>23</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17254</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized_donations</remote-alias>
              <ordinal>24</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14224</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:county_name:nk]'>
          <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
        </filter>
        <filter class='categorical' column='[none:state_postal:nk]'>
          <groupfilter function='level-members' level='[none:state_postal:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.300268' measure-ordering='alphabetic' measure-percentage='0.668901' parameter-percentage='0.0308311' rowDisplayCount='100000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:donation_winner:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>15</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>16</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>23</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:donation_winner:ok]&#10;[none:party:nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>1</bucket>
                <bucket>&quot;DEM&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>0</bucket>
                <bucket>&quot;DEM&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>0</bucket>
                <bucket>&quot;REP&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>1</bucket>
                <bucket>&quot;REP&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ctd:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:party:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;DEM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;REP&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:party:nk]&#10;[attr:votes_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>0</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>1</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>%many-values%</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>1</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>0</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>%many-values%</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='state_postal' />
        <field-sort-custom-order field='county_fips' />
        <field-sort-custom-order field='county_name' />
        <field-sort-custom-order field='candidate' />
        <field-sort-custom-order field='candidate_fec' />
        <field-sort-custom-order field='party' />
        <field-sort-custom-order field='office' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='votes' />
        <field-sort-custom-order field='total_donations' />
        <field-sort-custom-order field='donation_count' />
        <field-sort-custom-order field='total_votes' />
        <field-sort-custom-order field='votes_winner' />
        <field-sort-custom-order field='donation_winner' />
        <field-sort-custom-order field='Calculation_3895050747209302018' />
        <field-sort-custom-order field='total_county_votes' />
        <field-sort-custom-order field='total_county_donations' />
        <field-sort-custom-order field='county_votes_winner' />
        <field-sort-custom-order field='county_donation_winner' />
        <field-sort-custom-order field='total_party_votes_county' />
        <field-sort-custom-order field='total_party_donations_county' />
        <field-sort-custom-order field='total_donation_count_county' />
        <field-sort-custom-order field='Calculation_1319273230062022656' />
        <field-sort-custom-order field='Total Donations (bin)' />
        <field-sort-custom-order field='Per_Capita_Inc' />
        <field-sort-custom-order field='Personal_Inc' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='normalized_votes' />
        <field-sort-custom-order field='normalized_donations' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='county_race_vote_donate (2)' inline='true' name='federated.111462w1qeyrfp1adgtd00ipgciu (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='county_race_vote_donate' name='textscan.0dqfcy01esexq618232n71b998th'>
            <connection class='textscan' directory='C:/Users/krred/Documents/Berkeley/w209/Final_Project' filename='county_race_vote_donate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0dqfcy01esexq618232n71b998th' name='county_race_vote_donate.csv' table='[county_race_vote_donate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
            <column datatype='integer' name='Unnamed: 0.1.1' ordinal='3' />
            <column datatype='integer' name='county_fips' ordinal='4' />
            <column datatype='integer' name='Per_Capita_Inc' ordinal='5' />
            <column datatype='integer' name='Personal_Inc' ordinal='6' />
            <column datatype='integer' name='Population' ordinal='7' />
            <column datatype='string' name='state_postal' ordinal='8' />
            <column datatype='string' name='county_name' ordinal='9' />
            <column datatype='string' name='candidate' ordinal='10' />
            <column datatype='string' name='candidate_fec' ordinal='11' />
            <column datatype='string' name='party' ordinal='12' />
            <column datatype='string' name='office' ordinal='13' />
            <column datatype='integer' name='votes' ordinal='14' />
            <column datatype='real' name='total_donations' ordinal='15' />
            <column datatype='real' name='donation_count' ordinal='16' />
            <column datatype='real' name='total_race_donations' ordinal='17' />
            <column datatype='integer' name='total_race_county_votes' ordinal='18' />
            <column datatype='real' name='total_race_county_donations' ordinal='19' />
            <column datatype='integer' name='votes_winner' ordinal='20' />
            <column datatype='integer' name='donation_winner' ordinal='21' />
            <column datatype='integer' name='total_party_county_votes' ordinal='22' />
            <column datatype='real' name='total_party_county_donations' ordinal='23' />
            <column datatype='integer' name='county_votes_winner' ordinal='24' />
            <column datatype='integer' name='county_donation_winner' ordinal='25' />
            <column datatype='real' name='normalized_votes' ordinal='26' />
            <column datatype='real' name='normalized_donations' ordinal='27' />
            <column datatype='integer' name='party_binary' ordinal='28' />
            <column datatype='real' name='normalized_votes_interacted' ordinal='29' />
            <column datatype='real' name='normalized_donate_interacted' ordinal='30' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1.1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0.1.1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_fips</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per_Capita_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per_Capita_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Per_Capita_Inc</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Personal_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Personal_Inc</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_postal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_postal]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>state_postal</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate_fec</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate_fec]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate_fec</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[party]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>office</remote-name>
            <remote-type>129</remote-type>
            <local-name>[office]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>office</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_donations</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[donation_count]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_count</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_donations</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_race_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_votes</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_donations</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes_winner</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_winner</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_party_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_votes</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_party_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_donations</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_votes_winner</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_donation_winner</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donations</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party_binary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[party_binary]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party_binary</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes_interacted</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donate_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donate_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donate_interacted</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Donations Party Binary' datatype='real' name='[Calculation_-1807632281340887038]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_donations]*[party_binary]' />
      </column>
      <column caption='Donations per Capita' datatype='real' name='[Calculation_-1807632281341227007]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_donations]/[Population]' />
      </column>
      <column caption='Votes Binary Party' datatype='integer' name='[Calculation_-1807632281341878272]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes]*[party_binary]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Per Capita Inc' datatype='integer' name='[Per_Capita_Inc]' role='measure' type='quantitative' />
      <column caption='Personal Inc' datatype='integer' name='[Personal_Inc]' role='measure' type='quantitative' />
      <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
      <column caption='Candidate Fec' datatype='string' name='[candidate_fec]' role='dimension' type='nominal' />
      <column caption='County Donation Winner' datatype='integer' name='[county_donation_winner]' role='measure' type='quantitative' />
      <column caption='County Fips' datatype='integer' name='[county_fips]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Votes Winner' datatype='integer' name='[county_votes_winner]' role='measure' type='quantitative' />
      <column caption='Donation Count' datatype='real' name='[donation_count]' role='measure' type='quantitative' />
      <column caption='Donation Winner' datatype='integer' name='[donation_winner]' role='measure' type='quantitative' />
      <column caption='Normalized Donate Interacted' datatype='real' name='[normalized_donate_interacted]' role='measure' type='quantitative' />
      <column caption='Normalized Donations' datatype='real' name='[normalized_donations]' role='measure' type='quantitative' />
      <column caption='Normalized Votes' datatype='real' name='[normalized_votes]' role='measure' type='quantitative' />
      <column caption='Normalized Votes Interacted' datatype='real' name='[normalized_votes_interacted]' role='measure' type='quantitative' />
      <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
      <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
      <column caption='Party Binary' datatype='integer' name='[party_binary]' role='measure' type='quantitative' />
      <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
      <column caption='Total Party County Donations' datatype='real' name='[total_party_county_donations]' role='measure' type='quantitative' />
      <column caption='Total Party County Votes' datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
      <column caption='Total Race County Donations' datatype='real' name='[total_race_county_donations]' role='measure' type='quantitative' />
      <column caption='Total Race County Votes' datatype='integer' name='[total_race_county_votes]' role='measure' type='quantitative' />
      <column caption='Total Race Donations' datatype='real' name='[total_race_donations]' role='measure' type='quantitative' />
      <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
      <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
      <group caption='Action (State Postal)' hidden='true' name='[Action (State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state_postal, county_name'>
          <field>[state_postal]</field>
          <field>[county_name]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.225201' measure-ordering='alphabetic' measure-percentage='0.743968' parameter-percentage='0.0308311' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Unnamed: 0' />
        <field-sort-custom-order field='Unnamed: 0.1' />
        <field-sort-custom-order field='Unnamed: 0.1.1' />
        <field-sort-custom-order field='county_fips' />
        <field-sort-custom-order field='Per_Capita_Inc' />
        <field-sort-custom-order field='Personal_Inc' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='state_postal' />
        <field-sort-custom-order field='county_name' />
        <field-sort-custom-order field='candidate' />
        <field-sort-custom-order field='candidate_fec' />
        <field-sort-custom-order field='party' />
        <field-sort-custom-order field='office' />
        <field-sort-custom-order field='votes' />
        <field-sort-custom-order field='Calculation_-1807632281341878272' />
        <field-sort-custom-order field='total_donations' />
        <field-sort-custom-order field='Calculation_-1807632281340887038' />
        <field-sort-custom-order field='Calculation_-1807632281341227007' />
        <field-sort-custom-order field='donation_count' />
        <field-sort-custom-order field='total_race_donations' />
        <field-sort-custom-order field='total_race_county_votes' />
        <field-sort-custom-order field='total_race_county_donations' />
        <field-sort-custom-order field='votes_winner' />
        <field-sort-custom-order field='donation_winner' />
        <field-sort-custom-order field='total_party_county_votes' />
        <field-sort-custom-order field='total_party_county_donations' />
        <field-sort-custom-order field='county_votes_winner' />
        <field-sort-custom-order field='county_donation_winner' />
        <field-sort-custom-order field='normalized_votes' />
        <field-sort-custom-order field='normalized_donations' />
        <field-sort-custom-order field='party_binary' />
        <field-sort-custom-order field='normalized_votes_interacted' />
        <field-sort-custom-order field='normalized_donate_interacted' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Summary View' type='sheet' worksheet='Sheet 22' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Summary View' />
      </command>
    </action>
    <action caption='SelectState' name='[Action11]'>
      <activation type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 11' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sheet 11' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Same Sheet' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total by County' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total by County' />
      </command>
    </action>
    <action caption='Same Sheet 1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Us Candidate Votes' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Us Candidate Votes' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source type='sheet' worksheet='Map by Votes' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Pie Total Donation' />
      </command>
    </action>
    <action caption='Parameter1' name='[Action4]'>
      <activation type='on-hover' />
      <source type='sheet' worksheet='Map by Donations' />
      <command>
        <param name='agg-type' value='attr' />
      </command>
    </action>
    <action caption='Filter2' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dash with changing views' type='sheet'>
        <exclude-sheet name='Bar # of Donations' />
        <exclude-sheet name='Pie Total Donation' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dash with changing views' />
      </command>
    </action>
    <action caption='Same Sheet 2' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total by County (2)' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total by County (2)' />
      </command>
    </action>
    <action caption='Filter1' name='[Action8]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dash with changing views' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map by Donations' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dash with changing views' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Summary View' type='sheet' worksheet='Sheet 21' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Summary View' />
      </command>
    </action>
    <nav-action caption='Map by' name='[Action7]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Map by Donations' />
      <params>
        <param name='sheet' value='Map by Votes' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='$ per House Candidate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]</rows>
        <cols>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / ([federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]))</cols>
      </table>
      <simple-id uuid='{F23BB9FF-A904-401F-A559-71282BD2845B}' />
    </worksheet>
    <worksheet name='Bar # of Donations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' scope='rows' value='Number of Individual Donations' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</rows>
        <cols>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk])</cols>
      </table>
      <simple-id uuid='{32066775-2004-473B-8E3C-82C86D5C52E0}' />
    </worksheet>
    <worksheet name='Bar # of Donations (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5C8D31A0-AA41-450F-8F3F-7D76A81FF5B9}' />
    </worksheet>
    <worksheet name='Bar # of Donations (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{E3888DDC-2C16-4032-866C-93D97BEC5AFB}' />
    </worksheet>
    <worksheet name='Candidate Votes vs Donations'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes]' derivation='Sum' name='[sum:votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]'>
            <groupfilter function='level-members' level='[none:candidate:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]</cols>
      </table>
      <simple-id uuid='{B15F5557-C936-4D1A-997F-E28DA3184E8A}' />
    </worksheet>
    <worksheet name='Explanation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>This interactive map shows both voting and donation information at a county level, for the 2016 congressional elections. Use the &quot;Select View&quot; drop down menu to view the map by votes or donations. </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='508' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9A60AB75-063F-4CEB-B457-F672491BB8D0}' />
    </worksheet>
    <worksheet name='Map by Donate (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_donate_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_donate_interacted]' derivation='Sum' name='[sum:normalized_donate_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6949375.2669335324' min='-14787849.795397056' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='10047596.511373963' min='324873.58569716604' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{32EE3578-988E-40E1-9AD8-8F3F8D165C90}' />
    </worksheet>
    <worksheet name='Map by Donations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Donations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_donate_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_donate_interacted]' derivation='Sum' name='[sum:normalized_donate_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7363395.8091500523' min='-14022839.946596365' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='11023624.378876872' min='2763352.5680421493' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' num-steps='2' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State Postal:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{41D32722-7896-4D6A-9AF0-C5C706E7701B}' />
    </worksheet>
    <worksheet name='Map by Votes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_votes_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_votes_interacted]' derivation='Sum' name='[sum:normalized_votes_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7308437.7775747078' min='-13953506.087983372' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='11013227.725395329' min='2770787.4687242331' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' num-steps='2' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State Postal:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{39261132-0304-416A-A78D-CFA26D20FC94}' />
    </worksheet>
    <worksheet name='Map by Votes (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[votes_winner]' derivation='Attribute' name='[attr:votes_winner:ok]' pivot='key' type='ordinal' />
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]'>
            <groupfilter function='member' level='[attr:votes_winner:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7173114.8695446355' min='-14542987.838705925' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7312568.6699103191' min='1960147.083167108' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EBA4A509-A86E-4A5F-9D50-AA61C4C41904}' />
    </worksheet>
    <worksheet name='Map by Votes (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_votes_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_votes_interacted]' derivation='Sum' name='[sum:normalized_votes_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7073454.4047695613' min='-14272459.377853507' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7256042.4439830892' min='2720320.4917366654' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F89E83A5-A2F1-41D0-ACEE-901993559971}' />
    </worksheet>
    <worksheet name='Pie Total Donation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total County Donations&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_party_county_donations]' derivation='Sum' name='[sum:total_party_county_donations:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_party_county_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='279' />
            <format attr='height' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' value='272' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>$ </run>
                <run>Æ&#10;</run>
                <run>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2F1CA1D7-D40C-4B43-8AEC-1FB6272EEC25}' />
    </worksheet>
    <worksheet name='Pres'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US President&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7422578.4077404393' min='-14209091.804296914' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6999002.9555749316' min='2513002.6296488163' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E394C042-5C71-47B9-8C7D-FCFE5D2BFE80}' />
    </worksheet>
    <worksheet name='Senate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US Senate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7422578.4077404393' min='-14209091.804296914' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6999002.9555749316' min='2513002.6296488163' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{669847FB-3C0C-4020-BA92-FBB2D07E6910}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate (2)' name='federated.111462w1qeyrfp1adgtd00ipgciu (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu (copy)'>
            <column caption='Votes Binary Party' datatype='integer' name='[Calculation_-1807632281341878272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes]*[party_binary]' />
            </column>
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party Binary' datatype='integer' name='[party_binary]' role='measure' type='quantitative' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_-1807632281341878272]' derivation='Sum' name='[sum:Calculation_-1807632281341878272:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[none:state_postal:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DFEBD997-C4A2-4AA0-BC0B-5F4850BCB787}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{90E885BD-F33E-4276-BB83-959A1A86A360}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{599D347A-A8F9-45BA-8EFB-B01A93A326C9}' />
    </worksheet>
    <worksheet name='Sheet 21'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Binarized Votes' datatype='integer' name='[Calculation_3895050747208953856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[party_binary]*[votes]' />
            </column>
            <column aggregation='Sum' caption='Copy Donation Winner' datatype='integer' name='[Calculation_3895050747209302018]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[donation_winner]*1' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Donation Winner' datatype='integer' name='[donation_winner]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3895050747209302018]' derivation='None' name='[none:Calculation_3895050747209302018:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column datatype='integer' name='[party_binary]' role='measure' type='quantitative' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3895050747208953856]' derivation='Sum' name='[sum:Calculation_3895050747208953856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes_winner]' derivation='Sum' name='[sum:votes_winner:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
            <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]'>
            <groupfilter function='level-members' level='[none:state_postal:nk]' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' />
              <size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes_winner:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_3895050747209302018:ok]</cols>
      </table>
      <simple-id uuid='{54390A6C-1B48-4CA9-9F0A-19329268DC93}' />
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Binarized Votes' datatype='integer' name='[Calculation_3895050747208953856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[party_binary]*[votes]' />
            </column>
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[party_binary]' role='measure' type='quantitative' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3895050747208953856]' derivation='Sum' name='[sum:Calculation_3895050747208953856:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]'>
            <groupfilter function='level-members' level='[none:state_postal:nk]' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-4936827.7952029966' min='-16355608.240482843' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6414146.2751924563' min='1650483.2506435085' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{58F86B51-B0DF-479C-B5EE-882A8DFEFF20}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</cols>
      </table>
      <simple-id uuid='{7F4A63E6-36D9-4B3A-A8AC-4EE50CDD232E}' />
    </worksheet>
    <worksheet name='Sheet 8 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate (2)' name='federated.111462w1qeyrfp1adgtd00ipgciu (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu (copy)'>
            <column caption='Votes Binary Party' datatype='integer' name='[Calculation_-1807632281341878272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes]*[party_binary]' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Donation Winner' datatype='integer' name='[donation_winner]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[donation_winner]' derivation='None' name='[none:donation_winner:ok]' pivot='key' type='ordinal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='Party Binary' datatype='integer' name='[party_binary]' role='measure' type='quantitative' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_-1807632281341878272]' derivation='Sum' name='[sum:Calculation_-1807632281341878272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes_winner]' derivation='Sum' name='[sum:votes_winner:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
            <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[Action (State Postal)]'>
            <groupfilter function='member' level='[state_postal]' member='&quot;TX&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[Action (State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' />
              <size column='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:votes_winner:qk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[none:state_postal:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[none:party:nk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[none:donation_winner:ok]</cols>
      </table>
      <simple-id uuid='{F0F9AA35-523F-471C-BF26-E0F59DEA57B8}' />
    </worksheet>
    <worksheet name='Votes Explanation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>The color indicates which party received the most votes or votes during the 2016 congressional election.  Red for Republicans and Blue for Democrats.&#10;&#10;Please hover over the county to see more information.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='508' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7921CA64-5D92-42E0-A9AB-54AADC43644D}' />
    </worksheet>
    <worksheet name='Votes per Candidate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes]' derivation='Sum' name='[sum:votes:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Greg\&quot; Ellison&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Gus\&quot; Rantz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Mike\&quot; Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Rick\&quot; John&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;[Write-in]&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;A. Donald McEachin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ACCAVITTI, JR., FRANK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adam B. Schiff&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ADAM KINZINGER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adam Smith&quot;' />
              <groupfilter from='&quot;Adrian Petrus&quot;' function='range' level='[none:candidate:nk]' to='&quot;Adriano Espaillat&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adrienne Nicole Edwards&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Agha Khan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Agha KHAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Al Lawson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AL McAFFREY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alan Bohms&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alan Lowenthal&quot;' />
              <groupfilter from='&quot;Albio Sires&quot;' function='range' level='[none:candidate:nk]' to='&quot;Alcee L. Hastings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alejandro Vega&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ALEX X. MOONEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alina Valdes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Allan Romaguera&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alma Adams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AMANDA HOWLAND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AMASH, JUSTIN&quot;' />
              <groupfilter from='&quot;Ami Bera&quot;' function='range' level='[none:candidate:nk]' to='&quot;Amodei, Mark E.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andre D. Carson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andrea Leigh McGee&quot;' />
              <groupfilter from='&quot;Andy Barr&quot;' function='range' level='[none:candidate:nk]' to='&quot;Andy Biggs&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Harris&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Millard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Whallon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angel Cadena&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angel Cardenas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angela Demaree&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ANGELA PENDLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Dalrymple&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann McLane Kuster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Wagner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Wofford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anna G. Eshoo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anna Throne-Hols&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anthony G. Brown&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Antonio C. Amador&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;April Freeman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Arik Bjorn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Arrington&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ART HALVORSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AUGUST (O&apos;NEILL) DEUSER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AUSTIN SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;B. Mark Walker&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Babin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bao Nguyen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BARBARA JEAN COMSTOCK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barbara Lee&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barrera&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BARRY LOUDERMILK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barry Welsh&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bartley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BEN R LUJAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;bennie g thompson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BERGMAN, JACK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bernice Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Beverly A. Goldstein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BILL FOSTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Otto&quot;' />
              <groupfilter from='&quot;Bill Pascrell&quot;' function='range' level='[none:candidate:nk]' to='&quot;Bill PASCRELL, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Posey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Billy Burkette&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Billy Long&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BISHOP, MIKE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Blaine Luetkemeyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Gibbs&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Latta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Patterson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Seay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BOBBY L. RUSH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bonnie Watson Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bonnie WATSON COLEMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Ashford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRAD SCHNEIDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Sherman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Wenstrup&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bradley Byrne&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bradshaw&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brady Pinero Walkinshaw&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRENDAN F BOYLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brent SONNEK-SCHMELZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brett Geymann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brett Murdock&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian Higgins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian J Heinrich&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRIAN K FITZPATRICK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian Mast&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bruce Davis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bruce Westerman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan Barrilleaux&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan Caforio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Burgess&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;C. A. Dutch Ruppersberger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cadien&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cain, Emily *&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cain, Emily Ann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Calvin Sidle&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Calvin Silde&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cargas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carlos Curbelo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carlos Santamaria&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carol Shea-Porter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carolyn Maloney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Casey Lucius&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Castro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Catherine Ping&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cathy McMorris Rodgers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cedric Richmond&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charlene Albarran&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES \&quot;\&quot;C.J.\&quot;\&quot; BARICEVIC&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charles \&quot;\&quot;Casper\&quot;\&quot; Stockham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES ALAN HERNICK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES W DENT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charlie Crist&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHERI BUSTOS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Blake Wiggins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Collins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Fedalei&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Gibson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Stewart&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christian Cano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHRISTINA M HARTMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHRISTINA OWEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christine Quinn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher H. Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher H. SMITH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher Peters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chuck Fleischmann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clark&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Claudia Tenney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clay Cope&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clay Higgins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CLEMENTS, PAUL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clint Didier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Colleen Deacon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Colm Willis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Conaway&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CONYERS, JR., JOHN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Corrogan R. Vaughn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Corry Westbrook&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Craig Bowden&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CROSS, Peter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cuellar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Culberson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dale K. Mensing&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Cox&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Donovan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Newhouse&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dana Rohrabacher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel B. Giroux&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel M. Wik&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel Webster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DANIEL WILLIAM LIPINSKI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danil Ezekiel Faust&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danniel Maio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DANNY K. DAVIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danny R. Turner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daria Novak&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DARIN LaHOOD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Darrell Issa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Darren Soto&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Cowell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Giles&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Hughes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Koller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Loebsack&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Reichert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID A BRAT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David A. Rosa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID B. MCKINLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David E. Bruderly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Gurfein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. COLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. Pinckney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. PINCKNEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David J. Putman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Kustoff&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David M Blackwell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David N. Cicilline&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David P. Joyce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Price&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Rouzer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Schweikert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Valadao&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David W. Jolly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David W. Kent&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Young&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Debbie Wasserman Schultz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DEBORAH L WILLIAMS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Denise Gitsham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DENISE JUNEAU&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dennis A. Ross&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;dennis c quinn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Denny Heck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Derek Kilmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DEREK W KITTS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Devin G. Nunes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diana DeGette&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diana Kastenbaum&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diane Black&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dianne Curry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dimitri Cherny&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DINGELL, DEBBIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doggett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Don Bacon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DON WILSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald Howbert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald M. Payne Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald M. PAYNE, JR.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald P. Larson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DONALD STERNOFF BEYER Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald W. Norcross&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DONALD W. NORCROSS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doris Matsui&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Applegate&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Basler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DOUG COLLINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug La Malfa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Lamborn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Owens&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Shepherd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DOUGLAS BELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DREW FERGUSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DRISKELL, GRETCHEN D.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Du Wayne Gregory&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Duncan Hunter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DWIGHT EVANS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EARL âBUDDYâ CARTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Albertson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Perlmutter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Royce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EILEEN MCNEIL BEDELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elbert Guillory&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eleanor Holmes Norton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elijah Cummings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eliot Engel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elise Stefanik&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elizabeth Esty&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Emanuel Cleaver II&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Emilio Huerta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eric Swalwell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Erik Paulsen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ERIN R MCCLELLAND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ernest T. Reeves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EVAN JENKINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EVANS, H.D. CHIP&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eve Nunez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;F. James Sensenbrenner, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Farenthold&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Flores&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Fran Person&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Francis Rooney&quot;' />
              <groupfilter from='&quot;Frank A. Lobiondo&quot;' function='range' level='[none:candidate:nk]' to='&quot;FRANK A. LOBIONDO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;FRANK D. LUCAS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Guinta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank LoBiondo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Nelson Drake&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank PALLONE, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Spotorno&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;FRANKIE ROBBINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frederick John LaVERGNE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;French Hill&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;G. Burt Lancaster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;G. K. Butterfield&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GABBARD, Tulsi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gail Schwartz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gallego&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Garret Graves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gary Jill Stein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gary Palmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Garza&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Genevieve (Gen) Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George Athanasopoulos&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George E. McDermott&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George Holding&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GEORGE J KELLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GERALD EDWARD CONNOLLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gibson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Giroux, Daniel B.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Glenn Grothman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GLENN WILLIAM THOMPSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Glo Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gohmert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gonzalez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gordon Christensen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GORMAN, JEFF&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grace F. Napolitano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grace Meng&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Granger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Green&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GREG DUKE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Greg Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;gregg harper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gregory Meeks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grover Joseph Rees&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gus Michael Bilirakis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gwen S. Moore&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;H. Powell Dew, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hakeem Jeffries&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HANABUSA, Colleen Wakako&quot;' />
              <groupfilter from='&quot;Hardin&quot;' function='range' level='[none:candidate:nk]' to='&quot;Hardy, Cresent&quot;' />
              <groupfilter from='&quot;Harold \&quot;\&quot;Hal\&quot;\&quot; Rogers&quot;' function='range' level='[none:candidate:nk]' to='&quot;Harold Bratcher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Harold Russell Taub&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector Castillo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector L. Castillo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector L. CASTILLO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HENRY C âHANKâ JOHNSON JR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hensarling&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Herman L. Vidrine&quot;' />
              <groupfilter from='&quot;Holbrook&quot;' function='range' level='[none:candidate:nk]' to='&quot;Holbrook, Mark I.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hosea Cleveland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HOWARD MORGAN GRIFFITH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Huelskamp, Tim&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HUIZENGA, BILL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hurd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ileana Ros-Lehtinen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Isadore Hall, III&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;J. Wesley Casteen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JACK A MCGRANN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jack Martins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jack Orswell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackie Speier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackie Walorski&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackson Lee&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jacob \&quot;Dorian Phibian\&quot; Hebert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;jacob owens&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jacob Turk&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jaime Herrera Beutler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JAMES A JONES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James E Jim Clyburn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JAMES NEAL HARRIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Neu Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James P. McGovern&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Piotrowski&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James R. COMER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James R. Langevin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Veltmeyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jamie Raskin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jan Schneider&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jane D. Dittmar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Janet Garrett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JANICE D. SCHAKOWSKY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jared Polis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jared W. Huffman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Chaffetz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Lewis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jay Sidie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Denham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Duncan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Fortenberry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Stone&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JEFFREY A. LEEF&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jenkins, Lynn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jennifer Martinez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jermaine Sampson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerrold Nadler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerry Kobishop (wr-in)&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerry McNerney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jesse Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Banks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Cooper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Costa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Hagedorn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Himes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Jordan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Lange&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Lawrence&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Moeller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Mowrer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Postma&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Renacci&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JIM WALZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jimmy Panetta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOAN McCARTHY LASONDE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JODY HICE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Courtney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Garcia&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Pakootas&quot;' />
              <groupfilter from='&quot;Joe Vitollo&quot;' function='range' level='[none:candidate:nk]' to='&quot;Joe Wilson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John A. YARMUTH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Adams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John B. Larson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;john bouie, ii&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Dale&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN F MORROW&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Faso&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Garamendi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John J. Duncan, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John K. Delaney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Katko&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN M. SHIMKUS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Mica&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John P. McNeil&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Plumb&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN R. LEWIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Rutherford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Sarbanes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Shaban&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Yarmuth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Johnny M. Tacherra&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHNSON, LON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JONES, JEFF&quot;' />
              <groupfilter from='&quot;Jose Serrano&quot;' function='range' level='[none:candidate:nk]' to='&quot;Joseph \&quot;Joe\&quot; Swider&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph Crowley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph M. Wenzel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph M. WENZEL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph P. Kennedy, III&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Josh Brannon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Josh Gottheimer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joshua Gottheimer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOSHUA HARRIS-TILL&quot;' />
              <groupfilter from='&quot;Joshua S. Gottheimer&quot;' function='range' level='[none:candidate:nk]' to='&quot;JOSHUA T BURKHOLDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joyce Beatty&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Juan M. Hidalgo, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Juan Vargas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Judy Chu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Julia Brownley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JUNIUS RODRIGUEZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Justin Donald Fareed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KAAIHUE, Angela Aulani&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kai Degner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Karen Bass&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Katherine M. Clark&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kathleen Rice&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kathy Castor&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KEITH JAMES ROTHFUS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Keith Mundy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ken Buck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ken Calvert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth \&quot;\&quot;Ken\&quot;\&quot; McGurn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth Cutno&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth W. Wright&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KERITH STRANO TAYLOR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Cramer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin McCarthy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Miller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Khary Penebaker&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KIHUEN, RUBEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KILDEE, DANIEL T.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kim Myers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kim Weaver&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KIM, Howard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KLAUSNER, HOWARD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kristi Noem&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KUMAR, ANIL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kyrsten Sinema&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lacy Clay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Buchson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Bucshon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry D. Bucshon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Rader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Laura Sterling&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LAWRENCE, BRENDA L.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lee Ann Dugas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lee Zeldin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lenore Solis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Leon Threatt&quot;' />
              <groupfilter from='&quot;LEONARD FRANCIS MCALLISTER&quot;' function='range' level='[none:candidate:nk]' to='&quot;Leonard LANCE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LEVIN, SANDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Linda T. Sanchez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lingerfelt&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Liz Cheney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LLOYD K SMUCKER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lois Frankel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lorna Phillipson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lorna PHILLIPSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LOU BARLETTA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lou Correa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Louie J. Campos&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Louise Slaughter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LuAnn L. Bennett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lucille Roybal-Allard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LUIS V. GUTIERREZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Luke Messer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn C. Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn Jenkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mal Hyman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marc Hennemann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marchant&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marcia L. Fudge&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marcy Kaptur&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mario Diaz-Balart&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Arness&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Assini&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark C. Alliegro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARK D. WICKLUND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark DeSaulnier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;mark gladney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARK HUNT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Meadows&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Plaster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Pocan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Sanford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Takano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARKWAYNE MULLIN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marsha Blackburn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marshall Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marshall, Roger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martha McSally&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martha Roby&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martin L Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARY ELLEN BALCHUNIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mary Hoeft&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATT DETCH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matt Gaetz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matt Heinz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW ALTON CARTWRIGHT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW CONNOLLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW DEW ROWE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matthew M. Corey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mauck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Maxine Waters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McCaul&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McDowell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McKellar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Melody Shekari&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Melvin L. \&quot;Kip\&quot; Holden&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MERRIE LEE SOULES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mia Love&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL BOST&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL D PARRISH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael E. Capuano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Eggman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL F DOYLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL H ROMERO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael L. Lorentz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael L. Wade&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL M MOLESEVICH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael O&apos;Reilly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL PAUL MARSICANO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Pompeo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael T. Pearson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Wager&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michele Young&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHELLE LUJAN GRISHAM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mick Mulvaney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Coffman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Derrick&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Gallagher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Honda&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MIKE MANYPENNY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MIKE QUIGLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Rogers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Simpson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Thompson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Turner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mikel Weisser&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mimi Walters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Misty Plowright&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mitchell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MITCHELL, PAUL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mo Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Monica Vernon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MOOLENAAR, JOHN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Morgan Carroll&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MORSE, CHRISTOPHER R.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MURPHY, DENNIS B.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;N. Eugene Cleek&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nancy Jo Kemper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nancy Pelosi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nanette Diaz Barragan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Narvaiz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nathan Mathis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Neal Dunn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nicholas Morse&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nicola S. Tsongas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nita Lowey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Norma J. Torres&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nydia Velazquez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;O&apos;Rourke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OCASIO, Javier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Oliver Jenkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Olson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Omar Navarro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OSTROV, Shirlene D. (Shirl)&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OSTROV, Shirlene DelaCruz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pat McDonough&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pat Tiberi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICIA C. MCCRACKEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICK HARLAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICK L MEEHAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Patrick Malloy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Patrick McHenry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Babeu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Chabot&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Cook&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Gosar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Spain&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Tonko&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paula Hawks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Perry, Mary&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pete Aguilar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pete Glidewell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PETER \&quot;\&quot;PETE\&quot;\&quot; DiCIANNI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Clemens&quot;' />
              <groupfilter from='&quot;PETER J. ROSKAM&quot;' function='range' level='[none:candidate:nk]' to='&quot;Peter King&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Theron&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Visclosky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Phil Oliva&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Phil Roe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Philip Rosenthal&quot;' />
              <groupfilter from='&quot;Pingree&quot;' function='range' level='[none:candidate:nk]' to='&quot;Pingree, Mchellie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Poe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Poliquin, Bruce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pompeo, Michael&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Potter, Britani&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pramila Jayapal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RaÃºl Grijalva&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rafael A. Dagnesses&quot;' />
              <groupfilter from='&quot;RAJA KRISHNAMOORTHI&quot;' function='range' level='[none:candidate:nk]' to='&quot;Ralph Abraham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RANDALL M. \&quot;\&quot;RANDY\&quot;\&quot; HULTGREN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Randy Perkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RASHID MALIK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ratcliffe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Raul R. Labrador&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Raul Ruiz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;REIGLE H&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rhue R. Reis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard A. Morckel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Alarcon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard B. Fox&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICHARD D DAUGHERTY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard E. Neal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICHARD GREGORY PRIEM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Hudson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Lieberman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Reichard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICK ALLEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Bryson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Crawford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Larsen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rickey Hobson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rita Ramirez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ro Khanna&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rob Bishop&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROB WOODALL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT A BRADY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Aderholt&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Ardini&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT CORTEZ SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT DOLD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Evans&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert J. Sutherland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT JOSEPH WITTMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Klepinger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Lamar \&quot;Bob\&quot; Bell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert M. Neeld&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Matthew Tager&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Pittenger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert W. Derlet&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT WILLIAM GOODLATTE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBIN KELLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROCHESTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rod Blum&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RODNEY DAVIS&quot;' />
              <groupfilter from='&quot;Rodney P. Frelinghuysen&quot;' function='range' level='[none:candidate:nk]' to='&quot;RODNEY STOOKSBURY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roger Allen Petersen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roger Hernandez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Desantis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Drake&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Kind&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Varasteh&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rosa L. DeLauro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rosen, Jacky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roy Rich&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ruben Gallego&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RYAN A COSTELLO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Downing&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Greene&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Peterson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Solen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RYAN ZINKE&quot;' />
              <groupfilter from='&quot;S. Bret Guthrie&quot;' function='range' level='[none:candidate:nk]' to='&quot;S. Brett GUTHRIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Salud Carbajal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sam Graves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SANFORD BISHOP&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sarah Lloyd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott A. Angelle&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott DesJarlais&quot;' />
              <groupfilter from='&quot;Scott Fuhrman&quot;' function='range' level='[none:candidate:nk]' to='&quot;Scott GARRETT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SCOTT PERRY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott Peters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott R. Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott R. Tipton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott Wharton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SCOTT WILLIAM TAYLOR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sean Duffy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sean Maloney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sessions&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Seth W. Moulton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shaun D. Brown&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelli Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelly Schratz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelly Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SHKRELI, SUZANNA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sidie, Jay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SMITH, DOUGLAS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stacy Ries Snyder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steny H. Hoyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephanie Murphy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephen F. Lynch&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephen Tryon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Chabot&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Cohen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve King&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Knight&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;STEVE PEARCE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;STEVE RUSSELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Scalise&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Stivers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Womack&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Fought&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven G. Bailey&quot;' />
              <groupfilter from='&quot;STEVEN J SANTARSIERO&quot;' function='range' level='[none:candidate:nk]' to='&quot;Steven J. UCCIO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;steven palazzo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Reynolds&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Specht&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Uccio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stewart Mills&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stuart Starr&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sue Caro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sue Googe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan A. Davis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan W. Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Suzan DelBene&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Suzanne Savary&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Talia Fuentes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tarkanian, Danny&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Budd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Deutch&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted W. Lieu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Yoho&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Terri A. Sewell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tharon Chandler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;THOMAS A MARINO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Massie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas MASSIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Mills&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Reed, II&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Suozzi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thornberry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thuy Lowe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tim Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tim Sheridan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TIMOTHY F MURPHY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Titus, Dina&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Todd A. Bloom&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Todd Rokita&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom A. Garrett Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM COLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Emmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM GRAVES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Macarthur&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom MacARTHUR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom McClintock&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Nelson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom O&apos;Halleran&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM PRICE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Rice&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Rooney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tommy A. Schrader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tommy Schrader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TONIA KHOURI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Cardenas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Evans&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Ventrella&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Trent Franks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;trent kelly&quot;' />
              <groupfilter from='&quot;Trey Collingsworth&quot;' function='range' level='[none:candidate:nk]' to='&quot;Trey Hollingsworth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TROTT, DAVID A.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Troy Hollingsworth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tyler Fischella&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;UPTON, FRED&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Val Demings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Veasey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vela&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vern Buchanan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vicky Hartzler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;VICTOR ARMENDARIZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;VINCE KOLBER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Virginia Foxx&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;W. John Williamson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wakely&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WALBERG, TIM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Walter B. Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Walter Dartland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Warren Davidson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wayne Alberson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wayne Liebnitzky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Weber&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wendy Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Westley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Will Boyd, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William (Bill) McCullough&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William Burke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WILLIAM F SHUSTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William R. Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William Richard Keating&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William T. Newton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WIRTH, DEBRA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Woolridge&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Xavier Becerra&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Yoder, Kevin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Yvette Clarke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Zephyr Teachout&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Zoe Lofgren&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</cols>
      </table>
      <simple-id uuid='{D700B012-036B-4621-8C66-AE6EC1EAA014}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dash with changing views'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
          <members>
            <member value='&quot;Map by Votes&quot;' />
            <member value='&quot;Map by Donations&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='53' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='45' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='30' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='28' type='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='98000' id='26' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                    <zone h='98000' id='24' type='layout-basic' w='63288' x='800' y='1000'>
                      <zone h='98000' id='20' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                        <zone h='98000' id='16' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                          <zone h='98000' id='14' type='layout-basic' w='63288' x='800' y='1000'>
                            <zone h='98000' id='7' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                              <zone h='98000' id='3' param='vert' type='layout-flow' w='63288' x='800' y='1000'>
                                <zone h='97875' id='12' name='Map by Donations' show-title='false' w='63288' x='800' y='1000'>
                                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='125' id='13' name='Map by Votes' show-title='false' w='63288' x='800' y='98875'>
                                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='98000' id='59' name='Votes per Candidate' show-title='false' w='35112' x='64088' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='25500' id='68' name='Explanation' w='62600' x='900' y='1750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='47875' id='27' name='Pie Total Donation' show-title='false' w='35700' x='65200' y='875' />
        <zone h='50625' id='43' name='Bar # of Donations' show-title='false' w='36200' x='63600' y='49375' />
        <zone h='29250' id='91' name='Votes Explanation' w='61600' x='1100' y='20750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='41000' y='5125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='9625' id='94' is-centered='0' is-scaled='1' param='C:/Users/Scott/OneDrive/Pictures/legend.PNG' type='bitmap' w='13800' x='2200' y='39375' />
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='45' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='30' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='28' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='98000' id='26' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                      <zone h='98000' id='24' type='layout-basic' w='63290' x='800' y='1000'>
                        <zone h='98000' id='20' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                          <zone h='98000' id='16' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                            <zone h='98000' id='14' type='layout-basic' w='63290' x='800' y='1000'>
                              <zone h='98000' id='7' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                                <zone h='98000' id='3' param='vert' type='layout-flow' w='63290' x='800' y='1000'>
                                  <zone h='125' id='12' name='Map by Donations' show-title='false' w='63290' x='800' y='1000'>
                                    <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                  <zone h='97875' id='13' name='Map by Votes' show-title='false' w='63290' x='800' y='1125'>
                                    <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='49000' id='27' name='Pie Total Donation' show-title='false' w='35110' x='64090' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='43' name='Bar # of Donations' w='35110' x='64090' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
            <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='18900' y='12000' />
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='105' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='106' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='47875' id='27' is-fixed='true' name='Pie Total Donation' show-title='false' w='35700' x='65200' y='875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97875' id='12' is-fixed='true' name='Map by Donations' show-title='false' w='63288' x='800' y='1000'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='59' is-fixed='true' name='Votes per Candidate' show-title='false' w='35112' x='64088' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='204' h='25500' id='68' is-fixed='true' name='Explanation' w='62600' x='900' y='1750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='41000' y='5125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='29250' id='91' is-fixed='true' name='Votes Explanation' w='61600' x='1100' y='20750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='77' h='9625' id='94' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Scott/OneDrive/Pictures/legend.PNG' type='bitmap' w='13800' x='2200' y='39375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50625' id='43' is-fixed='true' name='Bar # of Donations' show-title='false' w='36200' x='63600' y='49375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='125' id='13' is-fixed='true' name='Map by Votes' show-title='false' w='63288' x='800' y='98875'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{774B7288-7F3D-489B-9CB7-F8F01EA8E589}' />
    </dashboard>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sheet 8 (2)' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Sheet 11' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Sheet 8 (2)' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='10' name='Sheet 11' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' type='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='16' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Sheet 11' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='10' name='Sheet 11' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' type='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 8 (2)' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Sheet 8 (2)' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2437268F-7A42-4176-942F-50DD5463A6B8}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Us Candidate Votes' id='1'>
                    <capturedDeltas>
                      <worksheet name='Map by Donations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7013286.9990137909' min='2442845.5362214488' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6161713.1272184942' min='-15056284.747356778' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Total by County' id='2'>
                    <capturedDeltas>
                      <worksheet name='Bar # of Donations'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Map by Donations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7067711.4259140678' min='3646871.0507484148' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6355917.255950857' min='-16165679.842839595' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Votes vs Donations' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{B7810F8D-6EC4-4FB6-8987-AD73836584BD}' />
    </dashboard>
    <dashboard name='Summary View'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
          <members>
            <member value='&quot;Map by Votes&quot;' />
            <member value='&quot;Map by Donations&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sheet 21' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Sheet 22' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Sheet 21' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='11' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Sheet 22' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 21' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Sheet 21' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F8611C41-01FE-42C5-AD7B-99BCB6CB915F}' />
    </dashboard>
    <dashboard name='Total by County'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='52' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='49' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='49000' id='3' name='Map by Donations' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='15' name='Pie Total Donation' w='49200' x='800' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='35' name='Bar # of Donations' w='49200' x='50000' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750' />
        <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625' />
        <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='158' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='159' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Map by Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Pie Total Donation' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='35' is-fixed='true' name='Bar # of Donations' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{156FD58E-F13B-433C-9B38-7F02D949D65C}' />
    </dashboard>
    <dashboard name='Total by County (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='52' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='49' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='49000' id='3' name='Map by Donations' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='15' name='Pie Total Donation' w='49200' x='800' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='84' name='Bar # of Donations (2)' w='49200' x='50000' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750' />
        <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625' />
        <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='159' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='160' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Map by Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Pie Total Donation' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='84' is-fixed='true' name='Bar # of Donations (2)' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EE9F55AD-1699-4806-B79B-F073DABF6FCA}' />
    </dashboard>
    <dashboard name='Us Candidate Votes'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
          <members>
            <member value='&quot;Map by Votes&quot;' />
            <member value='&quot;Map by Donations&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
        <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='98' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='95' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='64' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='61' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='20' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                    <zone h='98000' id='18' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                      <zone h='98000' id='16' type='layout-basic' w='98400' x='800' y='1000'>
                        <zone h='94000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                          <zone h='94000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                            <zone h='94000' id='93' name='Map by Votes' w='98400' x='800' y='1000'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                        <zone h='4000' id='100' param='vert' type='layout-flow' w='98400' x='800' y='95000' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9125' id='65' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16800' x='81500' y='53625' />
        <zone h='6500' id='96' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' w='16800' x='80700' y='4125' />
        <zone h='5500' id='99' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='82000' y='11875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='167' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='168' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='9125' id='65' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16800' x='81500' y='53625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='96' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' w='16800' x='80700' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='94000' id='93' is-fixed='true' name='Map by Votes' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='99' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='82000' y='11875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5326E33C-41A6-4915-921A-E79C52A16406}' />
    </dashboard>
    <dashboard name='Votes vs Donations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
        <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='50' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='145' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='53' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='51' type='layout-basic' w='82400' x='800' y='1000'>
                <zone h='49000' id='49' name='Candidate Votes vs Donations' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='143' name='Sheet 22' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='144' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='146' name='Sheet 22' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6500' id='54' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='82500' y='11375' />
        <zone h='7250' id='56' name='Candidate Votes vs Donations' pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='83800' y='28000' />
        <zone h='6500' id='55' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' w='16800' x='82500' y='17000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='147' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='148' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='143' is-fixed='true' name='Sheet 22' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='146' name='Sheet 22' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='54' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='82500' y='11375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='55' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' w='16800' x='82500' y='17000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='49' is-fixed='true' name='Candidate Votes vs Donations' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='56' name='Candidate Votes vs Donations' pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='83800' y='28000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{35D6897E-1A73-4F10-B039-994C44F6C4DF}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='dashboard' name='Dash with changing views'>
      <viewpoints>
        <viewpoint name='Bar # of Donations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Explanation' />
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Map by Votes'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Pie Total Donation'>
          <highlight field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='Votes Explanation' />
        <viewpoint name='Votes per Candidate'>
          <zoom type='entire-view' />
          <highlight field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <simple-id uuid='{4F9BE995-60E3-4C4D-9737-CA352404A7A5}' />
    </window>
    <window class='dashboard' maximized='true' name='Summary View'>
      <viewpoints>
        <viewpoint name='Sheet 21' />
        <viewpoint name='Sheet 22'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{52CC9639-F40E-4996-AD6B-EF5E0E5C1D17}' />
    </window>
    <window class='dashboard' name='Us Candidate Votes'>
      <viewpoints>
        <viewpoint name='Map by Votes'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{47BE7D0E-1D32-4C46-9C8B-1673DCC6856C}' />
    </window>
    <window class='dashboard' name='Total by County'>
      <viewpoints>
        <viewpoint name='Bar # of Donations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Pie Total Donation' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AFDABAED-A0F2-42D6-8AE7-E3766E9ABF6E}' />
    </window>
    <window class='dashboard' name='Total by County (2)'>
      <viewpoints>
        <viewpoint name='Bar # of Donations (2)' />
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Pie Total Donation' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{44BBF57F-82BD-4039-840C-AC8A6E9EF3F5}' />
    </window>
    <window class='dashboard' name='Votes vs Donations'>
      <viewpoints>
        <viewpoint name='Candidate Votes vs Donations'>
          <zoom type='entire-view' />
          <highlight field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 22'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='56' />
      <simple-id uuid='{2EE89F30-6326-4A9F-A967-A907A1AD44B3}' />
    </window>
    <window class='worksheet' name='Map by Donations'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='31' type='pages' />
            <card size='138' type='filters' />
            <card size='220' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]' type='filter' />
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:donation_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_donation_winner:qk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:qk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9D490D5C-7EAB-4AA2-B7BA-6CF0F0355CED}' />
    </window>
    <window class='worksheet' name='Bar # of Donations'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90279A2D-4E39-40F1-8D72-C4F4A6BA06F1}' />
    </window>
    <window class='worksheet' name='Pie Total Donation'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8634721-91A9-4CEF-9F7A-26661D49E618}' />
    </window>
    <window class='worksheet' name='Map by Votes'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
        <map-navigation value='1' />
      </viewpoint>
      <simple-id uuid='{3F52DCAC-069A-4C36-9D2B-02403311EAF5}' />
    </window>
    <window class='worksheet' name='Candidate Votes vs Donations'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' />
            <card pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FC924821-6BFF-4566-BDC2-F45612CA1F01}' />
    </window>
    <window class='worksheet' name='Senate'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E78C116D-563D-4D30-A313-F362D67D8A2F}' />
    </window>
    <window class='worksheet' name='Map by Votes (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]&#10;[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{87715CC3-FAB9-4626-8125-5FD703C9F71C}' />
    </window>
    <window class='worksheet' name='Map by Votes (3)'>
      <cards>
        <edge name='left'>
          <strip size='287'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{79524F4B-0279-4BD2-916B-F1606619EE0D}' />
    </window>
    <window class='worksheet' name='Map by Donate (2)'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5CD988E4-D3E5-43A9-B461-A0DBB686192E}' />
    </window>
    <window class='worksheet' name='Pres'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8106DE6D-7A08-47AB-977B-F6A6F9B57CA6}' />
    </window>
    <window class='worksheet' name='$ per House Candidate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EBD10A94-E36E-477D-91FC-39C8DA945043}' />
    </window>
    <window class='worksheet' name='Votes per Candidate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{417269ED-B07B-45D7-972E-0161CDCB5DA6}' />
    </window>
    <window class='worksheet' name='Bar # of Donations (2)'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5B943908-2C80-4583-BCC2-EC801D119669}' />
    </window>
    <window class='worksheet' name='Bar # of Donations (3)'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A101C932-7DC8-4DB2-B106-1DCAC0E8501E}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D48CF897-FA70-40C0-A418-21E5FADF0067}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F66C50FD-2D4C-4F07-BBB0-E35A33A9DA22}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5EB41E4A-53D3-4F69-AD7E-7E5E9D1D579C}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{315CE4A8-FADF-4D3E-9D6C-A9E680EC23F1}' />
    </window>
    <window class='worksheet' name='Explanation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='300'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{586DBC73-7DBB-4CC4-8B6B-4A27C795BC7D}' />
    </window>
    <window class='worksheet' name='Votes Explanation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='300'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59F9F848-E929-4FA1-AEE7-B67E02B7AC93}' />
    </window>
    <window class='worksheet' name='Sheet 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_3895050747209302018:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63B72FD6-DB5B-4558-BA3E-4E2B7B5B8D29}' />
    </window>
    <window class='worksheet' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_3895050747208953856:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4882CC92-5164-4670-8B9D-A4797795FFCA}' />
    </window>
    <window class='worksheet' name='Sheet 8 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2AB1F911-FEED-4825-8309-3F8398335415}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu (copy)].[sum:Calculation_-1807632281341878272:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6858451C-ADFF-4346-9DDB-9B1EB2B6731B}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 11'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8 (2)' />
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{ED6D3EA9-327F-4CEE-9951-30F00D2CF313}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='$ per House Candidate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar # of Donations' width='192'>
      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
      krz6idcAKBWLAGRyk6wpkVxs5CRYMtVIA0imGmkAyVQjDSCZai50KsT7dzb55rcHuTt/4+1X
      +MLry+fYI8lV40IboGO53N9o9Mstwz7H3kiuInIIJJlqpAEkU400gGSqOdEcwO62WX20TbWS
      p2G6VEsFPM+lVCqdVf8kkjPlRAZwuh3cEFqmTUoIVlfukK9cp3BGyXBR+GRCVTRZkptMhjuR
      TibDTYgeT6NGTQhV6k7A/MI1LNs5u2Q45cmEqsOJWDIZ7tnbPc9kuCCEexvNfnmulKGQSYxo
      zj0Z7oBUtsBrrxVOsorkFPA2NwnN7mBB+eoMOXdbJv/k997pl//hVz7Dlz/zwnNr/0I/B5D0
      aPz+H2C//4N+Ofdv/jXsZ+VKng15F0gy1VzZK0DoOPhb2/2yks2cY28uPm3TodV1++WZfIp0
      MnaOPXo+XFkDeGvrbH/tn/XLmS9/Gb74K+fYo4vNn/1glf/4rR/3y//473yOtz99/Rx7dLY4
      XsD/ePfO+RjAsFw63cFHk0q5JKmEfh5dkUwpXdvjd//o/dM1wJ/9YJXvf7TRL//mlz7J4szh
      dyf/1/ce8I0/+Um//Nu/+Tk+/6mLc7axXZ9/9Dv/rV9+7cYMv/3Vz59jjyRnxaka4MFGg3d+
      /Khf/rXPvsTizGm28HyIot5X5A7oWO5T1JJJiTwPv17vl5VkcuJ1f3R/m9/748FJ8ytvv8Kv
      f/72M/fpYxmgvrPJbttmtlLEdV2q1eozd+S8CJpNtr72z/vlxOufhq/8xjn26OriPV5j659+
      rV/O/PKX4Eu/OtG6rhdQb1v9suV4T1FPzscyQNf1ycU0Hj+6T67yfIcufq2G/cEH/XJs+dle
      kInCkKBW65fDdueZ6juKb3zrRzQ7vatKPKbyW7/+5pm08yTv/PghP7iz1S//xi+9ymLl43/S
      487jGn/+o7V++e3Xr/MLL80/Ux+fxN/Zwf7ww35ZW74x8body+V791b65cVKltvXK0fqP5YB
      kjGVvbbL0rVbOK7L0zJI2n/8PzG+9a1+Of73/x5w+NJn/+xnmO98p1+OvfUWcPg2nLuySv3f
      /4d+Ofe3/xa88OmPsxnPlXd/usZGrWeudEI/EwM0//Mf0v2Lv+iX4//gt7i7ZvO/3x8cEF96
      8xaLRx8PI3hbW7h37/XL4sYyW/XuSH035gunbgDn7r2RGGf/7ldh4fBwx9vYoP1H/71fTr7+
      OjuFOf7dN9/rL/vVv/IiLyRCdv7V7wx0b74Jf613R/BjGaBcXaA8NOo5+DLcTFbljZtDTyhD
      l66u41SrEAGiN77OJ5URXVwJaDebmHt7fV2i3SadqozosnHo6hrBpz7Z19n5PDElGNFVMipm
      FI7onJkKBN6IbqEYw3CcEZ27uEDg2CO66zNJ2u02rf/yzf4ytVxCfeutifaXZVncXsxQzfV2
      d1zXaLfbY3U3qyk0Bm2bhoG3tEjgef0+Wp7H+r01WqZNFIEQ8PJSGS8RH93XQcBMRhvZFiVw
      aNy/j7+7218WVKvkE2JEl1ADGisrmN/+9iAm4gukUjOHYlL/6CPM73x3sO4nX0NPlQ7FxHgy
      JtWZQzFJ6RFdERvVZbMktGhEV0wptFst2kPHjNdooOZHj5nZvEbHtkf2C8kkvuf0dNEp0Wq1
      +v8PwzCKoijyff/Qsk6n019+sCwIgv7/D/51HCeyLGtkWRiGURAEh5a12+2RZcNtDy876OOz
      6g6WD+ue3OZn0R23D09bZxjGhYlJEASH6vN9PzIM41AbpxFj9etf//rXjz2FTYDjOMRjOlub
      G3QMA6HqxGM6Alh7vEqn65LLZnBdF13X2dvZot0xCFFIxHtDna2Nx9RbXQr5bD89t9Wo0Wy1
      8UJIxmMIIdjb3mCr1qJUyAPgui5do02j2cLxAlLJBEIIGnvbbGzXyOfzKELgOA6OZVJvNOk6
      HplUEiEERrPGo/UtsvkiqtLT+a7Fbq2B2bXJZtIIIbCNJqsP10jmiuhqT0fgsrVbw+xapFNp
      FEXg2SYrq4/QkxniuobjOKiEbGztYHa7JFIpVEUhClwePFhBaHGSiVhvH2qCx+ubmKaJnkih
      qwoiCnhw/z4+KulUoqfTVdY3NjAME1WPE9M1BBEPVx9geSHZdOpQTDiIiRCsPVrpx8TzPDRN
      OzImtY8ZE2tMTJp726w/EZNOx6DVahJEgsR+fTub6+w2OxTzOaL9NHij3aTZauP6IclEHCEE
      td0tNnfrFAt5xH59dteg3mhiuz7p/Ri367s83twhly/0Y+w53dPOBRJAiGma2I6H2M/tbTRb
      bG+t0zEHs3ghoNs1sWwXIQRCCOqNJnu7WzQ7Zl+nCLC6Jt2u3dfVGk2a9V3qzcEwQlUVbKvb
      b0MIwV69gW022dodvFivKgqObdHuGH3dTq2OGnR58HgodUJR8V2H5v6kWAjB9l6NtO7z8wdr
      /dx5oagEnku71SaMIoQQdFp1BBF3H6ziBwc6QRh4dNotgrCn880GZqCy8uA+rn+QPy8IwwCj
      08b3e+nHuB2aDjx++ADb9fs6ohDT6OB6QU8XuDQNm421R5iWMxKTrmniOO5TY6Lsx6RrO4OY
      NJvUdrdoto0hncDqdjGPiYkyJia79QaO2WRzd3A7VIgIq2tiWvZIu/W9HRqtwU0JVRHYVhdj
      uN16A6NVZ7feGordfowNc6jdOpFj8GhzbyTGp/wkOGJ3ZxufGNX5QdWVau9XWIxOi2yml5NT
      393B8KBYGUygSpXexMIyO6TivZTfRn2PpuGwWBjM3PLFMvkiOHYX8lkA2s069Wab2YV8X5fN
      748Fo8F9fKPTpFZvUqoO2k3tf+h0eGpumR129mrki4MHGfFkBgEsJiHcn/m7lsn27h7ZfBFl
      /+DSYkky2RiZLFhu76eBAtdma3uXTDaPqvR0QosxWwAKKRqmS1IAocfm1japdAZN2z8/CY35
      chbI0uhYpHUgCtje2kaJJZnX9vP4haA6U+7tj06HdCIGROztbOMSY2Z+8LR9OCa5bG8f1vZ2
      MFwoVAa/mlPan+xZXYNUoheTZn2PpmGzkC8fE5MG9WbriJgMbmM2Gi1abYNrpcHEslCqUABs
      yySXSfXabdRpNA3mlgZj/FyhRA4IvKHnNq0GtXqTytxif1k6e5DGP/ippq7ROmUDRCGVuWu9
      ys0O+UzvkDI7LVw/JJ0d7IhcZY4c4NoG0DOFZXawXZ9EapC4lsyVSeYg8p3+MtfuYloOsUSq
      v0xNZFlczI5soO/adEwLTY9zcLiHaoLFpcGOAYh8l2bHRKg68/uxd0KFpaXR3z1QooB6s02k
      qMxUZ3u6IOL69Z7ODUISioogotFoEAmFdL5nXD8IWF7u7ZuO5VPK9IYYjUbv6lRO7gcocFne
      v7XbMBzmiykQgmazSRRFFGb2tzn0mV/q3YLumF0yyRgg6LSa+GFEtrh/wogiyv2YtJ8ek3Iv
      Jp5tAr2D2DY7WE/EJJErsZADguNikmFxMTM2JupQTNKVRdKZNIFrAb3+OJZJ13aJJ9P9dWPp
      PAvp/Ih5PMfC6Nro8cHpS8RSLC4N+gEQeg4to4uixfox9tBPPxeo02rg+iG54tBLG1FIFAZk
      Mtn+om6nheX6ZHKDF2wEEVEYkk4PdrbdNTAth2R6sK5CBFFEKjXYSM/u0jatkR2mil6d8aGg
      BJ5Ds22gxRL9HaGrCioRIjZ0DQg86s02QosxP9cTxjQFVUR4ahzl4M2tMKBWqyMUjUKpd7XQ
      NLU38BAKiZiC5YGIIuq1OpEQLKR7+0bRdMJIEEUB2aSOZ/euVPV677lEaX5/m1WNKIQoDMil
      E4SeDQhazTp+EFGY2T+UhEIURURhQDadhqg3XOq0G7heSK7wZExC0sMxMVpYjk9myBScNCbJ
      oZg4Fm2jOxITTRGHYmIZbbqtWv9KDPvHQhSSSg3WdS2TTtceMaMqgCgikRjEzndtWh0TPZ7s
      m0xTBArRiFFC3z3lOYBQIIJSIYOmDe7hRwgiBDF9yG9RRLlUQFG04UUAxOODdUUUUS4VUZTB
      63pB1HvtLh6P95cpAsrlMr0xbw8/jFCFQI8N6tMVQaFY6o+FYf/MHVdR1EFfErpKJl8cqq2X
      QZhNxYiGdlsippFI5VBFb34B4Ps+iUSCCAWxX4Mai6HqCRKqIBbrtRP6Hmo8CULpD4vQE4BG
      JqaQjO8PWQIPoSeIhEBT99tWNYgUCuk48di+LgpB1YkQ6EPDIkIoj41J75bs0MJeTFR9RAcM
      2qB3cJZLJcTQa4/9mCSGYkJEuTQYJgH4QYimjMZEuNZ+jAd9CaNef0aOBaBcHo2dH/a2ZPhY
      0AQUS6M6L4x6JzBtsB1xTTn9IRCKglA0XG9/3C0EL738Sl9iGL3JVCQEoBAEg8vZrRdf7v/f
      dXvr96aGvQnkATduDl6ZO5iMBhGoUe+sccD15ZuHuugGIZrOyAvgi0uHn2Zbnk9M1TGGdHML
      vaHO8GMfy/WI6SqhJwjCEF1VyZVmyT3x1qLvOqh6DD0KcFyfdCyGni7xygsDoQ3g2aDHicV8
      urZHIaVDLMurLw3Otq4NBB6RpqHqOs5BWoAa4/ZLL/Z1bc/pnVUUAYqGNzSMHI6JafYmi70t
      fSImL7w0aHc/Jge7JAwHQ5sjY0I0sq+vjYlJGEsCAWEweJn95q3BdgRBr51wv5PDHzdYvnHr
      UH1eGKEzGuOla4czBhwvQETDqmeg3W6Tyx3/iN0wDJLJ5LEvYLuuSxiGJBKJp+qiKMIwDLLZ
      7FN1J+njtOlM0ySRSFzYmARBgG3bpNPpp+omrW9Y9/8BU9lNmoV1ReQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bar # of Donations (2)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Candidate Votes vs Donations' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dash with changing views' width='192'>
      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
      jFYFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      IgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Explanation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map by Donate (2)' width='192'>
      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
      a83/B+jaEIcbeIKfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map by Votes' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Pie Total Donation' width='192'>
      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
      QDC0/w9cSuTTnvjE/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pres' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Senate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      D2OYGjuWBAUwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 21' width='192'>
      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
      WiUJfdeSn1/RNjX6xJpVaE0yX2DTjCbNWDQHbLWjfu1dANQHR9TZFcgEkgyTF+wOe8zVGxyq
      iuTRmzT7HSYvArrW2Z/6PoCFLup7xCt7kmV0vtii85JdtCjNIoNBlbziHMBBf8d4VPZdaGS4
      L2En2i6unT+u1kmSoDofv33HmPnUGtRE8eCpaV0MwDNFOapR++YOwFFpDjoL9XsYRKncBDl6
      lYSsKMgXy4k6dqokJhlOuWW/9ZWc1Rq9PEPlOeJXf0kDHJ68g9QpfblGdhbrz9Oxqpid1LLr
      vqfymp1p11MV8a7jL8w0wbYt6uo1bJKSIRxATutv1RzsvU9YIuaheVbtd8GyaIBw2G7hFyTF
      sW45e/YJPP2UuyvXvZW7LdQ1jW0nC9jAJ44VP4ahi5I+yOiMuwF4xfEhuhCCysvFpKYNDDzw
      lFSfH/TqFXuEfdvR993kS8uuDRMou3j0wOUcxgt6NGYe/nelr/7Ef1jYuE0uIji26xAOIw7P
      4tvF2TnJbOY1fAb0qe9+ZjnrZ78BYO9VjSc8Bq1GQ4pTXVJ/PPPG7ToPndWmIy496ljSJM+R
      UdI/ZCFWSNckXKzYPnvqSrj3e+g75HzpjidJqN/7GNu1mLxAKO3KvOeOUZbW36WP/nc3qhOH
      mLhvFIeaE+n0LGfzfBQeKCMs1iv3CR6EUcNBeiLEV90XUXs9MSasyk5O5J56e09WlOy/+JRk
      Nmfrv1xS7RH3d7QXj5DWIl/ccbSKsyRhEbmlaK1J/S6jkpR0KImZZBJXqzQLJUyVpGTR7bap
      A1ll+FsQuvXKDunqDJ0kE8qjynJ6L+Uu8oLUV1ZGtTKC9VGSZU6z8413qY9H0ixzIdJxhxY8
      nKwBg2QD3h4cjMMKD2bb74nhxcM4tB1V09IkKawfUW83JMcDVggOmw1JOUc0Lc1uE5J382Ah
      euio802GLhwaQCjFfLF04ltphtpvMas1Iso90ixFWi+dk6VIO170aZJgPEJAWMtmmBy+XxPO
      VTv2AeSrT4KnlEgXv0dYoGgFHsZ0xZR0vosnzy+/0zGozS2z//t/CffF+RU33kG9wf0ATSxh
      Pps54djd1ps8bEmURN1e01484XB/y9x2qOvPqZ68w77tSNPMIUON4bjb051dcbzfsJ4tpmjQ
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 22' width='192'>
      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
      D2OYGjuWBAUwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAF0ElEQVR4nO3d30/VdRzH8RfnHIQDeI6B/ChElFQSRAQH6bDSZvbDLmTddNHWfbl10T/A
      P2BrrgvlomY1axXpWqRrTiDmqgulTDHRIHWhpPw4KD/kxzld2ExDc0wU2uv5uDrnfDjf8z5n
      e/I9Z+d7zklKJBIJAaYCsz0AMJsIANYIANZuC+BwY4N21+9WQ2OTNNqvnzvOT3uDv/70vXbt
      +WzGBgQepNCtZ46f7tQbb72toBI6cnCv9jadVm1trSqKsvTVgUOqrHlOxTnJ6uiO6fyFS8rN
      ylBVVZXa2o5pTUWlkiRNhDIUHL86S3cHmJ7b9gC1W7do13s79UVjk2pqNmjdphe1uWatGvY3
      6tXXXtcP336twYGL+vJAqzZtekoXzpxU/8ioTpzoUNLf21i1quzmaWCuuyWACY0F5mv79jfV
      231WCgQ0fPWa4vH4lCtVrd+g9JSQXnh+oz7c+Y6K1j79EEcGZk7g1pM9507p/Q8+0uaXtkmR
      AhWmDujIsXa9sm2rPv14j9ZteVmRBY9qeUG2JCkta4mSUtK0ruSxG5sY7Vd9fb3i8Ul9su/g
      LNwdYHqS7ueNsB+bv9FIuEAbnyybyZmAh+a+AgD+73gfANYIANYIANZC9/4TT319ferr65vt
      MabIz8/XyMjIbI8xRTgcnpNzZWZm/uc6ewBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBY4wMxdxEOh+/5YYrZEAqFFA6HZ3uMKebqXPfCt0LAGk+BYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYO2OATQ3NUua0I4d7yohqbW1VZcvX77rRsaGYooNjd39
      VhITOny4RZLU0txy21L7yV+mOzMwY+54LFA4mKRLXe1aU75GnRe7lZSapd86zir52nk1d04o
      Mdyr9Y9H1dabprHBHj1Tkq3ucKm+O/i5cnOiSskr15Wuo3okPVkTC8tUXZynQCChyZErCqVn
      6+gPrZoMpEihVHW1H9P1eEiB6zGNxqVg6gIN/HFG0dxCVVauVvBhPyKwcsc9wKoVOWpo6dLG
      Z6t1ZN9+LS8tvrm2orRcedlRSdITZRXKzZx/c21hXoGqq1ZreDCmlLRMVZQu0/jkjbWS/Kj2
      HWpTWflKDY8nVF1drbHhmBYXLVNF2Upd7OlRKJisUFJCpaUlGvzzggaGp/5AHzCTgnV1dXX/
      vnBeRpYmhmMqXLxUQ+NjWllUKEmKRCMKhecrbV5A0UhU89KjCoekSCT6z+XRiBRIVXJiSOc6
      z0qRxVq0MF3pWTmK9fVp2ZJFykgJ6ET7aS1dUaacSKpO/d6t1cVF6u2/qqzsPA3FehUPpmnp
      knwF+c1VPEAP7GjQ9uNHNTgSV2VVlebxUhtzFIdDwxr/m2GNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGDtL3l1JotzaYH9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Summary View' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eYxdV37n9znn7m+tVxuLZHEnJVIUJVFqtVrqbnWrbbfbDcfjiWMjy4wD
      +I8ZZ+D8MQECJPk//wQIMEASBBggGQSD/BFMMk473uJxem9Laqu1USsXcSdrr3r7Xc/JH/fd
      x/eqXrGKFIvFqnpfoFBV79577rn3ne85v/0IrbVmiCH2KOR2d2CIIbYTQwIMsacxJMAQexpD
      AgyxpzEkwBB7GmbvP/N3b3Dt1hyj+w7Sqi9z7uwz9724WqtSLpUBuPjJh6zUWpw69yLz1z/r
      /l3J21vX+yGG+JLoWwE++Ohzzr/0Esem9zFz6xrvvvsO127PMXPzKm+/9TbNMOHSJx/y9+9d
      YHn+Dj/4wZ9yZ34ZgOmjJ3nh2eNc+PDTvr+HGOJJhuj1AwStKr9670Pswjh+c5lvvPYav3jz
      TWauf8GR40dZrje4c2OFqWLI8W//AQuX3+HVr30dgBuXP+XirSXe+NbXuX3l3t+G2LZnG2KI
      DdG3Aty+eQvb8fD9JkJkhwTT0wfBcDn3/HkO7h9h/NgzHCiaLM/NcHd+GVD87Q9/TKXoMruw
      2PP38uN/oiGGeACIoSd4iL2MoRVoiD2NIQGG2NPoM4MGQbBd/RhiiG2BufoDx3G2ox8bIkkS
      arUavu8jhMAwDAqFAkmS0Gq1UEp1z9Vak6k2QgiEEN3jUq6/6CVJgmVZ3Wt6kbWZJAmGYaw5
      vvr/1dBad88JggDbtvuO9fYVQCnV7XMURTiO0/eM94MQglKpRBAE+L7f/fx+169+T0IItNbE
      cYxprhkmA9/R6nsMOidrN/uRUjI2NoZlWX3naa0Jw5CVlRUA8vk8uVzuvt9ftVql3W53/7dt
      u3uNUgrTNNd8d/1m0CB4YgkAdAd7q9VCa41hGHieh+M4VKtVkiTpe7lwb8Cv1vV7B1rvl5+9
      oOx47xeW9aH3nI2+8EHIBlVvn1Zf10uASxcv4jgOx44fJ0mSB3pnGe43KdwP2fMOwqDBuLrN
      9UgAkMvlsG0bwzBIkoQoirrfq+u6CCGIooggCAiCANM0GRkZWbefCwsLa75noNt+Rrbe51lL
      7ScY2axvWRbNZpMoimg0Giil+Oyzz7h5d5ZCsbSptpIvPuWQCLmFzb7x8e7nQoDW6e9BEAg0
      mzeczd28wcGC+0Bt3G4GeGde6P7veR5RGD7Q4M8GWUa0JElIkmTTJF3d1uqBdb+ZOLumd/Lo
      vadhGJTLZQzDIAgCGo0GYRh2j2utcRyHSqWCbdvYtk2xWBw4uCElXaPR6CN477nZe7Msa02/
      dxQBIH04x3EwTZPbt2/jui5BEPDhhxcoj45y6MixTbUTzF7lrClRyuGp/RPr3uvLwpq/w7Pl
      3ANd46Axp6e7oofWmmarxacffYQCTMMgimOePXdu4PXZymjbNqZpdmf7xcXFPhINGtjZ59mx
      7O/sXdzPaj6IJINWhFKp1BVpoyhas4rCYHFtve8jSZI1BFrvvHa7jeM43VVgxxEA7n1Bv3jr
      l4yOlPFch1e+9gp/9Vd/zdnnX9pcI0+w+yMTA3qRz+XI5+4Rqd1u8/abbzKxb193iS8UCkxO
      TmIYBhcuXODw4cNMTk52Zz7P86jX6wAbDurVomSGjBi9omPvsYxs2Tmrr8/n84Rh2J2xe48b
      hoHWGsuyKJfLG64yGeI43pQ4F8dxV+/IsCMJAOnscvDgNOWxCbTWVJeXAU0Uhlj2xgF4mQgi
      Q3/9c1Yt3auPwaNZJVZjOu/xwa1bTB861L3H6oHkeR5nz5yh1W5jSImQkjt37lCr1Wg2Gpw6
      dYqDBw8yPz+PUorJyck+hTAbgEKIvgGR3ad39l/v2VcP4NUDdvWgzIhYr9e7Ok52H8MwcByH
      fD5/X71jNaIo6iP1eisa0F1R4zjuKt07lgBCCEZHiiSdv699cRkvlyeKoz4CrDtAOy9qSofc
      XV5hf2WwcrUdyFkGYnkeOgS4n9iR87zU8iEEX3/9dTzP615z9epVRkZGKBaL3L17l3w+T7lc
      Jo5jWq1W12iQnb/eAFqNQSvH/SaCjGSu67KyskKj0SCfzyOl7NMT2u12V9ndrDHGMAyKxWL3
      HhmxpJTEcdxVrjPrXrvd7lqEhBA7lwAAx48d4+33LjA6Nk51ZZnySIVcLt93znqzePbljbo2
      s3dv4efzuLa17nkZegfJVsz+GVQcDbz/arTbbXLFIkeOHu3OwFEU8dE7vyROEqampjBNkwMH
      DlCv17lz5w7j4+PYtt01Ga6W9XtNoavR+z7XE50GIZfL0W63ufT556Bi0GBYFiefPt1HAqUU
      nudt+t1mot0gKKVotVpYloXjONTrdeI43rlWoNXI5XJc/+ISo2PjfOONX9+0zAh0VwAhBM/k
      LT64cokTTz2NtcHS+7hCp/J6Y4tPrV4niGPCMODylct885uv88XFi/jVZYw4IkQwc/sWx06e
      AqBQKOC6Lu+++y7Hjx/vttOr9Pb+D/dMiNmgWS32rDYTr24z+2m329y+fYuxUoFioQDA7Nw8
      vu/jeV7f9VEUkSQJSqk1/oHseBiG5PP5Ncd6EccxQoguQRzHIY5jHMe5JxZt+JafYAghKHVe
      5iCZ8UFm6LOu4Ofvvc+rX7m/Et1rHdkMHpouQbvvfoNw6/pVnjp2FMe28ZsmP/qLP+fFp07A
      SKnbx+rsXT6q1Wi229CsIwFpGHz60QUc1+Xw0bVWs9WKLawd+L3He8WoTKxZrWQrpVhZXOTY
      9MHutYYhuwM9g9Ya3/fJ5XKEYdhVtiHVIbTWNBoNpJQbfg+ZCTWD67rYtr07lOAMpVKJS599
      ipfLMX34SN+x1d7XKAxBgAACwwLumc5MKRkvFja836CXvllZ+EEwriMWV1aojIwMJIFSCs9x
      u5ahw/unKOY8Prt5GwPN1OgoxXyOciGdJccKHhQ86q0WURQz6tjMVKvMzcxw4tQplFKEHV/D
      IHNmFEXdgZP93owZNTterVYp5fpFFcMwiON4zfWZku55HnEcdx2HlmURhiFBECClJAzDB3Lc
      Zsp2L3Y8AcYnJpg4mGNudoZ2q4nWUF1ZplAsUV1ZJorCju/ATZ1CAFoTje5nbuEKk869VyAN
      g2YQkP8S3vDV+sGNVogy2qvP2rCdu62AIz3L/2q5+9oXV3jqWD/hK+UylXKaojozN8+Vy1/w
      9KGD3JmbZ6HW4MQzzxC7BUoTRX72kx/zla++QqvZREqJYRhEUcRIh3CrnVPZ7JuRoXcg9c6o
      vaJSL5YWF9dMMJkVaJDo6vs+QRBQKBS63uLMK/wwzrz1sOMJoJTCACb3TXHz+lUcx2Vi3xS1
      6sqaFaEPU/u5NXuNyZ6PhN/isw/e59yLL2EPiH/J8CAi0NHRMs9Ojm7uYXpR9THXEevSQbN2
      NuvF1OQEoyMjXLr4OeNHjvH1V44zMTHB/Pw8n134kG8/9yzzi/OMHTxEs9lECEG5XE4tI6ZJ
      qVRicXFxoMJvWdaalSLz3q6O9dFas7CwgN+oY49V+vpYqVS4fO0qlUqlr23HcbrWmkaj0ffs
      UkrK5fIaUeZhseMJkCQpAYQQfV7g0bHx9S8C5m7d4CUrofcVnCk6RHmLi7fvcPLI4b7zby0u
      E20yFKFXT3jYr+iFsssPr1/j5NOnB7YvhVxXBMlg2xaBNJlbWOTFl7/KzMwMn3z8MfsdA8e2
      mLbLzN++QWVsrGsqDMOwK3Lk83kajUbf4M/k9Yx8UkqqtRqzM7PYttWNJclm99riAq1GnRee
      f35N/6QQVEpF5mZnOX7iRHdQh2GIaZokSdInImXm0Uc1+GEXECCMYh6m7oQ3c5W8tfbxLSnJ
      N6vMLlfZVymjgVtzC6y0Wjx7aD/QHyuUjr/OIOx+eM/Rdqe69BC96zazLhKVdG7Zb73pJcTS
      ykpH0T2KEIK7164SLS9QPHHPAlTMebSaTbxcrmsirNfrFAqFPjt91v5qXL52i3du+9jlSQih
      PnuD3z+/v3s8XF7AKhb6ru0NBpRSsrCwwLnnngOgXq/TarW650opsW17oAL7KLDjCRANUKI2
      QrNRZ6KxCKXBMTpH8zYf3rxG845ERCEVx2LZymNsIgAsw2pv6aP2GUwdmOazL65xbPoAdkdX
      6HVmCSHwXJe8Y/P06dOpkluv8typk33tRHGC3RErqtUqpVKJKIpYXl7us+gMIsHlqzd4b0Fg
      l+/FUhmWTavdJud5zM7NUXAclpqtvnt+eukSc/MLTB04wAvnX+TFAweA/sFvmmY38HGzXuGH
      wY4nQNwRSx7EPp8vFLnuVjjK+glAz5WzCM50fbkTP1nlLXK5HMdOnOT6tasc2jeB21Hce8mW
      8zwK5RGklFy+dImDY/26SBTHVDVE83PYlkWiFL7v94V+Z21lijKkJFhYWODNz+9SOHSmr03l
      N8l5YwA0qyucOXKIpUYTgDCMuHnnNo6X47Vvvs7p06f7lPtecadYLD6W0PwdTYA0OebhlsRR
      U2woQ8P97fCr0Tv4HuS69dpqt9pUa7X7njcyOsb1O3c5fXxwFKzlpETWnfCAXjTaPloLKiTc
      +eIK+4+f6LO7a627SSRZDkYGz/OwC+W1/TZM/CCg2WwxUSoCqWQYhiFXb9/luRfOMzU1tWZF
      FEKQ64hhpVKpz36/ldjRBLh+/Tql8sPF8Kh1HDvQr8Q+6CBeTQIecuFohBETd29Rrt/Z8Nx2
      bgRYS4C271Me3wdAuVJhaWGWciHf7d9oqUi2JsRh0JczkD2L4zi8f+ETZpuKRGsmSx5KKa4v
      h1gjU2vumRs7wPzCHfx2i2cPp04v2zRZbjT57ve+d19R0HEcJiZScWorw0x6saMJUGu2sL3i
      l25n0ED/sjN4hpuLVVSULe0btCcllmkSJopDI0VGPYdDxY1zCRaCaODnvYNoYmKCGx9/yIgY
      7OwLmg0sy+rzykopCYKAWqPJrDiAkILFzCrpgBjwflSSgNlv/QqCgOOHj2w4qB/XoO/FjiaA
      nTm2viQGKXhfVnzJ2pouepwe3TxJgzjBlIL37sxRMTc3IE4Q8s7bb6JH9yFWvZHDpgPT0xsS
      WpupIp2FD2itCYKAubk5ZhoKipt7J1GrysXYRMpRrl1vgEpw8tOc2fDK7cGOJoBlWfgDM4fu
      5busHkLZV6i1RmWWmuw63XueRtA7Zz+eIDjHTBXNr+wf4+PZxU1dU3IsXgravGXmGTlyqvu5
      1hotU6vK4sICxXWUysszc5w49zyFQgHf91lZWSFJEu5+/gl/N5dgTRyD3vfc/2IQPbpF1FjC
      PXQIISXSMLDdHGF1Hst2aDabGwawPW7saAKcPHGcf/Lf/At8vf5jnB43+M7La6tci4PH+NWA
      85d+9SbHdcDqbzmeOPDlO/yAsCwLP05wzY3NgGXHQi7PQg8BhBDcml9hcmyOv/+bvyYnYaZz
      zC6PIDoizuixE5imydLSEq7jMP/WW9z44F2+PV3Ca/jo2Xe6bfZOAwKItebvJr+CnErNqwVL
      cNCN0VqxsrzE0me3KT37Df7uVx/iGQnf++53H8GbeXTY0QSwLIsjhw7y0e3Wuue4OYPDPRGI
      G8H81OW4TlMSe1P6PnzE8mmWmzsoBj+Lt5nKe9yq1Tk5cv8gvbvtiIvWCO4zayNZl2fnCP7u
      z3h9VZXi9366QEaVy6OjNM+dIx+E8MUV9s3N0ci7SFHieNFd0+ZqNFc+55d2HrcyhW2mPoVm
      KzV95nIe5eYtFusrvPza1zZs63FjRxNACEG1uX5K48O12ana0CFBFvOytLzMhSvXyObA0LQx
      jPVfX6YDLLYimuJePMupgkPJtrrmxmzgZybHrDSIaZoUbYPryca5ro1EYZx/bWAqqBAwMqBE
      t8U98fDU0hL85Ccb3mc9aMfh/AGXdy+8iVAxN69qWhFMT1Z49huvMjIygtaa5eWVh77HVmFH
      E2B+YYG7yz6I+9iMH3LiXp3U/W0rhtps9/jPjrzAyaefXv+2HQLsX/X57E//mtKo1Z3pV98z
      qzmUESRIFJ8u1Toe5U6IRee31jDqOdwwyxTWs5uvo7rc77VorQkeQOeplSc4UBklqC3gTh7H
      rRzg2GiBs0+f7AudHh2tbNDS48eOJsDd2QUS8agf4f4JIPfwcEpxFiPU61UdhOz4WM7Fu3ub
      ijnY4ff5UoL8rd98wD6s83nP8y4/gMlyavEmQXCGV15+mW+//o1HHq+zldjRBDj3zNP83tdv
      8X/+4uoja3Pjgf/lcHNhCdVq9kQ8xpiGmTrmVILM4l46YhDArJaYiaJorB1YrhCI+8bKDHiW
      DZ5PAW3XIVIKDahei09n4EdKAZo5P2a2cpBJ06RYLO6owQ87nABCCF59/hT/188vo8W9GfVx
      5e3eD+sFwB2wBCddSZI5nSyDe4PU6FY00Bpsu1PWMeeg/cG6zmFbMvvuT1Cv/SZSDibC6r4M
      ejvZOwu0ZqaY4+tPHeV2FPNJM+auN467fBs7iVDPfB0nlyeJYy6//yb7KuO8+pVv4LfbHNw3
      uMDYk4ydRdcBKJfLmGJzRWMfJR6WYtl1UkpM01zzk1Vz6y1Ie6LocXmdVAQBfHXxC1Y+eGsg
      8YthaiHrXdkipbmrdDcUMPu8Ddw4Ps3pV84xVfA4XinybMnlH5dDzk+UOf7iyxjtZQojYyR+
      g32HjlF0HRZnblPO2Ryann7It7J92PEEKJWKfPV0f0xK72z34W2fT67ceCT36ksWfwRt3e9n
      tSjh2WsX696sq6evvMv82z9cc07b7s/DrcYJnyy1OJnAxVhxUWkuAU3gyoEJzh7d3+d3OJh3
      +NxXiNMvsP/IUV574SzLVz7AMSVKaSYnxsm7NmdOr28QeJKx4wlgGAb/7D/+PqcmB3s5A23x
      r350hfc+e3R6wpfBwwtn/WEaq2f7KQOS8X6bk99qMn39o65YqLTmynyT4wstKlpzRsGxWHMk
      UnzuOJw9eYh8T22kSCn+XWhjPHWOcidtMavpeffmdYja3PUFQbL9IufDYscTANJyF7//6+c5
      aC7iRkuYyu9P45M2//svbvDjdz7+UvfZTt0ie5r1+iAF7L/0Ls2Ve+ETize+oLa0xOf1gJ/P
      N3nnVpXpan9SuQAMBCNSUnH7Takf+fDcS1/pK0luGAavnDvNaM7itRefo7GyxOmn+pNsdhJ2
      BQEAXnrhHC+/cAZhmMRyrfdSC5P/54NFfvCTQQEQG2ONQvuQXHhYCm1G5Ho+WKbw43+L1mk5
      dH31Ms/MNhi/XeW5pTanmxGOHlz09lCtyY8uXEkTU5TiykoDdejEwPuMlMtopWi3W3zthTPs
      m5wceN5OwI62Aq3G2dOn+LN3Zrr/r7EICYOfXm4TJr/i9759fqDJrhYn3Ir6w4tF2hhwbwZu
      tJosL/dsAztIPxBizcBthDGLfshqbESMdpyAubGVayT2+eT9X9Kcvct3Pr4A9H/J611/6cB+
      Km/8Gr9YnAPLZt/58+xbp+Tg8soKS8tLtNttXn311Q16/mRjVxHg/Lkz/PH3l/if//LT7oBc
      SwLBW9d8/P/3l/xHv/GVNdv/WLZFaWRwRQnNvcEt4giVrMpH7t5H9F0hBNz58/+bp+IQD6g/
      RJ58LIDR3IZi2LQJt9/6Id9oxSwBTZHeX2oQaKTWSDRSp8t/AFycHGf/t19HAbnxKQzDoO37
      +J0aPFKINLqz8zufy/H8uXMszs8/+IM8YdhVBBBCIIy1tSQHzXrv300I/vJt/vB7X03LeQCJ
      UuQsk1Fv41zUkp1ncvz+pVd6xaaL9YibjaxA1j2iVEYdTtkb2+9nE81Hoeq/vO9e0I4VWinc
      osPVoo1jSI7nLBINCWnkZqI1qvO/1lAQ8DWRIN/6G6qxolEssa+YQ+mOsk3qGMvCMNLfINoh
      s0sN5t94g8l9+zZ8X08qdhUBAN74xle5cOUOP/u0P5Z+EAk+XYD/5S/e4o++/wqNZoPg3V9w
      JL9x9GOnxQfq11SUcCJc7a/Q3NmEYq21xlGac/eJzBRC8MvlJgr46oj7QBlud0JFw/UYGS9w
      qrOd0+pKdKtxYaXF+PQhLl28uKMJsGuU4AxCCP7o936dU/s2N5AvL0v+5Z+/TZwk7Hctxr1H
      l4zda6fviyfY5LW9vwsSGvFgb1g2WAumwcmctWlr1XKi+VybOJMTnN0/vmYvs9U1T7Of2XbA
      obzDQRFTGRt7oOd60rDrVgBIS2r88e+/wX/1P/6AUFsbKo7XqpL/46cX+U9HYx5l2kvffR/A
      hDqorwbgK839MgPmwhjXNqhlFeyyVM817ae/L2JxZrxANYxZqM6j4iQVlQyD8/vHMeX6+yos
      FMd57jvfxd/he0vvSgIAHDl0kJGcyVxzc/b761W46mhOP4KI3T6PcaaMr9OHQXP6IMImeu2X
      1XufjxoBzz79FGM9ItwHH1/hyN05EGmmsNaaCy1F9HkTQVrx6DIw+fo+zlacrjygVcKFa7fx
      LANhOzy9b7Tbn7l2wF3pYhSKHDx4EHNA/f6dhF1LAIB//o9+g+u3Zrg9X+Uvfnm9GzA3qJy5
      1po/n7N4fV88sGTig6BXee3+PYAAWmu8pYC33JjJok1ZwKi8J2r0FZ+FNTNy1naYKJJimQPl
      Qt81Mgixe61hQNGVNHR/OzffnMf75iTHi3bnXDhrC0ARhy0+uqt4dv84tTCm8fSLvPz1b21p
      tbbHiV1NgNFykaWFeb772nN85ewx3v7wCr+6NMNcXa2RsQHeGEvIW4Nt3w+KNUroqv+z42Oh
      YjzSxPWYeUOw6EgKtoGhNDXLYCJSaDTXHYNBqqbWmg9aEefPHli70kVx33kAExJmXEnBv6eQ
      F0LNzQ+WKb40xoTXPyRMIZgK21weOwy5Amd20eCHXU6A8fFxxsfHWVpa4tkDB7Ck4Pe//03+
      23/5A67M+X3FrwwV8lJl/XLkq/GgHl2xgRJsAlOJhlaS/gATpA45ATxNyM9aMb/1zFoaxKZN
      zjLX9DNqrM2VHhOC9ioCABgLIe+8Nc8b35rC7VlptIbZsy/z0m/9g8085o7DrrMCDUJWf14a
      klKxyB9+/2V6h7AQAi0MbjQGeGgfUfzP6no9vffO7rPevbTWWBoKkeLTpSafLDX4eKnBR0sN
      Plpqpl7iVYiUwl2nvZw3+GsvVmP+v/fvmY9riebKxDRP/dr37vtsOxm7egXIkA2yE52N4Z46
      eZzXn3qPQj5H3rUYL+eJWnX23WxsSUKN1rqv5lDWpwfNPpNonpKr7fvwrt9e085C06egdV+I
      RoZKxSS8u5bsAPZdn6v1kNCxyH/tW5x74zcGblS3W7AnCJAhi/2xLIt/8p/8LisraZWCLBE9
      eP55Prj8Ocbtq0yFTcYewCeQJAlXr15d19rpbTDYewmxXoW61STKoAYUCG5FEeV1fHXyPvm+
      XqT55GqDF/7rP+HMuefWPW+3YE8RoBeWZWGaJnEco5TCtm1GKhWKL75McPY5FhcXuXnlc5y5
      mxy1wBtQnGp+YZF2HGN0dizko885+f7DhVxvZiU4Fio+b8c83aOoLsWKqZ4tTzMorTHXGeiB
      f/8Muvzrr+6JwQ97mADZBsv1eh2guyUQ0N2ILY2Df4UrN26glub6rjcNm1YU8tTTp5FSpsWs
      TpzgSvHP2f/TtzAeUSGtXpHMAJrVAHoIcBPJK+OpjqMBOiuIIQSR1l0zaC8MKVhvWxHflnzt
      +7/+SPq+E7BnCSCEwHVdWq0WSZLg+z6FQrqVj+M4tFqt7oYNBw8fhsOH79ue1hrTsnjq936X
      y55H+W9/Qv4Bwx/Wa7fv/3hVHD+Kj9+6V7ownJ7m/PQUUkgWESxJQb6Sw+rhgVNOuLGSYIYJ
      VqKRCTixIsmbtKZLTD1AJb2djj1LALi3CjQajW5t/Cw82rZtwjDctJLae97J7/8ml4H83/z4
      kffZK/RvnVoxoGIItIarxVGajSafhoKgOErt1ddofXSB6qETTHkOzTs3OerXOeGanH9tAqWh
      rRQtpWkrzd0gIdfZjvRx7M7yJGBPEyBbBZrNJlprwjDsKsS9q8N6UAN2XcmQP/8c/r/7MW6H
      F0prZhwLlGIkUeQ2uTgIIWhLgdGJQ245FlWVljtsIoiVpiQhEaDQzEbw/BvfY6wTqt3bR601
      f//zn+H89C+Y94rwyrfIvfsL9jfSxJ7DjskvGhFzs7Mc2mDF2y3Y0wSA1AJULpep1+vUarV0
      B3bP6yPHIGy0Muzfv5/Pv/UqEz95E1fDralxjv0X/zlCCG5/8CHRv/kzyuHajS0G1RKqGZLr
      r7zIs089xbFjR3AKBW5duUTb96k3W+z78JcciNpMNmvUyxOIHkdWL0GFELz8jW9y7eA05w4f
      xjRNZo+f5O6/+h/YL1KilyTUP/94Q5Fvt0Donm8yCII9s/T1Qut0g7ZqtUocx90N2nzfp9Vq
      9e2a0nuN1rqv9uUgUty6epXG3/yI0muvcODcWSAdlFf+/h0m/vW/6Xoi77c7Suur55n+oz+k
      XF67JxfApfffRS8v4VsOo1NTzH/yEed/5x9u+vlvXblM+9/+a/bFPrVE03LzTP+z/5JcbuPd
      aXY6hgToQRzHLC0tIUS6a7ppmoRhSLVa7YsdWh1Ml20nOogogyClJEkSLv13/4Lpu/esS70k
      WDIEFw9OcejsGc79zm9THnm4vdA2iwv/27/k6N0vAAiV5qenvsI//P3f39J7PgnYE6EQm4Vh
      GN2S6K1Wq2sRKpVK616TEWKzg7/3XsV/73u0Bsz8K4bkvROH+eaf/DHf+MN/tOWDHyBYuEdE
      WwrGk50d579ZDAnQQRRFNJvN7kAOw7C7Y6LneYyPj2Oa5iPZyC1bQQ4+e5bqb32HcFWT75fz
      /PZ/9k+ZPnToS99rM0iShEtOkaRnZRu9cYkoGrz53m7CkAAdmKbZDUOQUqKUYmVlpUsIwzDI
      5XJdK1EvHjR2qFeMOvW97zJTvLdv1l1D4Jw9zdTU2i1ItwqGYXD+qZN9zruDiSZ4aAIAACAA
      SURBVM/VTz95bH3YLgwJ0IEQgkKhQLlcxrZtpJTEcUy9Xu9uVuF5HsVicU1w2MOUVO+9Rr74
      fJdUk4nGqWy9yLMa06++ztsyT5R5nYUg/uT9x96Px40hAXoghMCyLEZGRhgZGUnr47TbtFqt
      7nHXdQfWwV9PD+gtQ7gaGQmmvvMtbhw+QFOk4Q6H5eO3TheKRcZ/47fx1b0VbT1H9pNQfv5R
      Yc/7AdaDbdtUKhWWlpYIw7DPobT6742wOsUx+50RY2RkhNI//xNmr17jzhdXWbk7s25bW4lz
      zz3HBxd+xcGbF8kZAjk6uOLDdmxovVUYmkHvA6UUS0tLJEnC6OhoV/TROt1EutlsEkVRHwkG
      zfi9BBhUr6ebON/52/O8bdtPN45j3vmf/nuON5do/Yf/lKMDIk13E4YrwH3QO2gbjUY3sywT
      hWzbZnl5uS9maNDOMBtle/Xey7Ksbd1M2jRNyt/5LW7V65xZpYgHQYBt27tqBRgSYAMUCgUa
      jUZ3pu+V/aWUFAqFrgc5Q0aCjaqr9R4bRJztwKVLlzh15pk1NVMBWq0WlmU9Ef18VBiKQJtA
      tikEQD6fx161JWkURSwvL/eRIMsRyLy+qz3Fmal1tT7ged66IQ/bDaUUSqmB5NipGFqBNgHD
      MLpWoVqt1jfQIc0uWz1oM7Hns88+w/d9ZmZmWFlZIYoikiShXq9TrVbxfR9/nQ3wnjRk+5rt
      JgwJsElkfgIhxMAQ6SxkYnWVh1KpxNJSWks/W0nq9TqNRgPHcQjDkKCnvOB2bDOqtSaKInzf
      JwgCwjAkjuNdZe5cD0MR6AGwWlwZdLzValGr1fpk+kx3aDQaeJ7XHeTNZrMrTrmui5SSXC73
      2JTgMAxpt9tEUdTtRxAE3b5naaKrRb7dhN21nm0xNlL+MhNmNpNmAymrpJYF1WVEKhaL3f/v
      5zDbCmitqdfrGIZBoVDAtu2uMy/LjouiiFqt1i0gkG3jupuU4CEBHjGyAb/a7r/a1p8pxL0l
      1LO8hEeNQRYmpRSlUqlbGSOOY2zbplwud/sSBAG+7xNFUdcKlq1Qu4UEQxFoC+D7PsvLy+vW
      1+8VjXoTa7KfkZGRh1I2lVLEcdwdsJn1KctvWE+/yPqxXs3PzA/Sbqc73PSKRusFBu4UggxX
      gC3AIPPmoAGxugBW9tNut7vi0WahtWZlZYUw7K/4ppTasJjtRoq3EIJcLtcVjTIrFqRmW8dx
      uqve/fKkn0QMCfCIkYkOMDgsolccGbQaKKXwfR/HcR5I+czuO8hyc7+Ens0iy53WWlOr1bpE
      q9fr1Ot18vk8hUJhx1WOHhJgC7B6EKwelJloAvdmX9mpLqd1usfvysoKo6OjmxaFVs/8GWzb
      xnGcRzIrCyGIoqibGwH3LFwZWbMVTEqJZVlEUdTViwblUmw3hgR4xMj8BZktPcOaAlf6Xmn2
      1WJS70qwGYUzO3cQTNN8pCKJbdv3XZkyfSartVStVrv+EcdxuqvEk0KEnSOs7SBIKRkdHe0m
      1mcYJBJl4QWZCNR7vN1ur+uQ6tUZfN+n3V5bIfpxm1aze9q2jWmaRFHUF+sUBAHLy8s0m837
      1lt6nBiuAFuErOqcbdssLi52B/Kg2X69oLksLdOyrG5bmaUnW2Fs2+5aZ3rRbrepVCq47ma3
      fb0/sgHcK/L0rixZIYGsQoYQojv7Z59lYlAWPZsp+hl5TdN87MF2QwJsMQzDYGxsjDAMu4N2
      tbI6iAS9v8Mw7Mreq/0HURQRxzGNRqPbXhAEWJaF4ziPdDAJIbqiVhiGFIvFPl0m82ZDGhpy
      /PhxlpaWGBkZ6eZSDKqflJE6s1hlhMnQbrfxvEezddWaZxr6AR4vlFI0m00ajcYaP0Hv39kA
      z5L074eVlRUKhXsb5NVqNSqVyiNdAeDhbPxJkqwZ0Ou1+6BtPwoMV4DHjCyHwLbtbiRob5j0
      aj2gN9c4UzB7jwEsLi52TZSwdYPoYdrdjFl0OxXioRK8DegtuDU2Nka5XCaXy62pMLd6VVgv
      0+zQoUPcunWrW70i8yjvNJv8dmC4AmwjsohL0zS7RXlbrVZXrs9Wg1Kp1A2y6923QAjB8vJy
      VynNVoAgCMjn813fQobe1aRXWd0pyBTxRynWDXWAJwy9ym2WfdVbkS6zrQdBQK1Ww/O8gc6y
      OI67JsnV3magSyzXdXcUEeI4fqRJOUMC7EBk5tGZmZnONk73IISgVqthmmbXW7taN8j+z9Iy
      C4XCIwmXeBx41LFGfQRotVpDuXGHQGvN0tISjuOsUZyziWyQYwzoJsHEcUw+n2dsbHD9n72A
      PgIMMcRew9AKNMSexpAAQ+xpDAkwxJ7GkABD7Gn0GVTn797g2q05RvcdpFVf5tzZZ+57cbVW
      pVxKC0Jd/ORDVmotTp17kbg6w+2lFi88e3rrej7EEI8AfSvABx99zvmXXuLY9D5mbl3j3Xff
      4drtOWZuXuXtt96mGSZc+uRD/v69CyzP3+EHP/hT7syne8xOHz3JC88e58KHn2LnyyzP3t2W
      BxpiiAdB3wrwza9/lV+++XPswjhecYQXX/wKv3jzTWauf8GR40f5u5/9LXdurDBVDFk49Aec
      OnWKAxNpxeSFO9e5eGuJN771dYyd4VQcYoj+FeD2zVvYjofvNxGiu4Mt09MHwXA59/x5Du4f
      YfzYMxwomizPzXB3fhlQ/O0Pf0yl6DK7sMynF97jyhdXuHFn/vE/0RBDPACGjrAh9jSGVqAh
      9jSGBBhiT2NIgCH2NIYEGGJPY0iAVXjr5z/i5szCwGPXL3zAD3/6I24vtQYev3nrBsvLy/0f
      qhYXLnzEj3/yJh9/dIHl5eqj7vIQXwLDlMg+BITKoRDO8Zd/+Ra364r9FjiTo4w4Dvkw4fyr
      z/Kn/+ufMjXlEVglRBRiRUsEzhgiblGUdXxrkoXFANcT/Pv/we9y55N34MhZWu0WH/z4z7jl
      W0RGGU8GeEYTnTtEtHydf/AH/xh7OCU9VgwJ0AeHydEcVeVSKo4gbZ/KyDhusIB78FlG42U+
      /tUVfud3f41Pr9zkzMEpLAFLi7M4pXFEUMV1HW7enuf4yTMUPAsJ7Hv6BfZVXChNExRcjhdH
      mV8OmBhxabeqCLuEZx0dDv5twNAPMMSexnDOGWJPY9cRYHH2Dh9+enG7u/HYoCKfi1eubXc3
      dix2HQHakWKs4KE2PnVXQFouxdyjq5Oz17DrCFAp5mjFevc92DpIghYLC/PUW8HGJw+xBn1K
      cLbv0xBDbBYPupfZk4ahFWiIPY0t9wPcvvoFAEGridupVAbw80WXZw6WGPXnsfIFJiYnt7or
      jwUrc7PUmy0E8FcfzLBvssIz+z08ElaUTVlGFPI52s20nr8GDhw7sa193svYcgI4nUKmArB7
      ipoeHvWwpEC6Hpa1+d0Qn3hYDparkWhOHp6kUPBwXAObhLy2cISBaVkYbg6D4eK73dhyAgS+
      T4xAI4n8AAeFBkwzz40Vn/1GzD4j2upuPDbUQ4XfDnFFgp3zSBBU2xHXYotxw8eRIXdEDuFH
      5IiRQxJsK7YtFMIy4KuTBq47Tuiv3eNqp8KwLHBzKDRHnARfGTS1y6itKUmNLQxKtsR2SkR+
      m0APa7FuJx6LCOSQikDZXKcQHHfTXQKbfoC11Z14jEiQBNog1pocCabQKAW5pInUIRHgGAZY
      DgqBEMMVYDux5QRo6fQWeREPPG7tMpeVQGOgaSSSWmQwldN4hsYwHbSwcFCYlk0UBay0I1zx
      ZGwXulfx2PxFod9GAJHfJvbbJEg0nU0f2D11VHIipixDokRzLB9jCcXBHFhCEehU7RVoqkaR
      Sc+g5O4iA8AOxJavANnM30agEEjDwM0XEB2BKFshdgsWIotFH0Zo4Ll5lhMTiLBQWEIR+m0M
      w6CZWIy7bt8GeUM8fmz56Iu7s7xEIVBJgkoStDSxUIx4FkrtHjFg1IrxnBApLFq+jwuEkSZM
      NBgGjushLRszigh8H8sergDbiS0ngOXmMA1JznWQhoFy7fR3khAKC+37mLtoECSmi3AMCjJC
      opG2gw4DDMvDQONHMQ0tOViWsHusvzsWj8EP0MbqyLkqSaX9drOJBBakQ0X52Ahy+a3uyeNB
      M0jw/RDbCDDQmAhi3++oxprQD9CAEjax7yOHW1JtK7ZcCS66NgIIMAh9H7hnEp2rtvm0aXGp
      ttW9eHyoqDr77YjIb+P7ftfb65JgojDQ2IZAANIwMIy9Erf6ZGLLVwANKJXgSAiBVpSg/DYK
      wUtHJxGRv9VdeKwwLJvQb+O6bjf0QwANP2R0pEzbD0hMD4gxLYvI313Pv9Ow5dNP5PtIaaBJ
      Z71S3qM4No7junzw6TVmWrC0i0LZBTrdadNKt5vVnZ+GMkkQOK5LnChM20apBOsRbvo8xINj
      y1cA23XRgG1baBUThyFKJWg3z/mTJVphjLmL4mFM20YjOi82VYINBKUk1QLaysASCbZlocKh
      /L/d2HICSMMgTDRGkpAIC20YGIaJZ6RKoYFG7iIrUDuMCf0g9XC7eZwwQCD4cFFRaYcczEs8
      Ce1mg8D390zm2pOKNe8/rK/wyWef0aqvcOGTz5mZuU21EXLt2rWHukHo+7RXFqktLtBUJouN
      gCjR6DAgCiNafvp7tyDQBgmCNgYSTYxEAPtMHwG44p7fW7C7vOA7EWsJ0Ghz+PTTzN/4nEYI
      zUBTW7rJrTtzD3UDlSQURyoURirsyxtMehIThUJgux4ziberQoItkXp2fZ0SIEkSpGFQkKlL
      0ER1veCh36bWDrext0OsIYBhG1z97DMKYwewDbBtGxXGHD56+KFuYLpeRy6GoDMbZgNAAyfy
      alcRoK0kjcRAa4EEdBRgWRahlkyZbRIEge9jux65kVH2VXZ2Tu1OxxodwBub5NxYmp44NpV9
      +vDpihJNHIaEvo9rOySGiQSiMMJF7zpnaEVGWEZMPRYYdh4ZpTN81GoQCQ/ZcQpqlaRKcatJ
      oTK6nV3e03hskWi266Yzf5IgbQvDkIRJKg7sJjnYtG1GbJsRUoVYOwVipThw8CCfLyWMWC61
      yMKPTHLE6Fx5u7u8p7HlBHh3XnN+QtLUJqrWwEUR++3USRQFhL5P7BS2uhuPHRpIEoXUIU0/
      ppFAy4+JI0kYKgIlkNpPM8Iq293bvYstt8Id9CJ8DCyhUpmYVBfYPVJ/P8IwIg5DkjAk5zlY
      QuPHinpicapiYKKZyKf2f8n6iUJDPB5sOQFKZmoVsQ3Rzf6qqXt2f9O2yO2iQWDbFqInwE0j
      cB2LihHSSqCpDZZbEdNli7xrDytDbDO2nACWm8NWIbaVZv6arkdRRt38gN0GTSfq1TCIkwTT
      trENSaFU4ti+ClIaVAouIgqQhoHletvd5T2NLdcBPNdB42AYBt7IKInfolQsYBoGpiEJ/DbG
      LqoLFIdpoovuGHuLIxWUXyXvOiws11hptjlSyeF3QqGbzRalylAJ2C48lrpACoFQMYaUXGwY
      TOcTWtV5ynmP2chixIvZv0smQmHbGAgEmrDjDTZcj9D3GS04+IkmwEACpmXjusOUyO3ElotA
      DT8g8VsYMr3VqYLCFDrNELMcCiIm3EURMdVAc3mxY91JUu+vgcayLQSwv+yRtw1s18WyrW7l
      vCG2B1s+8jRwO3JYSGwUgltNlYYDd4SE0YKzqywhI47gaMnAFgrPNpGGQRuTMIzQwJ1qmyCM
      0AiizmdDbB+2nAC263F81KPomJi2TcE2cURC5LfTmdGycXZRbSClBZEWaL8FSYxKEgw/LYQb
      hyGRTsvBNMIEadvEu6gq3k7ElhPAJUFFAXkZk4QBZStdAeyO9SNWanfNglEArRrL2iboGDlt
      1yWKIhzXY8SzcGyTnG3gWBbGLgoF34l4LMJ3FvwmDYMVbVMeGUmD5PJFTMsml98lGfFAbHmI
      8gQlLzX7CsNAIcjnc0jDICfibkGw9++2MOXu0X92IrbcCpSWRb9n4hmx7lUCjaMwTQ5H75rS
      KGEYEvgBwgTHsgjDiJWVFWLTI7E8iraB1hLTMDg5IrHtYVbYduIxFMaSJH6aDGLbFkHbx/Zs
      hOVgW+nt7V0y+AFKjsTApq0NLBIsO13htJOnUnBZrDaBTqZckJBnSIDtxJYToNEOsAyJawri
      UJMTgJKYAlQnVJhdRIA7bUmrHTFqx2g7tf58UVMUvBDXEMiggRQeCZoRz9td+s8OxHCPsCH2
      NIYa2BB7GlsuAq3cuk7UbuE4DlSXkMUyfhhh5vKAwIhDnHaDqulg5osIrbALJZRShO02jusg
      tE5FBSEI/ADHSavNqdoyopxmU2kh7+00o8H2vPR/rakEDZpaErm59KDWeJZFO06wXI/Ib+M4
      DnJpjnauhJXLI7RC11awP/gljZe/hRX52H6TwCtQvPIRjE4AAlYWSCYOIEoVjOljtBbniZt1
      jEKJoKP7ABRIqAsT228ROS4gsLwcQiva83MYhSKh7zO5MkPk5miVxinevQoHjqQVpatLWGMT
      rNg5tEhbdRw3fUftOmbQJsiXMeOQ2LRJTAupFGiNlcunbSQxopgm4IRB0CnVnsKxHVR9Bcqj
      RH4boRJyYxPY3r2NDXcjHltGmBaS2HYxEISNWudLFOgowG5UCS0PZZhIlWDYDnEUgRBoIRE6
      QctUWXRcFy0Egd/GHhkHrbpmxZ679f2XmDZaaaRhoKMQLSSJUt3zpBSoJEabFrJTqbpLukGY
      vwNSghAwfxfl5JCdgD4tJIlhQRAgVZrrpqRBbDnIMERLSTbspEpQUoIAoRVSJ9QmDwMaEQVE
      XgGpFEYUIhwPlShAIHR6vhYCoTVKDlaktaBTjgy0ECgpMQAjjhAqgew6rdBSEFsOXuSj4gj0
      7nFO3g+PkQAiHeCWjVEew/Q80BpBDr84Ql7QHRx2HJKbvUH76BmidgsraBM6HgWhCZ0cpmUB
      GsvKyk+JlDB6FRXSZYPIyxMHAZZlo/0WsdUhmDSIowgzjvFbTRLTxq0tk9gOIgqwZ2+ydOAw
      Vn2F/OUP8McPIAtlas+8jNeqYzTrNE6/lJp5C6XuTQUalcQIndWFkyhppKQSMv1IpCsRCJQ0
      MKMAs7GMkBItJX4c4xkSsTCDuTyHmj5BuLwAXrHv2UATWC4tBSJOmLh9lfkDx9FxgmWaSNME
      0vsqQ2AAUquURCrpVOzTKfFFSnyxRwY/PAYCJM0GcaOG0Jqg1UQYJgjSWa0jjiSmhSkEUUcf
      V5ZFWKwQttvp4HI9vCQiFhIdR/itBma+SLu6gunlQQjiKCRqtzokAmGahEEqEkmzQBCGSNPC
      TxQkbWSSAJrc2CRYJoaQGAK0Y6dVLGwbimVKloPUmvpzr2HmCySNOlFtBae2hKwtEzl5jDhG
      mKl/w3BctJC0F2bxcnmCRg0zCqnnS+n/tSpKRoBASoP8yjz5axfRE/vRjSpSK+JckWRkAqux
      TOTlWdl3mNzSDMb+w0TtFkIplGEirIAwCBGGge15yDgmOHEWszOz61YTe+EO8YGjqEYVJU2E
      YWIi0FJghgHKSIeAUVtGBSFBeZSo1URLA2sPbN6x9Zvk2TaG6yJdl8SwMGwH3apjJSE6SZDV
      JfzRfXiGpB0rhNYklVHCXAnb8wCdfmamIoaQGkOIdGXI5TszYUocy8uDSMOMlUq6DjjLNMG2
      MYI2OaGhUCYOw44YQY9IIdNVRNMV0aRSIARW2EbnCyAEo/Ul1MEj6MMnGbtzjea+AySlEQCU
      3yZptVCGSSgNRKmCVgmOEBi2gzc2AUJ0ZlmBOngcefkjAjdP284jS2VEHMGtq/iFItqxcRwb
      VRnHqS2h3CLFkQqyI/qZlVECvw1aIVVCXCyhgwChNYbjkoxNoYXAqYyn29NKQeT7xK0moTSQ
      URstBPnDx7CbTUzbxiqVEVph7oHS7VvvCe58MVIppIoxkgij3SQqj4HtwMg4Odum3WphuukA
      xLQgTmXxqN3uU9aEYWLaVpcEtuuBTgd9rNO6o9KQqCS9XkoDw05n5WRxFtOyIY4wgzbKsrst
      98v8nTuK1EutEBhJnO53LO6fxaakQWKaEAZdAiZhmv1lRgG+Flgdb3gchVhejsWTL5AXCm95
      AW1baK0JpcStL5GoEmGhiLBdwrEp3PkZdLmCErJrGJAqgZVF1Ngk1pVPkLkiZhwiK+NQLBMH
      PqaV6ixaaxwpMAoFegsz+s0GAvCrK9iOg5YSYVq73k235QQI3TyhltiWA1EE+t6Mm8Qhfhjh
      kUcLgUxiZBJj5nLgeQit03IqSqVfiFLEpFGVpu2ALUiUQidJR6kFtEYlCaZtEYep4quCNkm7
      RagBN4eeuYm3skBj3+HUWtOokQQ+SpqULEltZQU3X6BmOORcl2YQUlyeAa9A0moRaJDtFkvS
      Jjd1BG/2JpbfgNFxhFbd/obtVvqSbQfTtokatXTHGAAhSDok1SJVQKlMoG0HhEQ5HoFOV5/Q
      9zEcDy0gthxcx6FVreK4aVtaCCI3jxMnJBMHsEoVkkYVrRQ0apilSpqT4bhoKWnodK82IURa
      yVprDNshaNSxPC/dusnbJRlKG2DLCWAu3IXqMnJiP8pyUIaJclzsXB5Ta9zqMombmgWlkWZQ
      KaUIwzA1nUJXThUopGF2dlXRSCNVmk03R6u2ks6GptndeM60bZIwBDO9XmqFYduYJ86kYkEQ
      pO1IiWMYtFRCUhwl37mbM3cT/+hpLM/DDIsoL48hDVrHzmB6eex2C8t10J5L4nhkvQRw8wV0
      FCENExH66X0cjziOwDC6ohUAWqOlgfLyaCQChePl8MMQy0rNmSpJrWOJaYMGaRoYdqcEux0T
      tdu4tkUcdaruiY51CZ2Ki5aJEvdmfKXSd2FYdlevMG0boRSeIUm07ijxuxtb7ghLRvcRTx1G
      Oy5y7ja06qmYEPjoOMYsj2J5eaQhkVJCvgSmheM4JEGQfpGZubJjk7YNE9N2ul9aWm/xnmhi
      WnZnMz6FaZqpBURIYjMVedq1alqtLkg3p9DSIHRz2H6TTmNp390crm3jtRtIvw1CkFNxx9qk
      01XJMEhGJgg61hnDtrFyOYJGHSBNBbUdojhOlX/bwYxCojDEtCyEVjjFEmYuj+14OE5aXj1q
      tXA7ophKkvTdkFpukjDAaTdJwpDq7AyGEJRMSStOUI4HYYBlGFimxMwXsD2PWKdksIMWlpfD
      cj10Z8PCzIig45goTmgnqdi6+4f/YzSDYjkwvh/huJj1FXA9Yq2J/DamlJi2gzbNVHzRCtWo
      kTTrxJUJTCvdWC+8dRM5uY8k8NPZMZdPiSQktuumew/EMUpKTNsmDiOkbWOZJkK5HZMgWF4O
      HUdIaWB2NrIQGiKRXteuVslXRrHyeZZjhZsrpL4EIQilid2qYxgSX5jETg4p7pEmjqJ0KygN
      rmOTKJUm/9gOym9jOC5KSoQ0UElqy2+3muQMA2UYHb+HxvJytPw2jgWGNNI8A9OiNHUgfTbb
      xrEdLC+HSmKiKMR2XAzbSZ9LQNRuEuv0ea2ORCNcF+H7CMPE9jpV6TwPQ8h034bORLJX9i7b
      +i2SRGqSTJTqmEBTRdIwTVQSY2kFOi0loqII20m/wFgIQjdPFjxtRgFqbIyg3QQvj2VaxK1G
      x6OsCX0f07I6YdXpl2jaFtIwiOKIKAyIWw28sclUTjcMhClJwoCo40E2RtMaqJbnoZKEeqyQ
      SYy2TETRS0UQIL84Ayomnj6J0VEsDScjUjp7mnGQ1v83TcxcquMIyyIKw3SQAkmQRoZaYYDK
      Fzo2+AQjjiCXx3E94ihdKSQWidbUZu/2yOcCjUi95U4aWNeqVbEW7pKUK/jNBrHt4nV8H0Gj
      gRW0SEwbu1QmDHyCRiP1VKgEu1gmqq/gFEq0m03K+6ZSXWsXY+tXACEwHKcTwpAmP4ZuDmFa
      hK0W2rARgY9jFYnaLUK/jVcqpzNu4mO7btderYXE8vKpAyeOU0LpexaiOIoI6zXcfAG/maYh
      Cq1xCkWEaSKThObyIm6zRmw5OIUi9TBKTZIdYrb8NjkvRxCGRE4O/BaGUcRfWUIJiZsvUH/2
      FSDd5AKg4DiEYYhbKJINSgAjiUHIPjHOtCw0qWk2lBIzCvs9ukKAoTC0Rgs6JWM0WA5GJ3q2
      276USMMk8IPufmQIAeX/v70z25EsO6/zt8czRWRkZk2t7iYpyQ2yIYAwDBu+85Xe2U/gSz+A
      JNACRaqb3awpI2M45+zRF/+OyGpQggFaXRaqva+qKqsqTp7cw/rXWv/a9yTr0Ns7PBV3cwsp
      U/oe3XVS/PoOasXe3UuN0BZVbYt12O2usOtTHh8BAskP6+Xf/U/mr35NHGWns9ahpw25Ftww
      Es9nCYlS6gp5lLWoCqFUSpKLxOw4sYaA7wdUFvXyAylAJl2tTFoRXY/1jlKK0J+bLUoZcB6j
      pKbw+qIHKJk8FbxWhJzazq3pxxHdKM3arri8UrBKYZylm5vPP0VsXDm5HmsslUpZZqCiSpU6
      4vCO9OILLJCcx+3umrot76tkh01B8Hx7hbWC6XvYP1xvmLRtcXg7UHISgqCpu9o5TJWdvaYk
      GwaI9aIN52xbnOP188M8o7W5ntaf+vgIC0Bm5j//7Gt2N3d4a/Alk457wbsXb0wTsKpSwgIt
      C2GZsbf36K5HKwBFPj7ipy3pfGRcZ+Ltcz48BioKFQKqXlgiGdqY685ZtJZU6lIIq5jEsrby
      1VrRtzvquqKtE2VZKa4qQZVFFpRG1/y0GwcpqJ2T5n9dCowbjPekEMR+UArZWmzZitJMpabE
      cjriu17gU84sMZL7AWfl7+RSMNqQcv2BDnGhU68FvzcUZfBTT1kXjPcopak5kdcFlP7BpE4x
      kc5HzLQhRdlU/DA2TeSnUAJ/FDu0BjR+s0GFBf3+Df3v/oFsPWoYseMGoxUdUFOSnb8WwcHQ
      4MnT/2Y2N3LTyjgRb59dsfdlXISo6Hu0sY1BueyWYGSWt9vqE6/efsvmGEk3ZQAAD6lJREFU
      9o7RGrY1MTgL44aiDabrsM6zXihLpa7GNZMjNiy4YSQbS/r8LwGISSbwcY2EZSbOZ4F285kU
      V/LxIL8+n0ghkGKgPz8KVNKG7MTp6saR3Hbz3FTrC1SjVqmbSiaez9ScMFoRH949+XrGCZwX
      2lkZavt+tDFXgc54T9Fyf7OqNDdt/UG26ac+PtoJMIwjFcVsPfvPPR7IIZAJlBjEZ7PKHTJa
      a7qup3r5txdrgn98Rxq30HXUJiIRhNEAgUi6FrquI0ZZQNZ3V5u0GydUWAhVozsx48V+EjFN
      a7K5QAKFG8dGVXr5/HbKqOZdKiljJqE+q1Ks64IbJ/QwoI2hD4GaImVJqGaA0/2IfnjLMt5g
      ljNm01iYF39BZxxVCX+vrBWiQGuhUJeZkhJ4Tzdtr0oyAEZjnBNd4/65vK/TQZ65ZJQVOFnb
      CXWBl6KUiyWbZoAzXpg08Wj9OLPh39v4kwUQDg/85pvv+PzlC759/Yb73Y73+yNf/+qrPyvK
      9vaPvwfg9eZePPdwFVhUFb+6vrmFZtVVtVKL5AaFEKjtSNYlszy8BxTGWJnUDbN3H4Sr+e0N
      67pe/UCq1lbMifGuug5jxAgHcL57SY0JtKEOckrIglHXRv16ea6qcG1ylpzJpwN22qCK+HpA
      VOowz5TjI2azpSopivP5SDnuiX5AzWf09obzuzd0my3x8T1lc3MtZsrxkdoWR58zbhhJpwPO
      OdbjI/USMqA0YTkztsWTCKQQqbkw7P/AMt1g0p6xH+DimG0bg28nYGguWns+ou9fEJeZiML3
      3U+CCv3TBXA8EFTi7bdvCA6OxyPr4UgA/hxC7OFlu1vsfLyqkxfcLL+XibiejihjRA0uBRtX
      qmq8OBlVMuftLc53pOMj9XzC7e4oxhBjesoZaljWeo/+wCevjW4GupEUIzpnnHVyj7FS4rWv
      FdUw/Ho8tMweedawzFKspyyTcXeHqpV0OmK6Hn1ZhfXJUmzHiZoyKawoazHjhPedpGHUwrC7
      RWvNqi0aJfC8Sv9C15pytPPklLDTFtaFfrNtCrDs0trIiVHCCg3y+WEkeE8NAb2943GZ6ZYz
      3N7j15lzyqQs78yGRYiHtNJ//3vOw0bEthRQzolf6xMef7IAjB/57EWPOs6c55np5o6vvvrq
      z/6Ay0nabW9kQlXQWmO6/vrFCvjmU4GKDSv6u98Rv/q1ODmBMkz0MQgVqBX5UhwDbj5wnmNb
      S5XT8YCsNFFZ1+OBfpxw4ygsT/MXaaOZG+thvRNYkDK4inVeIJDv2t/PUIVNikpRHh9Q44Q1
      G2pOT3x5o1OjHzDHR0ChtMYPAgG5WL5zxrkOReVGVzCaqA1GgTca1gVa3aJqRZWMV5Xz4x47
      bbgo1vmwp/viZ8CTeJWPBymWtabkhPQDSGvMpYi2McC/kEtalZLiX/2fjX+fwvgXLsl7xgBw
      D6/+DT7gEoqVHt7BNLEuqyi4y3w1Xfp+IKzL1fVpxi386j+y7PeUvn9qK/zt3zF/8dfkYcI5
      j3GOvK6wvUM9PnDh4H0/oEqWOkJr6DqGmx3r6SSef62vMOzCn18mj86ZUooUi2YAJZO1Ko1p
      LlM7bqTYNEawuXVtokGnwRlFqAVd1HXSn5eFru9JMQgUQZyqKEU5HjHasMTEVDMuBg62w2y2
      6JKJ64qNK4ZC1U9slqKSP6gHSpJnyBfootSV/alaXbvTqBE/H8AaePsdOgTWv/qagCLt3zGM
      QkuX208/tv3HV4Iv2Ng6tDZS3KVI1Vp2pfxEJV5GKZm4LLLzffDn55t7qrHowx68Z+kGrO9I
      IbTOJpkURWn8OIn195t/pH75H5rV9x2d7zBxxc4nTncv5TOsRXlPOp+Z9q853r2SU8p3KOC8
      nqBWur4nLOtVC3DOMe/fU5Winzb0my1rgZAr+oNWxaoUNgZU12G8bz3PGW0svh9YXn8rT64U
      Zj5j5yPuF19TgeV8oiwzGw2vdUubu2wVFbmII0aBWbXirRHfUTs1lHXYrgcmqJX08I6bEjnc
      vcQqRXr+eTvdJMFab3eM5z1x3ID9dOJq/rXxEZLhxJmpG3V3gQiXm1ScNdS2e7Z5JU2FSrci
      +fI/VZZhg9MGvd0RkV07hUA/TdSwYuKKzlkUXBT+tGf94q+b0tnYjmFETRvKdodz3VU4UkXo
      1nXYtEb5M7aK1TqdTw0aWNZ1vmoB/maHHTdAZbPZtKeU73EYBhgmOZNK4RCCCEyNi79QtCBm
      PF0rfjlT+5HkO9bDXlgrazHThllrBtex7N990GrZXKcp4axD1ywn7CTPRAWaQAdCOpTNDbPv
      GKyVxvkYWR7e0Wlxl57ev8Xajk79NGigH58Gbe+xtB+8quKirChiCpiuI757+4OjfNAwfvdb
      ws9a7VEr9vEd67PPnpTOfqCsC9W2Zvmuh6YJ1LZLF2PEGDdOGKVQpZLXlUyVBh3nxfvuHMY5
      fNeTckYrMZCpUqjWYceJze09YZnlcwBnDco6OgegmGNkg1iwFZXzuzcYJbZthUxU63x7HbKD
      X2FXitIHEVfiZkcxBtYVv5zQxpJv7sklY5W6vs/LiUeKYJyIXc5RdZQFEhbqfKIYh3v7Hfle
      AO2FiAjLDL4QlwV/eEDvbrFxlXWTE7offpos0L/18Ks0haT6RHvWD3zp1jq6L38OtZJDEPVy
      mZlTpswnqpLFkg+P5G6klkLWFqMNeT5fd9x0Ogk0QWFqJp4LDFux+M5nnPMM04Tqe+HzS6XU
      ynT/TKBBjKzzmW6cKBVMSWRjRUBTSlTppt6CutoQakqtGeeHMG7qOoxRTZhz5CAwRRic5rhs
      BapJkoCxjje4Vp/okqC5Q6sC//CGcveCfrORttIUKcuMGlsrZgLTSIB4PqKNxezuUbmQNzdy
      6vgeozS1FpTzKG0YbnZUChhDiYHp/hkmxVYr/P+e4P/rEfqW/Hw6oHNiOO9J4yRi0bSR4jes
      UrDu35Nun6GVImzv0Ebiw7W2pM9/gbUO4oo5HXB/eMs6tPuFhxH7QcK0G8QhGs8nOgX985co
      a9mvC04baQQxVhDC/gHTdU0JXfH9SIqBUAr+A5hScpZa4/V3qJvbq6dGxRVrPblNlhQDYVmI
      IdG3xVtjIp0ODLs7OQWLwCpJklDUv5Kmm+0H762HJ4crkO9fiqX6978hPvsMfI/d3lJjpKTU
      WLUGN0uWdAmlhCY1huV0knfSREHplFuZ7p6xP89wPFKsZ7vbsYYAtUpPdvdp32DzESBQa2Yp
      ku0zb+7wtVKSiF2jEffiusyM40QCVBErRNYa1pVSF8zvfgOffUk1htgNLMMGVWl2aAirFM3p
      fMKOCzFGSskM48T8/R8YhvGDeuJSRkoqdW3PqbPYF6xz+H6gtE6sNJ8o2uCLwR3eUbWiHvcw
      bqmbGygZZ1qBWkrLFqpPHVi1NrEMbFhIXhgeSb3oqUpMaDZFkvNP5jygrAvruuL6QdijF19g
      +0GKW+/JweAGTUwR6zo66ygt2wikAK+l4IeBbv8G9/CW9cuveAJRld45sh0kuylGhjCT3r8h
      3T37iA0j/2/GRyiCL6hXXxVVxQcF1u4eqGxyZA0Z5TtMigzvv6d8/1vK/WfUceLkO/qSKQh9
      aMcN7N/D+DSxc8nM5xM3w8DWGVCWuRQ2t/dMj2/Yb3c4Z4kxklfh7lVzVeYQhGJsYVwXKrTG
      gM6JJQQCYHYveL4e4ftvOO+e4/7mPxGWTM4JD1zDvKAlN8ioWpPXhWAsHrEkqFLRzdIdlzMB
      jYrNVVoKZrMl1XpNr3PDyGldccpACIS3bxitWDhQmjA3+3hcpcXSWKoSC3bJmfLsM9L2Tlo1
      tcZodbV22LhSNjcST+N79F/8XHo1PvHx4/cEjw2mOC+42XdX/Lw771mbWzKOG0yVBAZVM/nt
      9xz+699iUpSsHNuTmuelaI1WGnVzS84ZlwK3v/174rglb+6gVhYEfqCAsFI6aac0vhdGCLEt
      lCJRLBd68gnnC+wx1hGNpe8905tvWf1I+PkvCS++5P1//x+8+uWv+TCQyxmLcQ5trdQzDZdr
      YzFdh2ndYykG4sU/VNuNOa032IWF5AbW+YzVimqRXoprj+6TVye1jraLEh6WGXUhA1JEWQun
      AyEl+t09VRuGXYOLMaKsQ5WCGuQCD2MdMWdqqz8+9fHj1wANc4ZFQq4ueZ/yZ2fCPJNCwGgl
      vnWt0d3I+vV/xo/Tk2AVo0yqFOmWE+eLY9Q56rhh//NfyWS/6gdFqMVaycPE6kfKN//EEtfW
      WN/wecnkLPClvvueeHPf+gccaf9O8nSUJhwe8bvnYC0pBnIMuJd3DWebK+wIJRNSIp9Pkn7X
      lkZcZnrnZMcHrOvwy6mFeRlp8tGmkQSqtXkO7Z9L15ntpInHOg+1ilmuYfQUgiTlNXtGVYrB
      OSmWmx/qko4RS5YT6XhgcI7h+QtxzRoLccVZg2u9EJ/6+GgQTzXq+po0UOF4+4r4uAeg30hB
      TK1yZBtLOp3w64mKovQj4e0f6V+84sH20BZWzYXBiY6gtaXbbDHOXz8nXuJWtCb6nr7hcdV1
      kBLqElLVbMbT/g3JefIJpmVG30RxWu7u0H3f+n9BGcvw3/6LWIpzvlKGMjkht75keHJ4PtGK
      TR2fbnDOE5YFfbkrrVbSxQJBhaqoStz5KQTW44HSTrCwzPgqtg3rvRTBSokHSWtie556PIht
      /HqCKIgRO21wf/gdb1Ohf/4KVMT3PfvXf8SnTD9tMJ+2FejHXwCXsFldMlYr7DShu14oQbh6
      7gHs3TMuqWlVSXgTw4DJiSlF1rt71HGPr6Is54ajpa3QSYPLPHOzvSG2rCDfDywh4o1l6sW0
      VooY1JzzUCUxwiqhLuOd9AXb8wljNUxbyvncAnQzNWfqfMT9/n8JC/XqS8L+Ab/bcfPZFwLn
      llkmZxHLcQXZlafNEyy7yH5OwT/9A/H+FUsI3KaFbB3HCuOzl6STRCty+5wwn4QizVkEtrah
      pLCKhcR34ny9LNKL76hkjLFYJYLfsszYFMjdQL65Iz8eCKvUD2FZGNvPwVrHpz4+QlN865hK
      gRoDS0y4WnHWYXKkfPcN9qu/YTkervjbpMj0+JZ12hCbeKZKQb1/w7oTnlpszgZJM2yLLGf6
      84GlH7DOP92/pUSgSmfx9Bvf4Ywlrwv+4TX19hnaevTxATWM0kiyuyUOA9Z6wuE7zPOX1FYY
      q36gPHslaQ3OMT17JhmlSOGrc3qKWgSocPPmG8r0S8owkoL09oZ5YbBGItkvRjZjJUg3SSsj
      qKspztVKaE05XLQCqqjV63KFm/b2nuvCixE1TJR3r6kvPqMYw3T3DJMjCQXes+tHiAFlHVXp
      a97ST6El8n8Dk+hnO0jObDQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total by County' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total by County (2)' width='192'>
      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
      B13nB3loD4+oAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Us Candidate Votes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEH0lEQVR4nO3ZX08cVQCG8XeBJVgbKIFYscifrq1ua7eWKN7pVzB+0V56Y02MsVRiLVB1
      i21hd6EiXSOw0s1mpawXpkQuemNQYp7nd3UmJ3MyM5knc5Ip9Hq9XiSovtO+AOk0GYDQDEBo
      BiA0AxDasQBqtfUkycLCQpKkXq+l2Wy+9OTus73sPeu+fPXeQdbWG0mS9Vrt2FRrb++fXK90
      ogb+flCr1TN1/myWl1ZTmf8gjcZWZqcn09n5Od89/CXFYjHlyZF8X/8txeJgrk6dS7f4apa+
      /SbdP57nrcr72X3yMLu/tzMxU87E2NnU1h/n4uyFbDQ2MzzUn8eNrUyV3s6Xn93M5esfpjQx
      mupaPbOX3k1rey077V7m5irpP60nIpRjX4DpkcF8fqeaTz79OIu3vsjw5DvZ3NhMZ3crI2+W
      c9BpZb+5kddKlXTbO+nsbqW5f5B253nmb1zM6oNanmy3Mlcaz9r2fpLk3FBf6j/9kPFSJdVH
      65mfn8+j6kqmS5dy41o5X93+OgP9/bmzcDvN7adJoc99mf4zx961matXsrz0IK+fn8nyykrK
      M6NHc4VCISm8GPe9GB4d/2Ug7VYz9+5Xj+auv3clN28tpXxhOK8MFLK4uJjBM6MZ6k/u3q9m
      anIyh4dJpXIto2Nj2Wms5mn78N+6X+mYwkn/Cf5x5W52fm3mjcpHmR0/c5JLSyfuxAOQ/k/c
      bgvNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBC
      MwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxA
      aAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoB
      CM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIz
      AKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBo
      BiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEI
      zQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMA
      oRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgG
      IDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjN
      AIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAof0JwIW1FXRlVOsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Votes Explanation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Votes vs Donations' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
