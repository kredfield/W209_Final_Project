<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <NavigationAction />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Final_Project_4_15642958352660' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
        <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
        <members>
          <member value='&quot;Map by Votes&quot;' />
          <member value='&quot;Map by Donations&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='county_race_vote_donate' inline='true' name='federated.111462w1qeyrfp1adgtd00ipgciu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='county_race_vote_donate' name='textscan.087laeq11cmjag1fk9s5z1h1k5vv'>
            <connection class='textscan' directory='C:/Users/krred/Documents/Berkeley/w209/Final_Project' filename='county_race_vote_donate.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.087laeq11cmjag1fk9s5z1h1k5vv' name='county_race_vote_donate.csv' table='[county_race_vote_donate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
            <column datatype='integer' name='Unnamed: 0.1.1' ordinal='3' />
            <column datatype='integer' name='county_fips' ordinal='4' />
            <column datatype='integer' name='Per_Capita_Inc' ordinal='5' />
            <column datatype='integer' name='Personal_Inc' ordinal='6' />
            <column datatype='integer' name='Population' ordinal='7' />
            <column datatype='string' name='state_postal' ordinal='8' />
            <column datatype='string' name='county_name' ordinal='9' />
            <column datatype='string' name='candidate' ordinal='10' />
            <column datatype='string' name='candidate_fec' ordinal='11' />
            <column datatype='string' name='party' ordinal='12' />
            <column datatype='string' name='office' ordinal='13' />
            <column datatype='integer' name='votes' ordinal='14' />
            <column datatype='real' name='total_donations' ordinal='15' />
            <column datatype='real' name='donation_count' ordinal='16' />
            <column datatype='real' name='total_race_donations' ordinal='17' />
            <column datatype='integer' name='total_race_county_votes' ordinal='18' />
            <column datatype='real' name='total_race_county_donations' ordinal='19' />
            <column datatype='integer' name='votes_winner' ordinal='20' />
            <column datatype='integer' name='donation_winner' ordinal='21' />
            <column datatype='integer' name='total_party_county_votes' ordinal='22' />
            <column datatype='real' name='total_party_county_donations' ordinal='23' />
            <column datatype='integer' name='county_votes_winner' ordinal='24' />
            <column datatype='integer' name='county_donation_winner' ordinal='25' />
            <column datatype='real' name='normalized_votes' ordinal='26' />
            <column datatype='real' name='normalized_donations' ordinal='27' />
            <column datatype='integer' name='party_binary' ordinal='28' />
            <column datatype='real' name='normalized_votes_interacted' ordinal='29' />
            <column datatype='real' name='normalized_donate_interacted' ordinal='30' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1.1]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Unnamed: 0.1.1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_fips</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per_Capita_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per_Capita_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Per_Capita_Inc</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal_Inc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Personal_Inc]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Personal_Inc</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_postal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_postal]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>state_postal</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate_fec</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate_fec]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>candidate_fec</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[party]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>office</remote-name>
            <remote-type>129</remote-type>
            <local-name>[office]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>office</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_donations</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[donation_count]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_count</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_donations</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_race_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_votes</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_race_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_race_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_race_county_donations</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>votes_winner</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>donation_winner</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_party_county_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_votes</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_party_county_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_party_county_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>total_party_county_donations</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_votes_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_votes_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_votes_winner</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_donation_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_donation_winner]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>county_donation_winner</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donations]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donations</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party_binary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[party_binary]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>party_binary</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_votes_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_votes_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_votes_interacted</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_donate_interacted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_donate_interacted]</local-name>
            <parent-name>[county_race_vote_donate.csv]</parent-name>
            <remote-alias>normalized_donate_interacted</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Display Sheet' datatype='string' name='[Calculation_453737681150197760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Votes Binary Party' datatype='integer' name='[Calculation_7164664076363644928]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[party_binary]*[votes]' />
      </column>
      <column caption='Donations Binary Party' datatype='real' name='[Calculation_7164664076363796481]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[party_binary]*[total_donations]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
      <column caption='Candidate Fec' datatype='string' name='[candidate_fec]' role='dimension' type='nominal' />
      <column caption='County Donation Winner' datatype='integer' name='[county_donation_winner]' role='measure' type='quantitative' />
      <column caption='County Fips' datatype='integer' name='[county_fips]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Votes Winner' datatype='integer' name='[county_votes_winner]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Donation Winner' datatype='integer' name='[donation_winner]' role='dimension' type='ordinal' />
      <column caption='normalized_votes' datatype='real' name='[normalized_votes]' role='measure' type='quantitative' />
      <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
      <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
      <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
      <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
      <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
      <column-instance column='[donation_winner]' derivation='Attribute' name='[attr:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[votes_winner]' derivation='Attribute' name='[attr:votes_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[donation_winner]' derivation='Count' name='[cnt:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[donation_winner]' derivation='CountD' name='[ctd:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[donation_winner]' derivation='None' name='[none:donation_winner:ok]' pivot='key' type='ordinal' />
      <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
      <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
      <group caption='Action (Candidate,County Name,Party,State Postal)' hidden='true' name='[Action (Candidate,County Name,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (Candidate,Party)' hidden='true' name='[Action (Candidate,Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[party]' />
        </groupfilter>
      </group>
      <group caption='Action (Candidate,Party,State Postal)' hidden='true' name='[Action (Candidate,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[candidate]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,Party)' hidden='true' name='[Action (County Name,Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,Party,State Postal)' hidden='true' name='[Action (County Name,Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (County Name,State Postal)' hidden='true' name='[Action (County Name,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county_name]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <group caption='Action (Party,State Postal)' hidden='true' name='[Action (Party,State Postal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[party]' />
          <groupfilter function='level-members' level='[state_postal]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state_postal, county_name'>
          <field>[state_postal]</field>
          <field>[county_name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Scott/OneDrive/Documents/My Tableau Repository/Datasources/county_race_vote_donate.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/04/2019 04:42:53 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='county_race_vote_donate' increment-value='%null%' refresh-type='create' rows-inserted='20502' timestamp-start='2019-08-04 04:42:53.712' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20502</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_fips</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_fips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_fips</remote-alias>
              <ordinal>1</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3649</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Per_Capita_Inc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Per_Capita_Inc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Per_Capita_Inc</remote-alias>
              <ordinal>2</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3553</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Personal_Inc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Personal_Inc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Personal_Inc</remote-alias>
              <ordinal>3</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3649</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>4</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3631</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_postal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_postal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_postal</remote-alias>
              <ordinal>5</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_name</remote-alias>
              <ordinal>6</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2378</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate</remote-alias>
              <ordinal>7</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1031</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate_fec</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate_fec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate_fec</remote-alias>
              <ordinal>8</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>883</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>party</remote-alias>
              <ordinal>9</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>office</remote-name>
              <remote-type>129</remote-type>
              <local-name>[office]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>office</remote-alias>
              <ordinal>10</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>votes</remote-alias>
              <ordinal>11</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_donations</remote-alias>
              <ordinal>12</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3511</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>donation_count</remote-name>
              <remote-type>5</remote-type>
              <local-name>[donation_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>donation_count</remote-alias>
              <ordinal>13</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>725</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_race_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_donations</remote-alias>
              <ordinal>14</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3511</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_county_votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_race_county_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_county_votes</remote-alias>
              <ordinal>15</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5447</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_race_county_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_race_county_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_race_county_donations</remote-alias>
              <ordinal>16</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3582</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>votes_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[votes_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>votes_winner</remote-alias>
              <ordinal>17</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>donation_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[donation_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>donation_winner</remote-alias>
              <ordinal>18</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_party_county_votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_party_county_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_party_county_votes</remote-alias>
              <ordinal>19</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5049</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_party_county_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_party_county_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_party_county_donations</remote-alias>
              <ordinal>20</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4532</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_votes_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_votes_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_votes_winner</remote-alias>
              <ordinal>21</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_donation_winner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_donation_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_donation_winner</remote-alias>
              <ordinal>22</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_votes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized_votes</remote-alias>
              <ordinal>23</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17254</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_donations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_donations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized_donations</remote-alias>
              <ordinal>24</ordinal>
              <family>county_race_vote_donate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14224</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:county_name:nk]'>
          <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
        </filter>
        <filter class='categorical' column='[none:state_postal:nk]'>
          <groupfilter function='level-members' level='[none:state_postal:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.276402' measure-ordering='alphabetic' measure-percentage='0.548892' parameter-percentage='0.174707' rowDisplayCount='100000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:donation_winner:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>15</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>16</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>23</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:donation_winner:ok]&#10;[none:party:nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>1</bucket>
                <bucket>&quot;DEM&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>0</bucket>
                <bucket>&quot;DEM&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>0</bucket>
                <bucket>&quot;REP&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>1</bucket>
                <bucket>&quot;REP&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ctd:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:donation_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:party:nk]&#10;[attr:votes_winner:ok]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>0</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>1</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;DEM&quot;</bucket>
                <bucket>%many-values%</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>1</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>0</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;REP&quot;</bucket>
                <bucket>%many-values%</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:party:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;DEM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;REP&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='state_postal' />
        <field-sort-custom-order field='county_fips' />
        <field-sort-custom-order field='county_name' />
        <field-sort-custom-order field='candidate' />
        <field-sort-custom-order field='candidate_fec' />
        <field-sort-custom-order field='party' />
        <field-sort-custom-order field='office' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='votes' />
        <field-sort-custom-order field='total_donations' />
        <field-sort-custom-order field='donation_count' />
        <field-sort-custom-order field='total_votes' />
        <field-sort-custom-order field='votes_winner' />
        <field-sort-custom-order field='donation_winner' />
        <field-sort-custom-order field='total_county_votes' />
        <field-sort-custom-order field='total_county_donations' />
        <field-sort-custom-order field='county_votes_winner' />
        <field-sort-custom-order field='county_donation_winner' />
        <field-sort-custom-order field='total_party_votes_county' />
        <field-sort-custom-order field='total_party_donations_county' />
        <field-sort-custom-order field='total_donation_count_county' />
        <field-sort-custom-order field='Calculation_1319273230062022656' />
        <field-sort-custom-order field='Total Donations (bin)' />
        <field-sort-custom-order field='Per_Capita_Inc' />
        <field-sort-custom-order field='Personal_Inc' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='normalized_votes' />
        <field-sort-custom-order field='normalized_donations' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Same Sheet' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total by County' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total by County' />
      </command>
    </action>
    <action caption='Same Sheet 1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Us Candidate Votes' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Us Candidate Votes' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source type='sheet' worksheet='Map by Votes' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Pie Total Donation' />
      </command>
    </action>
    <action caption='Parameter1' name='[Action4]'>
      <activation type='on-hover' />
      <source type='sheet' worksheet='Map by Donations' />
      <command>
        <param name='agg-type' value='attr' />
      </command>
    </action>
    <action caption='Filter2' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dash with changing views' type='sheet'>
        <exclude-sheet name='Bar # of Donations' />
        <exclude-sheet name='Pie Total Donation' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dash with changing views' />
      </command>
    </action>
    <action caption='Same Sheet 2' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total by County (2)' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total by County (2)' />
      </command>
    </action>
    <action caption='Filter1' name='[Action8]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dash with changing views' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map by Donations' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dash with changing views' />
      </command>
    </action>
    <nav-action caption='Map by' name='[Action7]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Map by Donations' />
      <params>
        <param name='sheet' value='Map by Votes' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='$ per House Candidate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]</rows>
        <cols>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / ([federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]))</cols>
      </table>
      <simple-id uuid='{F23BB9FF-A904-401F-A559-71282BD2845B}' />
    </worksheet>
    <worksheet name='Bar # of Donations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' scope='rows' value='Number of Individual Donations' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</rows>
        <cols>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk])</cols>
      </table>
      <simple-id uuid='{32066775-2004-473B-8E3C-82C86D5C52E0}' />
    </worksheet>
    <worksheet name='Bar # of Donations (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5C8D31A0-AA41-450F-8F3F-7D76A81FF5B9}' />
    </worksheet>
    <worksheet name='Bar # of Donations (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Donations per County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[donation_count]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[donation_count]' derivation='Sum' name='[sum:donation_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_party_county_votes]' derivation='Sum' name='[sum:total_party_county_votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_party_county_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_votes:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{E3888DDC-2C16-4032-866C-93D97BEC5AFB}' />
    </worksheet>
    <worksheet name='Candidate Votes vs Donations'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_donations]' derivation='Sum' name='[sum:total_donations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes]' derivation='Sum' name='[sum:votes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]'>
            <groupfilter function='level-members' level='[none:candidate:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_donations:qk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]</cols>
      </table>
      <simple-id uuid='{B15F5557-C936-4D1A-997F-E28DA3184E8A}' />
    </worksheet>
    <worksheet name='Explanation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>This interactive map shows both voting and donation information at a county level, for the 2016 congressional elections. Use the &quot;Select View&quot; drop down menu to view the map by votes or donations. </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='508' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9A60AB75-063F-4CEB-B457-F672491BB8D0}' />
    </worksheet>
    <worksheet name='Map by Donate (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_donate_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_donate_interacted]' derivation='Sum' name='[sum:normalized_donate_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6949375.2669335324' min='-14787849.795397056' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='10047596.511373963' min='324873.58569716604' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{32EE3578-988E-40E1-9AD8-8F3F8D165C90}' />
    </worksheet>
    <worksheet name='Map by Donations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Donations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Donations Binary Party' datatype='real' name='[Calculation_7164664076363796481]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[party_binary]*[total_donations]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column datatype='integer' name='[party_binary]' role='measure' type='quantitative' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_7164664076363796481]' derivation='Sum' name='[sum:Calculation_7164664076363796481:qk]' pivot='key' type='quantitative' />
            <column caption='Total Donations' datatype='real' name='[total_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-9313758.3226141743' min='-15800190.012411932' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7475943.5370440092' min='3345807.6316266488' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363796481:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363796481:qk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State Postal:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{41D32722-7896-4D6A-9AF0-C5C706E7701B}' />
    </worksheet>
    <worksheet name='Map by Votes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Votes Binary Party' datatype='integer' name='[Calculation_7164664076363644928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[party_binary]*[votes]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column datatype='integer' name='[party_binary]' role='measure' type='quantitative' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_7164664076363644928]' derivation='Sum' name='[sum:Calculation_7164664076363644928:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7308437.7775747078' min='-13953506.087983372' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='11013227.725395329' min='2770787.4687242331' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State Postal:&#9;</run>
                <run bold='true'>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{39261132-0304-416A-A78D-CFA26D20FC94}' />
    </worksheet>
    <worksheet name='Map by Votes (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[votes_winner]' derivation='Attribute' name='[attr:votes_winner:ok]' pivot='key' type='ordinal' />
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]'>
            <groupfilter function='member' level='[attr:votes_winner:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7173114.8695446355' min='-14542987.838705925' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7312568.6699103191' min='1960147.083167108' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EBA4A509-A86E-4A5F-9D50-AA61C4C41904}' />
    </worksheet>
    <worksheet name='Map by Votes (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning Votes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_votes_interacted]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_votes_interacted]' derivation='Sum' name='[sum:normalized_votes_interacted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7073454.4047695613' min='-14272459.377853507' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7256042.4439830892' min='2720320.4917366654' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F89E83A5-A2F1-41D0-ACEE-901993559971}' />
    </worksheet>
    <worksheet name='Pie Total Donation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total County Donations&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_party_county_donations]' derivation='Sum' name='[sum:total_party_county_donations:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_party_county_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Donations&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='279' />
            <format attr='height' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' value='272' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>$ </run>
                <run>Æ&#10;</run>
                <run>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2F1CA1D7-D40C-4B43-8AEC-1FB6272EEC25}' />
    </worksheet>
    <worksheet name='Pie Total Donation (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total County Donations&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_party_county_donations]' derivation='Sum' name='[sum:total_party_county_donations:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_party_county_donations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='279' />
            <format attr='height' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' value='272' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
              <wedge-size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
              <text column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>$ </run>
                <run>Æ&#10;</run>
                <run>&lt;[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:total_party_county_donations:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk] / [federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{3BA1E7B0-5714-428B-B407-335574B3A8C4}' />
    </worksheet>
    <worksheet name='Pres'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US President&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7422578.4077404393' min='-14209091.804296914' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6999002.9555749316' min='2513002.6296488163' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E394C042-5C71-47B9-8C7D-FCFE5D2BFE80}' />
    </worksheet>
    <worksheet name='Senate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US Senate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7422578.4077404393' min='-14209091.804296914' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6999002.9555749316' min='2513002.6296488163' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{669847FB-3C0C-4020-BA92-FBB2D07E6910}' />
    </worksheet>
    <worksheet name='Sheet 23'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Votes Binary Party' datatype='integer' name='[Calculation_7164664076363644928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[party_binary]*[votes]' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Donation Winner' datatype='integer' name='[donation_winner]' role='dimension' type='ordinal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[donation_winner]' derivation='None' name='[none:donation_winner:ok]' pivot='key' type='ordinal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column datatype='integer' name='[party_binary]' role='measure' type='quantitative' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_7164664076363644928]' derivation='Sum' name='[sum:Calculation_7164664076363644928:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes_winner]' derivation='Sum' name='[sum:votes_winner:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
            <column caption='Votes Winner' datatype='integer' name='[votes_winner]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' />
              <size column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes_winner:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:ok]</cols>
      </table>
      <simple-id uuid='{DB9B5D21-1396-4B63-A44F-5A5C9C589948}' />
    </worksheet>
    <worksheet name='Sheet 24'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Votes Binary Party' datatype='integer' name='[Calculation_7164664076363644928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[party_binary]*[votes]' />
            </column>
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[party_binary]' role='measure' type='quantitative' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_7164664076363644928]' derivation='Sum' name='[sum:Calculation_7164664076363644928:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F6BC8862-7B62-4217-B665-2BB551CA5414}' />
    </worksheet>
    <worksheet name='US House Map (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_donations]' role='measure' type='quantitative' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[normalized_donations]' derivation='Sum' name='[sum:normalized_donations:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[candidate]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,Party)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Candidate,County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (Party,State Postal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-7332935.8776561785' min='-14526204.679557364' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='6924657.60306226' min='2344454.0062558725' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' />
              <lod column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' />
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donations:qk]' />
              <geometry column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D44E7151-3300-40C2-8F02-9222D06C5EC7}' />
    </worksheet>
    <worksheet name='Votes per Candidate'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
              <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
            <column caption='Select View' datatype='string' name='[Calculation_453737681204142084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_453737681204142084]' derivation='None' name='[none:Calculation_453737681204142084:nk]' pivot='key' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
            <column-instance column='[party]' derivation='None' name='[none:party:nk]' pivot='key' type='nominal' />
            <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
            <column caption='Party' datatype='string' name='[party]' role='dimension' type='nominal' />
            <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes]' derivation='Sum' name='[sum:votes:qk]' pivot='key' type='quantitative' />
            <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[party]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county_name]' />
              <groupfilter function='level-members' level='[state_postal]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]'>
            <groupfilter function='member' level='[none:Calculation_453737681204142084:nk]' member='&quot;Map by Votes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Greg\&quot; Ellison&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Gus\&quot; Rantz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Mike\&quot; Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;\&quot;Rick\&quot; John&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;[Write-in]&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;A. Donald McEachin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ACCAVITTI, JR., FRANK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adam B. Schiff&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ADAM KINZINGER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adam Smith&quot;' />
              <groupfilter from='&quot;Adrian Petrus&quot;' function='range' level='[none:candidate:nk]' to='&quot;Adriano Espaillat&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Adrienne Nicole Edwards&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Agha Khan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Agha KHAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Al Lawson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AL McAFFREY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alan Bohms&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alan Lowenthal&quot;' />
              <groupfilter from='&quot;Albio Sires&quot;' function='range' level='[none:candidate:nk]' to='&quot;Alcee L. Hastings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alejandro Vega&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ALEX X. MOONEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alina Valdes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Allan Romaguera&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Alma Adams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AMANDA HOWLAND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AMASH, JUSTIN&quot;' />
              <groupfilter from='&quot;Ami Bera&quot;' function='range' level='[none:candidate:nk]' to='&quot;Amodei, Mark E.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andre D. Carson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andrea Leigh McGee&quot;' />
              <groupfilter from='&quot;Andy Barr&quot;' function='range' level='[none:candidate:nk]' to='&quot;Andy Biggs&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Harris&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Millard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Andy Whallon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angel Cadena&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angel Cardenas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Angela Demaree&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ANGELA PENDLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Dalrymple&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann McLane Kuster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Wagner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ann Wofford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anna G. Eshoo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anna Throne-Hols&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Anthony G. Brown&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Antonio C. Amador&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;April Freeman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Arik Bjorn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Arrington&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ART HALVORSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AUGUST (O&apos;NEILL) DEUSER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;AUSTIN SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;B. Mark Walker&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Babin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bao Nguyen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BARBARA JEAN COMSTOCK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barbara Lee&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barrera&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BARRY LOUDERMILK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barry Welsh&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bartley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Barton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BEN R LUJAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;bennie g thompson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BERGMAN, JACK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bernice Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Beverly A. Goldstein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BILL FOSTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Otto&quot;' />
              <groupfilter from='&quot;Bill Pascrell&quot;' function='range' level='[none:candidate:nk]' to='&quot;Bill PASCRELL, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bill Posey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Billy Burkette&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Billy Long&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BISHOP, MIKE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Blaine Luetkemeyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Gibbs&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Latta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Patterson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bob Seay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BOBBY L. RUSH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bonnie Watson Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bonnie WATSON COLEMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Ashford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRAD SCHNEIDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Sherman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brad Wenstrup&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bradley Byrne&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bradshaw&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brady Pinero Walkinshaw&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRENDAN F BOYLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brent SONNEK-SCHMELZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brett Geymann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brett Murdock&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian Higgins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian J Heinrich&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;BRIAN K FITZPATRICK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Brian Mast&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bruce Davis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bruce Westerman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan Barrilleaux&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Bryan Caforio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Burgess&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;C. A. Dutch Ruppersberger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cadien&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cain, Emily *&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cain, Emily Ann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Calvin Sidle&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Calvin Silde&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cargas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carlos Curbelo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carlos Santamaria&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carol Shea-Porter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carolyn Maloney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Carter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Casey Lucius&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Castro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Catherine Ping&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cathy McMorris Rodgers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cedric Richmond&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charlene Albarran&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES \&quot;\&quot;C.J.\&quot;\&quot; BARICEVIC&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charles \&quot;\&quot;Casper\&quot;\&quot; Stockham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES ALAN HERNICK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHARLES W DENT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Charlie Crist&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHERI BUSTOS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Blake Wiggins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Collins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Fedalei&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Gibson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chris Stewart&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christian Cano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHRISTINA M HARTMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CHRISTINA OWEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christine Quinn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher H. Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher H. SMITH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Christopher Peters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Chuck Fleischmann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clark&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Claudia Tenney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clay Cope&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clay Higgins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CLEMENTS, PAUL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Clint Didier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Colleen Deacon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Colm Willis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Conaway&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CONYERS, JR., JOHN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Corrogan R. Vaughn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Corry Westbrook&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Craig Bowden&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;CROSS, Peter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Cuellar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Culberson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dale K. Mensing&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Cox&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Donovan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dan Newhouse&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dana Rohrabacher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel B. Giroux&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel M. Wik&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daniel Webster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DANIEL WILLIAM LIPINSKI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danil Ezekiel Faust&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danniel Maio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DANNY K. DAVIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Danny R. Turner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Daria Novak&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DARIN LaHOOD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Darrell Issa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Darren Soto&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Cowell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Giles&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Hughes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Koller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Loebsack&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dave Reichert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID A BRAT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David A. Rosa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID B. MCKINLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David E. Bruderly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Gurfein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. Cole&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. COLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. Pinckney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David H. PINCKNEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David J. Putman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Kustoff&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David M Blackwell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David N. Cicilline&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David P. Joyce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Price&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Rouzer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Schweikert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DAVID SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Valadao&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David W. Jolly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David W. Kent&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;David Young&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Debbie Wasserman Schultz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DEBORAH L WILLIAMS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Denise Gitsham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DENISE JUNEAU&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dennis A. Ross&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;dennis c quinn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Denny Heck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Derek Kilmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DEREK W KITTS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Devin G. Nunes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diana DeGette&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diana Kastenbaum&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Diane Black&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dianne Curry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Dimitri Cherny&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DINGELL, DEBBIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doggett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Don Bacon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DON WILSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald Howbert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald M. Payne Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald M. PAYNE, JR.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald P. Larson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DONALD STERNOFF BEYER Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Donald W. Norcross&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DONALD W. NORCROSS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doris Matsui&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Applegate&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Basler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DOUG COLLINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug La Malfa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Lamborn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Owens&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Doug Shepherd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DOUGLAS BELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DREW FERGUSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DRISKELL, GRETCHEN D.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Du Wayne Gregory&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Duncan Hunter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;DWIGHT EVANS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EARL âBUDDYâ CARTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Albertson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Perlmutter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ed Royce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EILEEN MCNEIL BEDELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elbert Guillory&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eleanor Holmes Norton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elijah Cummings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eliot Engel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elise Stefanik&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Elizabeth Esty&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Emanuel Cleaver II&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Emilio Huerta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eric Swalwell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Erik Paulsen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ERIN R MCCLELLAND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ernest T. Reeves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EVAN JENKINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;EVANS, H.D. CHIP&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Eve Nunez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;F. James Sensenbrenner, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Farenthold&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Flores&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Fran Person&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Francis Rooney&quot;' />
              <groupfilter from='&quot;Frank A. Lobiondo&quot;' function='range' level='[none:candidate:nk]' to='&quot;FRANK A. LOBIONDO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;FRANK D. LUCAS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Guinta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank LoBiondo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Nelson Drake&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank PALLONE, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frank Spotorno&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;FRANKIE ROBBINS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Frederick John LaVERGNE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;French Hill&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;G. Burt Lancaster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;G. K. Butterfield&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GABBARD, Tulsi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gail Schwartz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gallego&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Garret Graves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gary Jill Stein&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gary Palmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Garza&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Genevieve (Gen) Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George Athanasopoulos&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George E. McDermott&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;George Holding&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GEORGE J KELLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GERALD EDWARD CONNOLLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gibson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Giroux, Daniel B.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Glenn Grothman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GLENN WILLIAM THOMPSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Glo Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gohmert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gonzalez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gordon Christensen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GORMAN, JEFF&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grace F. Napolitano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grace Meng&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Granger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Green&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;GREG DUKE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Greg Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;gregg harper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gregory Meeks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Grover Joseph Rees&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gus Michael Bilirakis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Gwen S. Moore&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;H. Powell Dew, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hakeem Jeffries&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HANABUSA, Colleen Wakako&quot;' />
              <groupfilter from='&quot;Hardin&quot;' function='range' level='[none:candidate:nk]' to='&quot;Hardy, Cresent&quot;' />
              <groupfilter from='&quot;Harold \&quot;\&quot;Hal\&quot;\&quot; Rogers&quot;' function='range' level='[none:candidate:nk]' to='&quot;Harold Bratcher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Harold Russell Taub&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector Castillo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector L. Castillo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hector L. CASTILLO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HENRY C âHANKâ JOHNSON JR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hensarling&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Herman L. Vidrine&quot;' />
              <groupfilter from='&quot;Holbrook&quot;' function='range' level='[none:candidate:nk]' to='&quot;Holbrook, Mark I.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hosea Cleveland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HOWARD MORGAN GRIFFITH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Huelskamp, Tim&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;HUIZENGA, BILL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Hurd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ileana Ros-Lehtinen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Isadore Hall, III&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;J. Wesley Casteen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JACK A MCGRANN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jack Martins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jack Orswell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackie Speier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackie Walorski&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jackson Lee&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jacob \&quot;Dorian Phibian\&quot; Hebert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;jacob owens&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jacob Turk&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jaime Herrera Beutler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JAMES A JONES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James E Jim Clyburn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JAMES NEAL HARRIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Neu Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James P. McGovern&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Piotrowski&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James R. COMER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James R. Langevin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;James Veltmeyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jamie Raskin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jan Schneider&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jane D. Dittmar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Janet Garrett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JANICE D. SCHAKOWSKY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jared Polis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jared W. Huffman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Chaffetz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Lewis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jason Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jay Sidie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Denham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Duncan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Fortenberry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jeff Stone&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JEFFREY A. LEEF&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jenkins, Lynn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jennifer Martinez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jermaine Sampson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerrold Nadler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerry Kobishop (wr-in)&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jerry McNerney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jesse Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Banks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Cooper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Costa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Hagedorn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Himes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Jordan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Lange&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Lawrence&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Moeller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Mowrer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Postma&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jim Renacci&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JIM WALZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Jimmy Panetta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOAN McCARTHY LASONDE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JODY HICE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Courtney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Garcia&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joe Pakootas&quot;' />
              <groupfilter from='&quot;Joe Vitollo&quot;' function='range' level='[none:candidate:nk]' to='&quot;Joe Wilson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John A. YARMUTH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Adams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John B. Larson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;john bouie, ii&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Dale&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN F MORROW&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Faso&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Garamendi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John J. Duncan, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John K. Delaney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Katko&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN M. SHIMKUS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Mica&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John P. McNeil&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Plumb&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHN R. LEWIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Rutherford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Sarbanes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Shaban&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;John Yarmuth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Johnny M. Tacherra&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Johnson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOHNSON, LON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JONES, JEFF&quot;' />
              <groupfilter from='&quot;Jose Serrano&quot;' function='range' level='[none:candidate:nk]' to='&quot;Joseph \&quot;Joe\&quot; Swider&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph Crowley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph M. Wenzel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph M. WENZEL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joseph P. Kennedy, III&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Josh Brannon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Josh Gottheimer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joshua Gottheimer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JOSHUA HARRIS-TILL&quot;' />
              <groupfilter from='&quot;Joshua S. Gottheimer&quot;' function='range' level='[none:candidate:nk]' to='&quot;JOSHUA T BURKHOLDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Joyce Beatty&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Juan M. Hidalgo, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Juan Vargas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Judy Chu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Julia Brownley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;JUNIUS RODRIGUEZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Justin Donald Fareed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KAAIHUE, Angela Aulani&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kai Degner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Karen Bass&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Katherine M. Clark&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kathleen Rice&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kathy Castor&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KEITH JAMES ROTHFUS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Keith Mundy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ken Buck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ken Calvert&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth \&quot;\&quot;Ken\&quot;\&quot; McGurn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth Cutno&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kenneth W. Wright&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KERITH STRANO TAYLOR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Cramer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin McCarthy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Miller&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kevin Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Khary Penebaker&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KIHUEN, RUBEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KILDEE, DANIEL T.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kim Myers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kim Weaver&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KIM, Howard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KLAUSNER, HOWARD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kristi Noem&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;KUMAR, ANIL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Kyrsten Sinema&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lacy Clay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Buchson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Bucshon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry D. Bucshon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Larry Rader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Laura Sterling&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LAWRENCE, BRENDA L.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lee Ann Dugas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lee Zeldin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lenore Solis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Leon Threatt&quot;' />
              <groupfilter from='&quot;LEONARD FRANCIS MCALLISTER&quot;' function='range' level='[none:candidate:nk]' to='&quot;Leonard LANCE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LEVIN, SANDER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Linda T. Sanchez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lingerfelt&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Liz Cheney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LLOYD K SMUCKER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lois Frankel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lorna Phillipson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lorna PHILLIPSON&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LOU BARLETTA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lou Correa&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Louie J. Campos&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Louise Slaughter&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LuAnn L. Bennett&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lucille Roybal-Allard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;LUIS V. GUTIERREZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Luke Messer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn C. Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn Coleman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Lynn Jenkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mal Hyman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marc Hennemann&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marchant&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marcia L. Fudge&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marcy Kaptur&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mario Diaz-Balart&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Arness&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Assini&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark C. Alliegro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARK D. WICKLUND&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark DeSaulnier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;mark gladney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARK HUNT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Meadows&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Plaster&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Pocan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Sanford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mark Takano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARKWAYNE MULLIN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marsha Blackburn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marshall Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Marshall, Roger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martha McSally&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martha Roby&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Martin L Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MARY ELLEN BALCHUNIS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mary Hoeft&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATT DETCH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matt Gaetz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matt Heinz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matta&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW ALTON CARTWRIGHT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW CONNOLLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MATTHEW DEW ROWE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Matthew M. Corey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mauck&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Maxine Waters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McCaul&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McDowell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;McKellar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Melody Shekari&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Melvin L. \&quot;Kip\&quot; Holden&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MERRIE LEE SOULES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mia Love&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL BOST&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL D PARRISH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael E. Capuano&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Eggman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL F DOYLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL H ROMERO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael L. Lorentz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael L. Wade&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL M MOLESEVICH&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael O&apos;Reilly&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHAEL PAUL MARSICANO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Pompeo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael T. Pearson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michael Wager&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Michele Young&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MICHELLE LUJAN GRISHAM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mick Mulvaney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Coffman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Derrick&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Gallagher&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Honda&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MIKE MANYPENNY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MIKE QUIGLEY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Rogers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Simpson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Thompson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mike Turner&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mikel Weisser&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mimi Walters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Misty Plowright&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mitchell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MITCHELL, PAUL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Mo Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Monica Vernon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MOOLENAAR, JOHN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Morgan Carroll&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MORSE, CHRISTOPHER R.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;MURPHY, DENNIS B.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;N. Eugene Cleek&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nancy Jo Kemper&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nancy Pelosi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nanette Diaz Barragan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Narvaiz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nathan Mathis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Neal Dunn&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nicholas Morse&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nicola S. Tsongas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nita Lowey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Norma J. Torres&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Nydia Velazquez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;O&apos;Rourke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OCASIO, Javier&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Oliver Jenkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Olson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Omar Navarro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OSTROV, Shirlene D. (Shirl)&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;OSTROV, Shirlene DelaCruz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pat McDonough&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pat Tiberi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICIA C. MCCRACKEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICK HARLAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PATRICK L MEEHAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Patrick Malloy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Patrick McHenry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Babeu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Chabot&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Cook&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Gosar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Spain&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paul Tonko&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Paula Hawks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Perry, Mary&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pete Aguilar&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pete Glidewell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;PETER \&quot;\&quot;PETE\&quot;\&quot; DiCIANNI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Clemens&quot;' />
              <groupfilter from='&quot;PETER J. ROSKAM&quot;' function='range' level='[none:candidate:nk]' to='&quot;Peter King&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Theron&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Peter Visclosky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Phil Oliva&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Phil Roe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Philip Rosenthal&quot;' />
              <groupfilter from='&quot;Pingree&quot;' function='range' level='[none:candidate:nk]' to='&quot;Pingree, Mchellie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Poe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Poliquin, Bruce&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pompeo, Michael&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Potter, Britani&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Pramila Jayapal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RaÃºl Grijalva&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rafael A. Dagnesses&quot;' />
              <groupfilter from='&quot;RAJA KRISHNAMOORTHI&quot;' function='range' level='[none:candidate:nk]' to='&quot;Ralph Abraham&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RANDALL M. \&quot;\&quot;RANDY\&quot;\&quot; HULTGREN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Randy Perkins&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RASHID MALIK&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ratcliffe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Raul R. Labrador&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Raul Ruiz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;REIGLE H&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rhue R. Reis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard A. Morckel&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Alarcon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard B. Fox&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICHARD D DAUGHERTY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard E. Neal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICHARD GREGORY PRIEM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Hudson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Lieberman&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Richard Reichard&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RICK ALLEN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Bryson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Crawford&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rick Larsen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rickey Hobson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rita Ramirez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ro Khanna&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rob Bishop&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROB WOODALL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT A BRADY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Aderholt&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Ardini&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT CORTEZ SCOTT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT DOLD&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Evans&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert J. Sutherland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT JOSEPH WITTMAN&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Klepinger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Lamar \&quot;Bob\&quot; Bell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert M. Neeld&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Matthew Tager&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert Pittenger&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Robert W. Derlet&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBERT WILLIAM GOODLATTE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROBIN KELLY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;ROCHESTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rod Blum&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RODNEY DAVIS&quot;' />
              <groupfilter from='&quot;Rodney P. Frelinghuysen&quot;' function='range' level='[none:candidate:nk]' to='&quot;RODNEY STOOKSBURY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roger Allen Petersen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roger Hernandez&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Desantis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Drake&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Kind&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ron Varasteh&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rosa L. DeLauro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Rosen, Jacky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Roy Rich&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ruben Gallego&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RYAN A COSTELLO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Downing&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Greene&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Peterson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ryan Solen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;RYAN ZINKE&quot;' />
              <groupfilter from='&quot;S. Bret Guthrie&quot;' function='range' level='[none:candidate:nk]' to='&quot;S. Brett GUTHRIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Salud Carbajal&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sam Graves&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SANFORD BISHOP&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sarah Lloyd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott A. Angelle&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott DesJarlais&quot;' />
              <groupfilter from='&quot;Scott Fuhrman&quot;' function='range' level='[none:candidate:nk]' to='&quot;Scott GARRETT&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SCOTT PERRY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott Peters&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott R. Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott R. Tipton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Scott Wharton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SCOTT WILLIAM TAYLOR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sean Duffy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sean Maloney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sessions&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Seth W. Moulton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shaun D. Brown&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelli Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelly Schratz&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Shelly Yoder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SHKRELI, SUZANNA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sidie, Jay&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;SMITH, DOUGLAS&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stacy Ries Snyder&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steny H. Hoyer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephanie Murphy&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephen F. Lynch&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stephen Tryon&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Chabot&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Cohen&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve King&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Knight&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;STEVE PEARCE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;STEVE RUSSELL&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Scalise&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Stivers&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steve Womack&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Fought&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven G. Bailey&quot;' />
              <groupfilter from='&quot;STEVEN J SANTARSIERO&quot;' function='range' level='[none:candidate:nk]' to='&quot;Steven J. UCCIO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;steven palazzo&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Reynolds&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Specht&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Steven Uccio&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stewart Mills&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Stuart Starr&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sue Caro&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Sue Googe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan A. Davis&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Susan W. Brooks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Suzan DelBene&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Suzanne Savary&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Talia Fuentes&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tarkanian, Danny&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Budd&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Deutch&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted W. Lieu&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Ted Yoho&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Terri A. Sewell&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tharon Chandler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;THOMAS A MARINO&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Massie&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas MASSIE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Mills&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Reed, II&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thomas Suozzi&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thornberry&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Thuy Lowe&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tim Ryan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tim Sheridan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TIMOTHY F MURPHY&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Titus, Dina&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Todd A. Bloom&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Todd Rokita&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom A. Garrett Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM COLE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Emmer&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM GRAVES&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Macarthur&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom MacARTHUR&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom McClintock&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Nelson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom O&apos;Halleran&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TOM PRICE&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Rice&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tom Rooney&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tommy A. Schrader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tommy Schrader&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TONIA KHOURI&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Cardenas&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Evans&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tony Ventrella&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Trent Franks&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;trent kelly&quot;' />
              <groupfilter from='&quot;Trey Collingsworth&quot;' function='range' level='[none:candidate:nk]' to='&quot;Trey Hollingsworth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;TROTT, DAVID A.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Troy Hollingsworth&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Tyler Fischella&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;UPTON, FRED&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Val Demings&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Veasey&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vela&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vern Buchanan&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Vicky Hartzler&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;VICTOR ARMENDARIZ&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;VINCE KOLBER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Virginia Foxx&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;W. John Williamson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wakely&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WALBERG, TIM&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Walter B. Jones&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Walter Dartland&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Warren Davidson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wayne Alberson&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wayne Liebnitzky&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Weber&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Wendy Reed&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Westley&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Will Boyd, Jr.&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William (Bill) McCullough&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William Burke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WILLIAM F SHUSTER&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William R. Smith&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William Richard Keating&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;William T. Newton&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Williams&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;WIRTH, DEBRA&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Woolridge&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Xavier Becerra&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Yoder, Kevin&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Yvette Clarke&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Zephyr Teachout&quot;' />
              <groupfilter function='member' level='[none:candidate:nk]' member='&quot;Zoe Lofgren&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]'>
            <groupfilter function='member' level='[none:office:nk]' member='&quot;US House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party,State Postal)]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</column>
            <column>[federated.111462w1qeyrfp1adgtd00ipgciu].[Action (County Name,Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:votes:qk]</rows>
        <cols>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]</cols>
      </table>
      <simple-id uuid='{D700B012-036B-4621-8C66-AE6EC1EAA014}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dash with changing views'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
          <members>
            <member value='&quot;Map by Votes&quot;' />
            <member value='&quot;Map by Donations&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='53' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='45' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='30' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='28' type='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='98000' id='26' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                    <zone h='98000' id='24' type='layout-basic' w='63288' x='800' y='1000'>
                      <zone h='98000' id='20' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                        <zone h='98000' id='16' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                          <zone h='98000' id='14' type='layout-basic' w='63288' x='800' y='1000'>
                            <zone h='98000' id='7' param='horz' type='layout-flow' w='63288' x='800' y='1000'>
                              <zone h='98000' id='3' param='vert' type='layout-flow' w='63288' x='800' y='1000'>
                                <zone h='97875' id='12' name='Map by Donations' show-title='false' w='63288' x='800' y='1000'>
                                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='125' id='13' name='Map by Votes' show-title='false' w='63288' x='800' y='98875'>
                                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='98000' id='59' name='Votes per Candidate' show-title='false' w='35112' x='64088' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='25500' id='68' name='Explanation' w='62600' x='900' y='1750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='47875' id='27' name='Pie Total Donation' show-title='false' w='35700' x='65200' y='875' />
        <zone h='50625' id='43' name='Bar # of Donations' show-title='false' w='36200' x='63600' y='49375' />
        <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='16600' y='19000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='7250' id='54' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='47700' y='18875' />
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='45' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='30' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='28' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='98000' id='26' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                      <zone h='98000' id='24' type='layout-basic' w='63290' x='800' y='1000'>
                        <zone h='98000' id='20' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                          <zone h='98000' id='16' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                            <zone h='98000' id='14' type='layout-basic' w='63290' x='800' y='1000'>
                              <zone h='98000' id='7' param='horz' type='layout-flow' w='63290' x='800' y='1000'>
                                <zone h='98000' id='3' param='vert' type='layout-flow' w='63290' x='800' y='1000'>
                                  <zone h='125' id='12' name='Map by Donations' show-title='false' w='63290' x='800' y='1000'>
                                    <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                  <zone h='97875' id='13' name='Map by Votes' show-title='false' w='63290' x='800' y='1125'>
                                    <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='49000' id='27' name='Pie Total Donation' show-title='false' w='35110' x='64090' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='43' name='Bar # of Donations' w='35110' x='64090' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
            <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='18900' y='12000' />
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='99' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='100' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='47875' id='27' is-fixed='true' name='Pie Total Donation' show-title='false' w='35700' x='65200' y='875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='54' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='47700' y='18875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97875' id='12' is-fixed='true' name='Map by Donations' show-title='false' w='63288' x='800' y='1000'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='59' is-fixed='true' name='Votes per Candidate' show-title='false' w='35112' x='64088' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='204' h='25500' id='68' is-fixed='true' name='Explanation' w='62600' x='900' y='1750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='16600' y='19000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50625' id='43' is-fixed='true' name='Bar # of Donations' show-title='false' w='36200' x='63600' y='49375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='125' id='13' is-fixed='true' name='Map by Votes' show-title='false' w='63288' x='800' y='98875'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{774B7288-7F3D-489B-9CB7-F8F01EA8E589}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Us Candidate Votes' id='1'>
                    <capturedDeltas>
                      <worksheet name='Map by Donations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7013286.9990137909' min='2442845.5362214488' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6161713.1272184942' min='-15056284.747356778' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Total by County' id='2'>
                    <capturedDeltas>
                      <worksheet name='Bar # of Donations'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:donation_count:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Map by Donations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]' field-type='quantitative' max='7067711.4259140678' min='3646871.0507484148' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]' field-type='quantitative' max='-6355917.255950857' min='-16165679.842839595' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Votes vs Donations' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{B7810F8D-6EC4-4FB6-8987-AD73836584BD}' />
    </dashboard>
    <dashboard name='Summary View'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sheet 24' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Sheet 23' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Sheet 24' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='10' name='Sheet 23' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' type='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 24' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Sheet 24' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Sheet 23' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='10' name='Sheet 23' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' type='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6CA470C1-979D-457C-AFDC-6352FFEB5FF9}' />
    </dashboard>
    <dashboard name='Total by County'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='52' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='49' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='49000' id='3' name='Map by Donations' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='15' name='Pie Total Donation' w='49200' x='800' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='35' name='Bar # of Donations' w='49200' x='50000' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750' />
        <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625' />
        <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='154' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='155' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Map by Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Pie Total Donation' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='35' is-fixed='true' name='Bar # of Donations' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{156FD58E-F13B-433C-9B38-7F02D949D65C}' />
    </dashboard>
    <dashboard name='Total by County (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='52' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='49' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='49000' id='3' name='Map by Donations' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='15' name='Pie Total Donation' w='49200' x='800' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='84' name='Bar # of Donations (2)' w='49200' x='50000' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750' />
        <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625' />
        <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='155' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='156' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5500' id='50' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16000' x='81400' y='36625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='53' mode='dropdown' name='Map by Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='81200' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Map by Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Pie Total Donation' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='18' name='Pie Total Donation' pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='23600' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='84' is-fixed='true' name='Bar # of Donations (2)' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EE9F55AD-1699-4806-B79B-F073DABF6FCA}' />
    </dashboard>
    <dashboard name='Us Candidate Votes'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Map by Donations&quot;'>
          <calculation class='tableau' formula='&quot;Map by Donations&quot;' />
          <members>
            <member value='&quot;Map by Votes&quot;' />
            <member value='&quot;Map by Donations&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[office]' derivation='None' name='[none:office:nk]' pivot='key' type='nominal' />
        <column caption='Office' datatype='string' name='[office]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='98' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='95' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='64' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='61' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='20' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                    <zone h='98000' id='18' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                      <zone h='98000' id='16' type='layout-basic' w='98400' x='800' y='1000'>
                        <zone h='94000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                          <zone h='94000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                            <zone h='94000' id='93' name='Map by Votes' w='98400' x='800' y='1000'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                        <zone h='4000' id='100' param='vert' type='layout-flow' w='98400' x='800' y='95000' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9125' id='65' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16800' x='81500' y='53625' />
        <zone h='6500' id='96' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' w='16800' x='80700' y='4125' />
        <zone h='5500' id='99' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='82000' y='11875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='163' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='164' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9125' id='65' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]' type='filter' values='relevant' w='16800' x='81500' y='53625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='96' mode='dropdown' name='Map by Votes' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' w='16800' x='80700' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='94000' id='93' is-fixed='true' name='Map by Votes' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='99' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='82000' y='11875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5326E33C-41A6-4915-921A-E79C52A16406}' />
    </dashboard>
    <dashboard name='Votes vs Donations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='county_race_vote_donate' name='federated.111462w1qeyrfp1adgtd00ipgciu' />
      </datasources>
      <datasource-dependencies datasource='federated.111462w1qeyrfp1adgtd00ipgciu'>
        <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
        <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
        <column-instance column='[state_postal]' derivation='None' name='[none:state_postal:nk]' pivot='key' type='nominal' />
        <column caption='State Postal' datatype='string' name='[state_postal]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='50' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='53' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='51' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='49' name='Candidate Votes vs Donations' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6500' id='54' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='82500' y='11375' />
        <zone h='7250' id='56' name='Candidate Votes vs Donations' pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='85400' y='2125' />
        <zone h='6500' id='55' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' w='16800' x='82500' y='17000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='139' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='140' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='54' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]' type='filter' values='cascading' w='16800' x='82500' y='11375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='55' mode='dropdown' name='Candidate Votes vs Donations' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' w='16800' x='82500' y='17000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='49' is-fixed='true' name='Candidate Votes vs Donations' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='56' name='Candidate Votes vs Donations' pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' w='14000' x='85400' y='2125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{35D6897E-1A73-4F10-B039-994C44F6C4DF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dash with changing views'>
      <viewpoints>
        <viewpoint name='Bar # of Donations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Explanation' />
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Map by Votes'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:state_postal:nk]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[Geometry (generated)]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[Latitude (generated)]</field>
                    <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;San Bernardino County&quot;</value>
                  <value>&quot;REP&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;POLYGON((-117.7833 33.9464,-117.8029 33.9756,-117.7677 34.0238,-117.7364 34.0185,-117.6776 34.1651,-117.6456 34.29,-117.667 34.558,-117.6673 34.8225,-117.632 34.8223,-117.6301 35.5641,-117.6338 35.6515,-117.6162 35.6809,-117.6523 35.6808,-117.6343 35.7099,-117.633 35.7972,-117.3761 35.7952,-116.8055 35.7955,-116.2773 35.7934,-115.7359 35.7936,-115.7358 35.8091,-115.6483 35.8092,-115.2597 35.5035,-114.6335 35.0019,-114.6283 34.8636,-114.5923 34.8412,-114.5527 34.7669,-114.4726 34.7136,-114.4509 34.6678,-114.4364 34.5968,-114.3808 34.5297,-114.3867 34.4579,-114.3396 34.4514,-114.2261 34.3659,-114.1769 34.3493,-114.1383 34.3032,-114.1355 34.2579,-114.1645 34.2517,-114.2561 34.1731,-114.287 34.1707,-114.3216 34.1381,-114.4159 34.1076,-114.4354 34.0797,-115.1258 34.0798,-115.3161 34.0778,-115.3162 34.0341,-115.9839 34.0351,-116.3006 34.0325,-116.9296 34.0341,-116.9294 34.0049,-117.2253 34.0043,-117.2254 34.0187,-117.3754 34.0194,-117.3753 34.034,-117.5584 34.0337,-117.5581 33.9885,-117.6104 33.9716,-117.6109 33.9251,-117.6554 33.9251,-117.6738 33.8708,-117.7833 33.9464))&quot;</value>
                  <value>34.846400000000003</value>
                  <value>-116.1156</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Pie Total Donation'>
          <highlight field='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='Votes per Candidate'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <simple-id uuid='{4F9BE995-60E3-4C4D-9737-CA352404A7A5}' />
    </window>
    <window class='dashboard' maximized='true' name='Summary View'>
      <viewpoints>
        <viewpoint name='Sheet 23' />
        <viewpoint name='Sheet 24'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{626A53D2-E7EB-40D4-998C-32CAD0445A65}' />
    </window>
    <window class='dashboard' name='Us Candidate Votes'>
      <viewpoints>
        <viewpoint name='Map by Votes'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{47BE7D0E-1D32-4C46-9C8B-1673DCC6856C}' />
    </window>
    <window class='dashboard' name='Total by County'>
      <viewpoints>
        <viewpoint name='Bar # of Donations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Pie Total Donation' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AFDABAED-A0F2-42D6-8AE7-E3766E9ABF6E}' />
    </window>
    <window class='dashboard' name='Total by County (2)'>
      <viewpoints>
        <viewpoint name='Bar # of Donations (2)' />
        <viewpoint name='Map by Donations'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Pie Total Donation' />
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{44BBF57F-82BD-4039-840C-AC8A6E9EF3F5}' />
    </window>
    <window class='dashboard' name='Votes vs Donations'>
      <viewpoints>
        <viewpoint name='Candidate Votes vs Donations'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2EE89F30-6326-4A9F-A967-A907A1AD44B3}' />
    </window>
    <window class='worksheet' name='Map by Donations'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='31' type='pages' />
            <card size='138' type='filters' />
            <card size='220' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]' type='filter' />
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363796481:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:donation_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_donation_winner:qk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:county_name:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:qk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363796481:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9D490D5C-7EAB-4AA2-B7BA-6CF0F0355CED}' />
    </window>
    <window class='worksheet' name='Bar # of Donations'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90279A2D-4E39-40F1-8D72-C4F4A6BA06F1}' />
    </window>
    <window class='worksheet' name='Pie Total Donation'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8634721-91A9-4CEF-9F7A-26661D49E618}' />
    </window>
    <window class='worksheet' name='Map by Votes'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
        <map-navigation value='1' />
      </viewpoint>
      <simple-id uuid='{3F52DCAC-069A-4C36-9D2B-02403311EAF5}' />
    </window>
    <window class='worksheet' name='Candidate Votes vs Donations'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:candidate:nk]' show-morefewerbutton='true' type='filter' values='relevant' />
            <card pane-specification-id='2' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FC924821-6BFF-4566-BDC2-F45612CA1F01}' />
    </window>
    <window class='worksheet' name='US House Map (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donations:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{88AC9686-A1F6-4C7B-B924-0F93FDA32832}' />
    </window>
    <window class='worksheet' name='Senate'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E78C116D-563D-4D30-A313-F362D67D8A2F}' />
    </window>
    <window class='worksheet' name='Map by Votes (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]&#10;[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[attr:votes_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{87715CC3-FAB9-4626-8125-5FD703C9F71C}' />
    </window>
    <window class='worksheet' name='Map by Votes (3)'>
      <cards>
        <edge name='left'>
          <strip size='287'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_votes_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{79524F4B-0279-4BD2-916B-F1606619EE0D}' />
    </window>
    <window class='worksheet' name='Map by Donate (2)'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:normalized_donate_interacted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5CD988E4-D3E5-43A9-B461-A0DBB686192E}' />
    </window>
    <window class='worksheet' name='Pres'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:office:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8106DE6D-7A08-47AB-977B-F6A6F9B57CA6}' />
    </window>
    <window class='worksheet' name='$ per House Candidate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EBD10A94-E36E-477D-91FC-39C8DA945043}' />
    </window>
    <window class='worksheet' name='Votes per Candidate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:Calculation_453737681204142084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{417269ED-B07B-45D7-972E-0161CDCB5DA6}' />
    </window>
    <window class='worksheet' name='Pie Total Donation (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{54E3652F-EC3C-405B-A637-D088A1B09A1E}' />
    </window>
    <window class='worksheet' name='Bar # of Donations (2)'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5B943908-2C80-4583-BCC2-EC801D119669}' />
    </window>
    <window class='worksheet' name='Bar # of Donations (3)'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A101C932-7DC8-4DB2-B106-1DCAC0E8501E}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F66C50FD-2D4C-4F07-BBB0-E35A33A9DA22}' />
    </window>
    <window class='worksheet' name='Explanation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='300'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{586DBC73-7DBB-4CC4-8B6B-4A27C795BC7D}' />
    </window>
    <window class='worksheet' name='Sheet 23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:donation_winner:ok]</field>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[none:party:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C8F4F12-13A5-45A9-BDDA-8E2610B1C5E9}' />
    </window>
    <window class='worksheet' name='Sheet 24'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.111462w1qeyrfp1adgtd00ipgciu].[sum:Calculation_7164664076363644928:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84DE2B33-E649-48B0-BDA9-74BC0DCC7DB1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='$ per House Candidate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar # of Donations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar # of Donations (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar # of Donations (3)' width='192'>
      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
      R6FPFdkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Candidate Votes vs Donations' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dash with changing views' width='192'>
      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
      QPnj1ioAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Explanation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map by Donations' width='192'>
      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
      eRP2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pie Total Donation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWQklEQVR4nO3da3RU9bnH8e+e+0ySSUIgEBJCNCAXSwIiCMZQ8O7BglRbQatItacvPPXF
      8bRrda22a3naN12r9ehqPWppab2hxSNWRBGUyqVcxCQQrgFCuCZALswkIXPde//PC0oWVg0B
      5hb283nHMDP72bB/s/+3vbemlFIIYUGapmm2dBchRDpJAISlSQCEpUkAhKVJAISlSQCEpUkA
      hKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKU5/vWFUCiEaZrpqEWIlPtSAAzDwDCMdNQiRMpp
      cj2AsCq5HkBYngRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFia
      BEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRA
      WJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFjalx6RJAYeZRiY4TBmVzdGMIgyDFQ0StCw
      ccJfiMNuw+20489yk5/tJdvnSnfJGUMCMMAopVDhMHpbO7HDTcQaDxE7dgyzqxsVjWKGw6AU
      StfZ7R7Mn4qno2ngsNvwuBx4XU4G+b1cU5TH+LIhDC/IYfjgHFxOe7p3LS3kGWEDhBmNore0
      EKqpJVxbixEIYHZ29fmZ3b6hvDzspj7fk5vtprQwl5vGl1BZPpSigmycDmuEQdM0Tc4AGUyZ
      JsaZM0R27SL02TZiBxsxe3oSuo3Os1F2nW1lV1MruVluRpUMorqilMljhuP3uRO6rUwkAchA
      yjQxAkFCW7fSs24d8RPNkIITdWdPlNr9J9l+8BSjSwZxz02jmTp2OFneq7fPIAHIIEopMAzC
      9fUEX3sd/dTptNRhmor9xzo4ePwM5cX5LLjtG0wcPQy7LbmDhvF4HIfDgaZpSd3OhaQPkCGU
      UujNzQT/uozw5zUJ+c7+9AH6w+mwcffUUdz/zXHk53gTUNmXmabJ+vXrqaqqwul0piQE0gfI
      EMo0CW39jOAbSzE6OtJdzpfEdZP3Nx9g694T/Me8qVSOGprQA9QwDJ5//nnq6uo4fvw4Dz30
      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
      yIQfPjKgD36QAHylWCxGS0sLpaWlva+dP1PEYjHcbje6rhOPx+ns7CQajfLaa6/x1ltvsXLl
      Svbu3duv7TgKCih46kdkfXNGsnYl4TSnE//cOQz5r6exX/CjMVBZvg+g6zorVqxg3bp1DBky
      hEcffZSmpiaGDh3KuHHj6O7upqmpiby8PF599VVM02TOnDkYhsGKFSvQdZ0f//jH+Hw+QqEQ
      y5YtY9GiRZc0YqR0ndDmLQRefQ3zbGY+SgjAUVhI/qKFeCor0QbAFW8XI/MAnPtlDwaDxGIx
      NE0jNze3d7zfZrOxefNmsrKyqKiooKurC8MwyMvLAyAQCOB0OsnJyUHTNJRSRCIRPB7PJc+E
      KqWIHzlK4I03iO7ek4xdvXwOB74pU/DPm4vrgrPiQCcB6IdQKITb7e5zVCdRlFKoaJRwTS3B
      t/6K0d6e9G32SdNwlpTgn/stvFOmYLuCeZBMJAHIYPHmZno2bKRnyxaMtvbUPnnSZsNZUkzW
      zJn4pk/DMUDXMV2MBGAA0E+30rNxI+HaOuLNzahYLGnb0nw+nEXD8FVV4Zt2E44BcmH/5ZIA
      DCBmOEyssZHI3n2Etm7F6Oy68rvP2WzYvF7sgwvwVFTgmzIF54gSbF5vYorOcBKAAUrF48Sa
      mog3NxPeuYtY4yFULIaKx889okmpc6tOTfPc/YlsNtA0NKcTzeHAnuvHOXIkngkTcBYXnzvo
      r7L2fX9IAK4iRnc3Rls7RlcnKhrDjERQkQg2rxfN4zl34A8ZjD03F/slXNZ5NZMACEuT5dDC
      8iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIk
      AMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIk
      AMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAotehQ4cIBALp
      LiOlJAACpRQnTpzgueee4/nnn7dUCBzpLkBkhrVr13L33XczevRoPB5PustJGTkDCACqqqr4
      5JNPWLt2LUqpdJeTMpqy0t6Kr3T+ENi1axdHjhwhOzubW2+9Nc1VJZ+maZo0gQQAH374IStX
      rsTtdrNo0aJ0l5MycgYQKKUwTZOamhqKiooYMWIEmqalu6yk0zRNkwCIXvF4HJvNht1uT3cp
      KSEBEJamaZomo0DC0qQTbBFLlixh//79jB49mrlz57JixQoOHz7MXXfdRXV1NQCtra0sXrwY
      v9/PwoULCQQCLF26lKysLB577DHWrFlDXV0dN998M/fcc89V0VSSAFiAUgpN03jmmWfweDwE
      AgFuu+02cnJyWLlyZW8A1q5dy4IFC2hqamL37t00NDTw3e9+l5KSErq7u2lra+OZZ55h8eLF
      xGIxvF5vmvfsykkALMAwDOrr62lsbOTOO++kuroah8PB2rVrmTx58hfeW1RUhN1up66ujubm
      Zl5//XWGDh3Kgw8+iNfr5ec//zkTJ07E5XKlaW8SSwJgAXa7nd/85jfous6rr75KSUkJ9fX1
      TJs2jeHDh/e+T9d1otEowWAQv99PSUkJ3/nOd9ixYwerV69G0zR++ctf8vLLL9PT04Pf70/j
      XiWGjAJZQHd3Ny+99BLBYJBhw4ZRUVHB0qVLKSwspLy8nLvuuovW1lbsdjt/+ctfcDqdPPXU
      Uxw8eJDVq1fjcDiYP38+y5cvJxKJ4PF4ePrppwf8miEZBrWI8xNdpmn2dlwNw+j9+w8//JCq
      qioKCgowDANN07DZbF94n91u/8J3aJo24CfLNE3T/h+mS3e+CMBt3wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pie Total Donation (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXqElEQVR4nO3dbXBU153n8e/tB3WrW89PSAiQDBJPsrGNgAQG20lwBntx4lRiJzXOTNZ5
      2JqJY+/Wbs1M7Yut2lf7ara8W+NyZuJyyGQym4kDnmBiGywPtgFjwCAhHoSQhGQ9P7da3a1+
      7nvPvsBgYxASoO5zW/d8qlwFuOn7v9T56Z577rnnaEIIgaJYkKZpmk12EYoikwqAYmkqAIql
      qQAolqYCoFiaCoBiaSoAiqWpACiWpgKgWJoKgGJpKgCKpTk+/5tQKEQkEpFViylFIhE8Ho/s
      MpQ00dRkuFsbGxtjyZIlsstQ0kBNhlMsTwVAsTQVAMXSVAAUS1MBUCxNBUCxNBUAxdJUABRL
      UwFQLE0FQLE0FQDF0lQAFEtTAVAsTQVAsTQVAMXSVAAUS1MBUNKuvb1ddgmzUgFQ0qqpqYlX
      XnmFY8eOyS7lplQAlLTy+/1s2rSJxsZG2aXclAqAklZPPvkkfr+ft956CzO+fq4CoKTVO++8
      Q19fH4lEQnYpN+WY+yOKcueeeOIJKisr2bRpE5qmyS7nBmpZlDmoZVEWL7UsimJ5KgDKgjl7
      9iy/+MUv8Pl8AMRiMd5+++1rvw8Gg/zhD3+gt7eXl156iRdffJG+vj6ZJasAKAsjFotx6tQp
      fvjDH1JYWAjAzMwMLpeLUCiEYRgcPnyY/v5+amtreeGFF1i3bh0lJSVS61YBUBZEIBBgYGCA
      l19+mc7OTgDKysqorKwEoLe3l4qKimsNPhAIIIQgPz9fWs2gRoEsSQgBqRRGPI4xPU1ybBwj
      FEREY/QLNz1FVeTmOCkpyKWqNI/i/Fycdht2++w/L4uKiqivr6exsZH+/n5WrVqFzWYjHA4D
      4PP5aG5uprW1lW3bttHf38/mzZszdcqzUgGwCCEE+sQE8Z4eYucvkOjpITU0jPjC+HxLQS17
      yzZc92det5NV1SXUVZewcXUlK6uK8ebmXPcZl8vF5s2bOX/+PDt27GDv3r1s376dixcvYrfb
      2bVrFw8//DDd3d2sXLkSm81GaWlp2s97LmoYdA7ZPgxqRKPEOzoJf/ghsQsXMKYDt/z84ZsE
      4PNsmsayigIaV1exae1SGmrLbxjfTyQSJBIJ8vLyFuQc0kXTNE1dARYhIQQiniBy7Bihg++Q
      HB4GXV+Q7zaEoH8sQP9YgDc/6mTDqiU89ZX1rF1Rhs12JQg5OTnk5OTM8U3moAKwyIhUiljb
      Rfz/9E+kRkbTeqykbtDcOcKZrlHur1vCj//DgyxfUpjWYy40FYBFRJ+eZmr3r4i1nr2hb59O
      hhCc6Rrlf/zyfZ7cvoYntq4mx2nP2PHvhgrAIhG72M7UL3eTGhqSVsP0TIzfvHOO1sujvPDt
      LZQXeaXVMl/qOUCWE7pO6OBBJv7uf0tt/FcZQnD28hh/8w/v0jXok13OnFQAspgwDEJvvY3/
      n/8FEY3KLuc6/lCM//Wbo3zcPmTK9wCuUgHIUsIwCO7/I9Ov/R4MQ3Y5N+UPxXjx98dpvZze
      m/G7oQKQha52ewJ79i7Y8Ga6ROMpXnztBD3Dftml3JQKQBaKnT3H9L/+zvSN/6pgJM7f/e4j
      xvxh2aXcQAUgyyRHR/H/+teQTMku5bYMT4Z4ZX8zyZS5QqsCkEVEMsn0v/w/UmPjsku5I2c6
      Bml+/7TsMq6jApAlhBCEPzxG9Eyr7FJunxCUJcP8+dgZlv5+N8lR89wUqwBkCSMcJvBv/5Y1
      /f6rbMJg08wQPxs5zqbwEIRCBF7bg0iZowunngRniZlDh9AnJmWXMX9CUKTH+JavjfvDIzj4
      7FlA5PRp8jo6cDc0SCzwChWALGCEw4TePii7jHlzCJ0N4RG+7WujUI/f+IFkkpl3D+FauxbN
      LnfOkApAFggfPYoRuPU8frMoS4bZ6e9k88wgdmZ/Ahxpbia/rx/XynsyWN2NVABMTiSTRE5+
      LLuMOWlC0DgzxC7/JUpTEeZcAiuZJHL0qPQAqJtgk4t3dxO/3C27jNkJQUkyzPcnzvCDiRbK
      5tP4PxU5cRIh+aZeXQFMLnahDZJJ2WXclE0YbJwZ5nF/BxWp23/KqwcCxDs6cK9fn4bq5kcF
      wMSErpPo6ZFdxk3l6XG+7WvjgfAwTnGHk/EMg3hHp9QAqC6QiRnhMInOLtllXMcuDB6YGeK/
      D37A5pnBO2/8n4qdOyd1unRWBCAcGOXk6Tb0L/w7JSIzJMw5E3hBpMbHMWZmZJdxTWkyzHcn
      z/HseMvNhzfvQGpyUuo5ZkEXSOAfHUNHEImnSAT8FC0pwTc2QceJDwiW1LO9YRltF7uoXLme
      YqeOt7SUmQkfBeWFXGppIeEqZk1tBRfOt1G8fA2rl5fLPql5SZrgDS8AhGBjeJhd/kuUJ8Pz
      vsmdDyMSwQgGsUtaIc70VwBh6PRPhqhyJRmYCjHY20eKJH29Y9SvW8/GjffjMBJEojOcPX2O
      gf4BYobOcG8/3V3tFNY0kBufIhSNEYmGOX+qlZjsk5qn1PCI3AKEoCgV5ZmJVv7jeDMVC9z4
      AUQ4gj49vcDfOn+zB0AYDHV34ZuJYaRijE9MZbCsz6Si4wRDSfwJnfG+QewiRtelDqYiSWw2
      nf6+QQYGR6ioXkGh247TadDd2cmwL0iOw8HE6ACTgTAT4+MUlS+jxOMkW2bT6BIfftmEwcbw
      MM+PfMTWmYG0/qTUA8E0fvutzdoF0mNB3nj9N1Rs+Q67NhZx6INL/NnTOzNZGwD2nGIe2fEI
      uU4bkUgYu0gxGYyxvDqfPJdGyhektKiByakAK6pXkJdrY2ximtptK3Akp2g9cxJnfhWN9auZ
      nvRTu2IF7oyfxZ3J5NImn5enx/mWr40Hw8Pk3OVN7nwYkUjajzGbWQMQGO1iyfqH8V2+ROqB
      L2eypuvYnLnkfvprj+fKMhvV3s8WX1padeX/Vld/tgRHdbUHAGF4ePyJCuyOHBwOO57qXLKJ
      jIZRnQjy10NHKElFF7y7MxuRWJgb6jsxawAunvqY7ikPU93djEfMucXlXDSbHbc7uxr9dSRs
      4FMXy3xXV+ZGRbMfuXw9/+Uvf8gLP3iMmagTY/oTXj94hMQXxyLTThD2j9LS3Io/bM6dBtPF
      5sqO9TXvlubxSDv2rFeA7V/9KgDV922nGrh/1V9lqqbrGKkY59o+YU3DGmzCIJmIY2Ajx2nH
      MEDTBGDD0JOkdIHTYaft0kXWrF6Hw27DZrNhGAZ2ydNu74TMhpFJMqdEm/45gJ6YxFtaR0lx
      CUbMx3vvt2K3a9Q3rmKkS1BbEidcVEnPyXexOQsoXbGCzo4OcORhREOsXl1Dz4Cfe9fKnXV4
      Jxzl2fG84q7Y7Tgq5J2n6QNgcxYRCXSTTBWSmB7Hu/xe1nomGA4nMAw70UgYvRAqa9exakkx
      A3oudXUx7l1zDzMjnZxpbaf2Pvk7kdwJRxbvSzBfNrcbm8R9BEz/IMzmyGNVtYdjH54k5FpO
      cbyHixMGK5fU4hIDDM4ICj05lJaWYs/1UuRxUZoLLW2f4KlYRjxhUFVg+pzflLO6WnYJaad5
      PdgKCuQdfzHvEDN4uQ135WrK8px3/B0yd4gxwmFG/vpv0f3mXFVtIbg3PkjF3/6NlGMv+o2y
      l9U13FXjl03LzSWnrk52GWklcyo0ZEEXyMo0m42culWyy0gfux3X2jVSS1ABMDlPY+OiHQ51
      Vi/FJfkKpwJgco4lFeTUrJBdRlp4tm6VXYIKgNlpTid5O74GWqZm5mSGzevFs0X+8LQKQBbw
      fOlLOCoqZJexoHI3NeKoqpJdhgpANtCcTvJ3PS67jAWj5eaSt/NP0Wzym5/8CpR58W7fjrO2
      RnYZC8L70HZyamtllwGoAGQNm8dD0TPPoGXJDuyzsRcXUfjUd0zx0x9UALKKe/06vA8/JLuM
      O2e3U/SDH2CXOPXhi1QAsojmcFD4ve/iXL5cdil3JO9rXzXFyM/nqQBkGXt+PqXPP4fmza6H
      Yzn19RR+92npy6F/kQpAFsqpqaHs+eez5gmxo6qK0uefk7b2z62oAGQp9wP3U/wX3weHuad6
      OyqXUPbf/itOk77boAKQpTRNw/vII5T+7KdoueZ88f9a419m3vcazP3jQ7klzWbDu3Ur9vx8
      fD//R/QpOYuX3UDTcK1fT+lP/xJHWZnsam5pUb8QsxBkvhBzO5IjI/h/9Wti585JrUPLySHv
      T79OwbeexC7xVcf50DRNUwGYQ7YEAMCIxQi+sZ/QwXcQ0WjGj++oXELh00/j+fKXTDfaczMq
      APOQTQG4KjUxydTu3cTOX4AM7MdrKyjA+yfbKHz6KWxZMjIFKgDzko0BgCu7y8QvthNqepdY
      aysiDdss2fLy8D7yMHlffxRnZeWCf3+6qQDMgxkD4PP5KCgowOmc+31nkUqRGh0lfPwE0ZYW
      kp/03t3BHQ5ca9fg3bYVV0MDjooKtCx9V0EFYB7MFoBgMMhLL71EQ0MD3/zmN7HNc1KZEAIM
      g9TkJLGz54h3dBDv7ELEYohkApHSwTCu/Ge3g6ahOZ1oTif24iJcq9fgaliHa80a7IWFppnM
      djdUAObBbAF47733GB8f56GHHqKqqmreAZiNHgiiT09jRMKIeByRSKK53WhOB/bCQuyFhdi8
      3rm/KAupAMyD2QIQCoXYvXs3+fn5PPPMM7jd2bLbgfks+nWBFqOpqSlWr16N2+0mIHEHmcVC
      BSDLFBYW0tnZSU1NDRWL7D1hGVQXaA5m6wIBRCIRXC5XVi75biaapmlqLlAW8mTRwyazU10g
      E4rFYrS1tdHX10cikaC9vZ3u7u5rO6qnUin6+/tJffqUNxKJMDIyghCCwcFBohKmQWQrFQAT
      8vv9jIyMcPDgQXp7exkaGuLw4cMMDg4C0NXVxfvvv4/f70cIwYEDB9i3bx+jo6N88MEH9Pb2
      yj2BLKICYELl5eWMj4/jdDqpqakhFAoRj8cpLS0FYN26daxbtw6AoaEhPB4PFRUVVFVVsXXr
      1rt+NmAl6l/KhFKpFE899RTFxcUMDg6ya9cu6urq6O/vv+Gz+/bt4/z58zQ1NeFfxPsIpIu6
      CTah/v5+mpqa8Hg8JJNJXn31Vex2O/X19Rw9epScnByampooLy/nJz/5CQAtLS34/X727NmD
      zWbjxz/+8bUrhjI7NQw6BzMNg46Pj6NpGuVW2DwvA9QwaJZRD74WnroHUCxNBUCxNBUAxdJU
      ABRLUwFQLE0FQLE0FQDF0lQAFEtTAVAsTQVAsTQVAMXSVAAUS1MBUCxNBUCxNBUAxdJUABRL
      UwFQLE0FQLE0FQDF0lQAFEtTAVAsTQVAsTQVAMXSVAAUS1MBUCxNBUCxNBUAxdJUABRLUwFQ
      LE0FQLE0FQDF0lQAFEtTAVAsTQVAsTQVACVjDMMgmUzKLuM6KgBKRgghuHTpEnv37iWRSMgu
      5xoVACUj/H4/J06cwDAMwuGw7HKuUQFQMsLr9aJpGiMjI7jdbtnlXKMCoGSEzWbjscceu7bZ
      t1moACgZkUqlOHDgAM3NzWzYsEF2OdeoneLnYKad4rNdIpFgamqKyspK2aUAV3aKV1cAJWNy
      cnJM0/ivUgFQLM0huwBlcejq6uLtt9/me9/7Hslkkv3797Nz507cbjevv/46uq7z7LPPUlxc
      THt7O2+++SaNjY1UVVVx8OBBfvSjH9Hf309TUxNut5vnnnsOmy39P59VAJQFUV9fz1e+8hV0
      XWf58uXs3LkTXdeprq7mueee48iRI+i6jhCCM2fO8Nhjj1FdXU1paSnT09MIIQiFQmzZsoXh
      4WEydWuqukBKWiWTSQ4dOkR9fT3l5eXAlZvh4eFhXnvtNQzDuPZZh8NBIBAgEolc9+fppK4A
      FmQkEiQHBkj0fEJqbIzU+DhGMIQRjXLKWcZ7SxrIdTkpyXdTVZrPsooC1q4oo7Ikb9bvPHfu
      HL/97W8pKytjx44d7Nu3D7vdzoMPPsipU6fo6enhG9/4BsFgkIaGBj788EM8Hg/Nzc3s2bOH
      mpoa7rvvPjo6OjI6VUINg85hMQyDCsNA9/uJNrcQbTlDvOMSIhq76WcPF9Syt+zm4/SFeS42
      r1nKQxtqqFtWgtftRNO0edfR3t6O1+tlxYoVd3QeC03TNE0FYA7ZHAAjkSB+8SLhj44Taz2L
      EQzO+XduFYDPW1qWz4aVFTyxbTXLKwoXotyM0zRNU12gRUjoOrGz5wi+9Rbxzi5IwxTk4ckQ
      w5MhPjw/wJ/cu5xvPbSWpWX5C36cdFMBWESEEKRGxwj+8U3Chw+Drqf9mDPRBO+c6ub91l6+
      /+h97NyyilyXM+3HXSgqAIuEMAwiJz9m6tVfIiRMN04kdX51oJWPLgzwn76xkbrqktu6P5BF
      DYMuAkYkiv+ff4Pv5Z9Lafyf1zHg43/u/oADJy9LrWO+1BUgy+nBEJN///fE2y6CScYzwrEk
      r77ZQjAc5zuPrMfpMO/PWfNWpswpNeVn8v/8X+IX2kzT+K/SDcHv3rvAK388TSyRkl3OrFQA
      spQeCOB7+WXi7e2yS5mVENB0qoffvntedimzUgHIQkYkgu8ff3Gl25MF3jzeyR+OtGOY7CoF
      KgBZRxgGwTf2EzvTKruUedMNwb8eusCp9qGMTXKbLxWALBP5+GNCBw7KLuO2xZM6r+4/zbQ/
      JLuU66gAZJHUpI/Aa3sQJlpXZ16EIE+P83DPKWK/2m2qq4AaBs0SwjAI7nuD1MiI7FJuiyYE
      q2I+vjt5nqpkiGRzH9FTp/Bs2SK7NEAFIGsk+/sJHzksu4zb4jKS7PR3sS3Uh9f4dD6SYRDY
      8zqudeuw58ufO6QCkAVEKoXv5/+ASJhrXc3Z2IXBN6cu8uDMMIV6HBvXd3mSg4ME39hP0fef
      kT5dQgUgC0SOnyA5MCi7jDnZhMHK2BRPT55nafIWN7tCMHPoPfIe3YFT8ioR6ibY5ISuEz5+
      3HRPer/IbSR53N/BX42evHXj/5SIRgkfkb9CnAqAySUHBoi3X5Jdxi1VxYM8O9bMzukuXGL+
      U7AjJz9OY1Xzo7pAJhc7fwERjcou46YcQmdbsI/H/Z14jQS325tPjY6S6O0lp7Y2HeXNiwqA
      iQnDIN7dLbuMGwlBeSrMk76LbIiM3nbDv0bXiV1okxoA1QUyMRGNkugy17x6uzD48swA/3n4
      GPffTeP/VPyi3PlMpg+Aoac4fbSJ9z44yuj057sCgtHBIa5OtI1MjTNzk1m3ZtqN5HalfD50
      n092GVcIQVEqyl+Mt/BnE60U6fEF+drk4BCGxJd4TB8ADEFeRQ0Pba5noG+ESHCK3t4+wnGd
      saERdKEzMTJId2cX05EYiZROYGqKlEgRjsQZGBwklYwzMTrEwPAE5h5LuV6yf0B2CcCV4c0N
      kVF+OnKCxvDwgjYaIxpFD8mbH5QV9wB9l1oYHqqguu4Bpsf6ONXSRtmqbZQA/rF+hkbDOAyD
      xPQYfTO5+NpPUb5yAzGczPgmKcnV6B7wYwtHKFhaTrYs4pEaHZVdAl49wdenu9ge7L2tEZ75
      MmZm0KenpT0PMP8VAKhedS9f3rSB6YkRxqbjbN26ERG70h2KxxMUlVZQ4HXhLSsj0NFKwapG
      hvq6KC/6tKnbclhxz0qWVxST/nUSFk5qakrasTUhqI9O8MLIMb4W6E5L4wdACIxAID3fPQ+m
      vwJodhtaIsTZi3FW33sfttAwPRMzrK1bjtueorAkn47z5xHuUipdXpauXEPJsjIKtDqKCnNZ
      ec89eLweXJoTHEuxyz6h2yBr1qdbT/Jo4DKPTl/GnoFOo8x7APMHwGanYeO2z/4g7x4aq67/
      zPoHNl37dW5NDQDLaq4sv1deVv7ZB905aaszHYxwJOPHLE1G+NnocWri03c9wjNfIi5voML0
      AbC0DK2Q/HnrohMZ+an/eULCeV6VBfcAgmQszOjoOLFkNvXg757myvwVK9ONH8Dm9WT8mNeO
      Le3I8yT0JGdOn2Zycpzp0M1XNP6i3r7e9BaVITaPvIaRSZpdXkfE9F2gVHwCV8ka7l1fiZEK
      c6TpIFHNTePWNQx3GywrShApKKPn438nqueyfFUNZ1tamAjEybUZrK6voWdgjLV198g+ldtm
      LymRXUL6aZrU8/z/bldmZ/mMxncAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pres' width='192'>
      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
      6fYvAuA34Q9P6YQ3ZNDbQgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 23' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WY8kWXbn97urXTPzNTIiIzIra68udrE5ze4hhxoNSY2kkYSBAEHbmz6A
      voBe9Hn0IGBe9CIIAvQgQJBmSFGzcGlyemHX0rXmFpu77cvVwzU3d8+smu6q6qgsdvgfCLi7
      uYX7NfN779n+5xzhvfcccMAthXzRAzjggBeJwwI44FZDv+gBHHA78W9/9Odkreb3f/A7z71X
      Z1d00ZRytWK5nI/HH374C7CCptcUVzkP3nqT+GvOYHGwAQ54Efjnf/KnTNqafDqhzlpUfY2d
      HfPBX/4p6fKI2Vu/jzt/n6u6p7Epoi75w++e8L/+1YqX6p8j736P3vRU19csUkPeKz758Z9z
      994rxPff4R99/41faRwHFeiAFwLta572mtkwA5fH90n9munxfY7uv4ZTO/uysty/f5fJS2+z
      FDlldMzrRxahLffPjnHTJUfzlHsP3uT+3QWvv/GrTX44SIADbjkOEuCAW43DAniBePTpR3z8
      2eMXPYxbjYMX6AWi7sD78kUP41bjIAFeIHxTUvfiRQ/jVuNgBB9wqzGqQKvV6kWO44ADXghu
      VAIU2Zoiy8bXxljapgZA7zwPrw1t0wDg0pQnleKji4JZrPFCcOZ6VFOijQGgbFqSNCVN05sa
      /gHfMqwvzsc5AiCMpWpajDH4pgrnyIQnhWcSKSIfjsVWU9UNkTVcVz0ALx1NKC+f3qwRXGQZ
      F48fja/jJKXMw4JwSUqZr8f33M57S075aGX4k3cveLB0eCkxixZTXBInCQCXWcnxXQ4L4BZh
      fXkxzhEAmUy5zgrSNKHPgwbzmbrDjy96zmYRs+4agOUkYpUVzNKYD1cdAEcTx9Xjhwcv0AF/
      d2BdvPe6leprf+ZhARzwdwbXZU2eVePrOP0NXgDL1PLG3ZR7cwfAk6Zmlp7iZIExlhiFMfYF
      j/KAFwodQaxptMXHirnuOJUaT8c8keRVglWSXkmSiaaXisXEk1cdQgiiJL3ZBaCNxSVbHV25
      GI0YnjsMWx+4cdH4ShvDetXxcN0wi4PR+8F5zdksIvIrXJKSZ8VB/79lSF2EZuuzedRq/vYa
      oAM0/8GiZtKtOOlK4i7hXz61nM00j9c1p1PLw1XNMtb8+JM1b53NafL8ZhdA29T7RguSPCsI
      QxaUWb53fjecG6cT4OuLtwN+s1CXBdXOfOqj+N9x9q+Gb60KdMABz+JxAZerrQS4l3remfVf
      6zO/tQvgeGL47mnMWSxYyoq/N5U05TXWHQGQuIjIfGuHf8AN4H/+v3/OX767dav/D//V73I6
      3WoK1dExWVlBHEFk+ePTEij4vaUBWtqFgjLjD7+fMokFH/ItXgB53fFkXZMKSSJLJH4QfwLw
      gECpg5p0wBZZWbEaVGyJp8yDih0RAZ4GBXmGxNP3M9IkudkFYIwhGQJX1sWUZYlNHZFzfJJ7
      iBekcURSXQE9ydExdVmgjCHxiuOJZeokkfQIwp91bvx8ffAC3Sr89//FD1kXW/ZAqxzvXm0j
      w3/fCRRBJUqcRYugLkUuOFIUAkixziGlosyzmzaCm9EI9jCuSICrbKvLyXJr2JR5hksnzGl4
      W60pLzO6wZP0tyt4hRrya1ySog8S4FZhXdRcZVv6eJR+8QbY9x1VFpgGf1Ms6BHccw2uWNMi
      cH1/827QAw74dWIZG6zYGr0roOi2r3+Ra56sA8P/9bniJA3awmUtqbrnKW/FTbtBvw60MVgX
      49mGwL9DgXWWignWuZEYd8DtgKjWqGKrLaTTU+5OtlJgHm81gthK2jpElk4SSdf1zCKLFCnK
      OaQMC+VGF4A3EX0c6rpUUhHPHV1TgVLcnwYbQXYtKknR1tJ3XVBtBmZoXRaUeTYGyMo8wyMo
      B0NGHlSgW42jbsWk2RIq//L8jE+vAlWiP4k4NWF+LHVH3+ZYYq7zDAv4fkodL26YDVp3nO9w
      N44nlnrHDoiShCZf0wAOtkzRdII2BqEUbn4HrzSyKUgWS+RAgDLOoQ4S4Fahiya0frvje6fZ
      TWp8IDUTFVSik6gnyi7D/4mUIs/4vIjBjS6AyGqm6TZa55xB7YSyjTU0+ef9Z0DfdVReU9c1
      plhhkxRPQ51ncJAAtw55WXM9uDkBOp9wmW2n9fEkJ+nC+1YkmGQChM1yq0oHfUJKxd+ubngB
      qKYkKi62B0Q60h3CCbORK7RLdd2oQGWe4eYOoyRSBPeVJ5Ak2mhCZ6KbHP4B3zKcLKfMdjZU
      awzzyfZ1YtX4fmw1ognT2xiDUgo9PAJIpXj7dPZijeC+6ygGlcgjRp6HSyd4E+HjOfQt9eoK
      CMEND1R5xnvNnLtCcvyiBn/ANw5VrtFlgXUxdVnQA+nwXLuEy8sQE1g6TXl5xXSx5GdrycVF
      w/3UkGZhHiUu4vHHH3Lk4ptng0aDGIKtKBovyFrIP18H6hG0SHpj6ZMgtqzbcgEXWpPagwp0
      m7BxigDPxJcyNJL1YG8mWMo8I05TLnLFo3XNREpEFeaawg9q9A2rQE1TU+yqPPg9dqh7/l9G
      qKbEFhfo6Ag9mC/VcAOiJOVe+wTXTYDkRsZ+wO3AN5oPsEtjAIhcPLo4w3t++D9Dj0AnU6RU
      KOrhnBiPQCqJ77qbHPoBvyFYJsFTOIsliQ6bZeQiJB570ypQ19RUO4nvLZJVtuVyTFH0+T4N
      AkI+gDQWP3zGRlzFwwLSxiIMh0DYLcOuo2R2dExZlnjALM8oypLF0R1WRY10CkeYJ/ezJxy1
      Ga4JG3GZZ7T0rPKSGPntjQQ3TUORZ7jFnHQg1FVlOapUZZ6xPLn7Iod4wDeMXRsAttyyzmvW
      WUHkJVdZxVSGjTX+FTIGb3QBTBZL3M4ghNQc91vVRUmF74MfR0pFP7y3YXkmaYqSEj8cF8M5
      m3MPbNDbhV0JYF1M/gUOlC+DG10AF5dXPH70mCRNcHRUgwG7wYbZv7x7yqfv/izk+g4rPBnq
      BJ299gb/05+HWMI/vd9S5DkuScmynJO7J5zcPbnJSzjgW4SLsiEbVOgUzUUUfvs0ijgRHUL2
      NPMFT7ue07lFG0vvYnoEKIkd1GrjYlIEkXPfXhXogAOeReqikUngXMS/+iw8P/E9cR0KY52b
      lMfrlsmiI7X1ntrsk2RUoao8R3LTVAijmU8nKCWxyqKUQhlL1sFuSRcpFS5JsS4e+RobcSel
      4t4sGi5aD++FeII5GMG3Cn2Zj0yCnp4fzMN8SJyirT//f6Idz+PGC7nxJtqblgC+qdF9Q7nO
      EIPq03cFP75WfH/WjUGtvp/trMzwKAiGbtd3/OgXQQWaxXd4svbEueT9p4J/IOEfLG/yCg74
      NkG5BD2Q35Rz2POQH6xFih7m13eijge6YR4bjLGss/PRi7gJgNUoPlx5vkNxUIEO+LuDrKzI
      dsrqJDs8sroMxxPR0hWXdGJCqyRmyCkBhueCzlggnH+zZDhj8MD06JimLDCDWvN9ijHZBYJ3
      xyQTlHNjdHhXBXrlKDxfDEWyIqWo255pdFi/twkySlB+ILNFEeXFp+N7fucxSlK0NWhjybOL
      kW8WDXMuUoIHU4Vx9puRAH3fDcksAdUOjwOg7edcZiUJEjG+JyjznL7vOErgB7MG6ifcVZDn
      Oa/NEpwUwOS57zvgdmCXSVyWIVd4nFN1DYl/jn0g8CEKTI/nhiVA1zRUeYZSwcgVSqGNxQzZ
      X+rgxz/gS2AeW2It6LSjrFv8/C5l02KsRCvDcjEnu7zALZZjHwGtFG6xoG0aXJoiXELTNKSL
      oFXcMBfIDCmOlror8F1HMyQslHk2ruB0sWSaxhijkdMZEPjaUgUu0L/+85/yU+35j/7whxjp
      8XGEty4URz3g1uD88op1ltO4BRdZxZ2J5TIreWmiqfM1aZpw+fjh2Gvi2ccFp1xkJVmWMx8S
      5r9RFQggPTqmbRomO+mN9B19vqKCMVCWr0Lpk77vePfDYO2/+jsdifaYrsH2EZ3ynH0TF3DA
      byy+kbpAsVLjxC7LiiLPmCXbsPZksRylgXkm3C2l4n/8r/8eAKtUI32HETFGeWb20GHxNiFx
      NlR104JER6RWkSrHNJLUIkbtxJPkoG5v/P1yyAiD/ba036gKBCGaZ+j3eB27EgKCelTGSx4+
      LvndKSMZLrIdRVkSR47+4jNcdApMb/ISDvgWoS0LmjwDVkyTFFV5LCBKT5WX+D7QbTbbYtMV
      rPMCOZjGXdMwcwZHRB0F58k3ogIJ4Nm9epPc4pKUZDYbj2trcYCJLD0i5AMP7xnR04keI3rq
      ZAaHnOBbBef+XSlUvxrqgRpR+TB3vhEVqEHyeN0CcJ8w8WdHxwiCmiPkVkXquiANFBKR59Av
      R+lgEfg8w9NznVV7TNMDfvNRl+XoQr+YPOBUV2gJl73l47rjrrB7rtG6LDg+OqIe8og/L3/k
      G6FDC6k47jvUYPRuKc0ztLF8el2T2zvMU0OkJenJPdquZ3oCzllOX3sDKdUeLXp5oEPfapxn
      DVNbYaVn1cPDVUezUybRD3/djnotlSJyLmy8RtJJfbMLYH15weXjh0SDGypOtlk5o2vq5JR/
      9ief8tNPLvnjd0557cgyTx0XQ4LzH7x5l8/efxeXpOPqt8mEPM84OrnL0d3Tm7yEA75FMM6N
      ZMkHWpGgaaXFtJLXlppIiWdM3MAkiAbDWBtDma0HbtCazN05cIEO+LuDqizHJJhJIsiynE/N
      KY/WFW/NBeIZZ8pmw9yU15RKIV3CaFUK9e1YAL//6pzXjyJeOZ4wjSBxBqskReeRUmGTyejK
      8gBSk07lQQW6ZaijKVUfjNeZk/QIftdVVLYkF8FAfrbQ2satrq1FG8Nn64xVFqLE88UzDTK6
      Kue9T57w5sun/PTn73NyckIyXVBmVywWX553vHGDbgYhh3wAZS2+65gslmhj+O68h7kFatZ5
      jhYpFsXHWU/X96zzHIGnR9AjWF9fs0wjuuYLSOAH/EbCOYeXwZCNI49SCmt00O2NI7Ianw7u
      TWNG3/+mGpy2luOlYpom4zl7C6A4v+L4/h3e/9mPOK8m6NWKLMv54P33+aM//qOvPPCNG7Tv
      Ojx1qPk52AGtsXsxgXgIXIBk0XuklMRJinXRYNiERWCdPVSFuGV4mHVc5A3LxPDBVcv3Zh1P
      s4yzszN+8sk5k6LBVjnOOYrsAutilLHk2ZBE03VIQJUFk8WSulw/qwK1vP/eL7gbOagAFMXl
      I+an939tF6GNBcPoAtXGsM7WY8GrKs/oEAjgqFzR9TOyLCfLctp4QSRabHFNxhSv9CEMdotw
      kTc8Wgep/2hd86atybLAGN50jomHbkPdjudn9AINAbFNF6K6fCYhZnLvZX5wLzzfTvkHX3nA
      uy2SdkvZwdZAkUqNEiCUSsz2PsNIyXIgLj3+eh0xDzhgDzdeGGtjA+yqOBt7YFcCVN2QHikV
      IpkFd1eZkx6d0COohqbZ9xNBXTY0yzOs6A9tUg8Y8epU4pykkwnWRbQD3Wa3OuF+g8Wgedxs
      TvCgr+9u3ALG9LW6LJBK0SFokCgEakhYyPMslLNgKzU2qOqG3jdE6kCGu03YlDncPDoX3JlS
      KsivgQ0XyO9pGFW+xiUpV+dPUMmUR+uW+0mPu2kJUDcN6zwnRow62aaaLzAGxq7KhnVWsUAg
      8hV+Z8n4vsXn1wA0BBuhj+3z5KIDfuNxVbQ8zRpeNjm+LijLaLQBvgqKsrzZBTBbLEJ5Oqlo
      u1O0kvR9x13n+PS6RmlJJBtemc4oOtBKYtV96qZhIRX0LVIqXnrjO0ilaJt6zCE4VIY7YBcq
      mdJJxXTIMzHWIqV6Tg2XzjH1CmsNVX7DXKDry0vOHz+CeMZ5VnGURpR5xuuvv8L/8m8e8dLC
      8cPoCS5J+ekKFqnj3tTw8NET5mmMH/oBQ2iascn2AUYaxeJAhTgAxg7xy3SfIayUGinSAijO
      HzNPUnRTIp3b6TB2wAG/gZDGopMp4gv6yd2oBDDGBD3fRUyRxLFBCY+SipcWjpOJxZnQ+2vR
      wyS2PG/yHnBAwL1UkEqJsxqjUqwSiDRBScVi2PmNi6nKkmjY3fOm42lWcbqYIGFkJqiBGHej
      C+DDUvPXl46TieZVXdKcn4cF0bd8P3pCbFJ+vBIseoErLtAyIYoXzNOY2EV0bHW3XKc8je7y
      mtsayIdI8O2Cq6/py5x1CdM0Zr0eIrw7JLjIxaGXXN9R1zWThYPUYJSkboKxXA3exxuPA3wl
      NBU+v6Yj3WuSfcGUn68891XQ9aohmnfA7cFisSAdkqAio0mG58YYlien4/NNR0iGBuwunaCM
      HdvqamPQ1tLV9c0ugLvOY48lui+YWAt2Sd31CHlobnfAl8cYV5KGn593zGJH5wVd6VHGUdUt
      1J5rn3J9FTIQf3jfUlFA02JMRN20VN5A5ZlHN1wZTjQlUZvT5yvawXuzykuWd46HRHfP7564
      UKMrWYRy1c8wSHejyAfcbpxfXpFlOY1O+ZMPax4sHbUXfP/+FFtdj56gD7sZH18GbtD3ToJX
      ESBJE9ZZAXHIQbfTG84HsMbQWYNQM4RSSKlIkUgpKX34alEWdIOiowgU100ZxRZBVjZMaLkz
      n/L2zNNEU2y1YnJ0jDzEAQ74mrjRBSDx+LrCuJjr8ydESUqbZ/h+29XFuphuyBEWhIK6UZIG
      fW0nx1OLHic6ZB9iAAYx6nQHHLCIDbHo8CbC1T0zN2FVtSipSAf+f6gqISAKG6c2NywBNo3u
      PKCTKdpFOAJ3QxSha3cj0r0yiXanEySqw0iDwRDRsRA1VsXUSQp47MELdKvQRyldb5DAf/bb
      U54WLYvYsIgl3VVOm2f0iaTNc1bdgk+uKvq+oxjyAQw9XZ6RDDpHp5Nvjg360dNr5gj6PKPv
      u7EMihhyNIU1+Lpi3fR8ljUcI2nzVcgRADLp+HDlORX+UA/6lmJd1FwOvP/IKx6vWwSh3PlX
      zQu50QXg0gl64GS8OVugpcT3x1gXsxwoDKHzY4+SMjTNU5pJmmCkwPcnI/fHK808jTFKIPtg
      4R+4QLcLp4lkNsyHq2fYkNrFGATeGGbTCS97S6pBScksDY6U2EVoJcfWWtLcsBcoG8qiQCh6
      W+QZTbzgL64M3zubsCwf4wn1/qdDrdCP1i2/9frL/OTn7wcKa1byWC65N4u41z4GGEusuHRy
      4ALdIhRlRZaFqhBnC8XJvCZyAhtpnlwGRjFUxEmK8SWmK5HMsQO7uG9qRNfRdi2ebyAh5oAD
      fp2YOUNEoDxIpSgbieg8omko9YTMBo0gsoaJDKT6TYEseJ5Bf+NdIn8Z2miCFp4pHj34+x9Q
      fGGii3YhduDgC0vdHfCbi72Wp17zZN1wNJFE1vDxuuPhKlAdJJ47zVMSQgPGTYuk6WIxfpY2
      lqu6v/keYZuqXHVZMD86pi4L/smZxrqGjy8qDD2qCG5NgGYwktM0wUYuRP6EYRIpqqxEDJ3+
      NoWODrg9uHN2j25wjRsleLXvQGrKzvNHU4nqG4yLyYsKo5b4vqOXmuWrbzGPLXVZDDZnh5ea
      mG9QAjybHC+V4jhWVGWDGwrl1mVBfHSMlIo6y9B4XHFNmrQkpEgXUZcFs6NjICywA24PPvz0
      UYjkAncnli5fQTLjF6ueeeqYlE85efVNfvLeRxxPIup8TRvPebRu+PffPOGz99/FJhOKPKNP
      5sANLwCx82eTCWbw8SuXII2l6woE0DY1vtsy+vp+xiSNiVzEIL320DahttBBAtwuTGOLGTR6
      reCrJULu4xuTAButflP6XCo1LA4fOnmojkSpUL9RqnHh/FzfhxremCYsussw6KG20MEGuGUo
      MyjCJqkXS0iCVnDsOxJnMPLLl8u/8aT4LM/pENT5GoHHJBM2Udw8W43paptocL66ZrJY8pNr
      wbITfMeuAJgrRbkqRp7QJiXygNuDXWKkkKFOrMSTiBYnNFmecawEDyYKaMkX93Gi4x1RIeWm
      U6lktljgZZj6N7oAposlcZoOvQAC36cbMviNsTjndnoFbB+ti/m9N8/QSiL7ZjjfkAznbwyZ
      QyDsdqEuS8pBJxZAnWfUKN5f9Sz6/rlo8HVR04kWVWZ7STOBdhMqzH1jgbBNPwCVhGF2+YrZ
      q2/zZz9/yp1JxCorWKQO5VL+8pPPeHsuecXkxM8kw+8mxx8CYbcLd87ujSVQxoYpUrM48Wgl
      Uf1srx3X22kXGq7L6SgBYF+SfCNcIAi5mh5QgyHcc6hzeMCXw48+vuJi4AKdTCx9EepFJUlC
      h8QWF7zyxlu/0meNbZNubLRA2bRc5WHAx8Oq801FsRoGriRHacTUWRSeSWxJIsHvn2omGqRI
      bnJ4B/wdwyw2SBG8QImVrIvnz9HW7mkFUipmhLzhu6+8xnURVJ/54ig4YG5ywM5o5knY8Zuy
      oMqzvZ7AomvRxRV5Aev4iHXe86pqsF2J73pyBOlitlfYaDdjTB1sgFuFsizJhzhArBKSoX1u
      stEqRKj4/Nn7747/s1tH6uy1N/iLd0PT9ZemGkt3wxlh6YSpDdwNJSVd36NlKEXk+45mpwLK
      Ig4uzchIjItQQ0OM3QrTsC133SMO5dFvGSaxRQwSwCjJ5SosBkVImHq6rjk7U+hkS5g3ztE1
      NZOhYtyzuNEFcHl5xeNHgcE5SWPyLGeaxiigytfce+M7nE7CxH+vCN6eB6bn4vwxIgl5m3G6
      3xt2IwGkPcQAbhvyshrzfuNZwr3JhtYsKZsvtin7LhjOn1dD9MYLYyVDOtrUWSL6MRos8Ghr
      Obp7F4CJDOpMohjqiYahGSVxgysVggTQ1iKkOkSCbxneundnnMRC6rEtqlSKBMFJ39D1/dhI
      DwLjs97JODyZhPwUq8GqG84HKOqW83Vodzpzdix3vimPXpYlH7z3CyZpTJevcEnK+aCrffLu
      z0ZX5/njR7z02us8evSYFsFx6iiz9cENesvw5LNPR3VYJ1MeD91iXJJSeEVcnvPOO7/Fg9de
      H/9HSYkfYkzaWsg/IEpTLi5LZqm7YRvAGiZDNs6mwR1s/bRKSiZpTOwcLf3gKj3UPT/g83Fl
      5qxMmE9LY5imYSOVxlBUQRqUZckv3nt//B+ZzPj5KtgN/96bd/nt3/ne3mferBcoSVloh1WS
      puuxE5joHljS9T2+72jzFQ19qPuPIM9z7ozNjV1Qo5IkGNHSYI1BGY1Q6sAGvWX4eO15OEzm
      1+lI6iANplPJURIh1C/nAv3bH/31+Fwl05tdAO+dF/zo0zUP5hFNFwb+jrkMrU7znNe/+9tM
      X/0tABbKI/qWI4JOF6cpxliMNSRpKJPinMNajbZDXUd7cIPeJhylBimChrBIJNYE+1IpSVGW
      tHnOSzs5wACRU8xEkBQT5Sl23qvkN9Qo2/mal5vgf20mZ5R1Sx8broqG/+dvQ9Wu372jiNpg
      vMzPXuLDVceDpCAvKy6KhtemPbJvQreZusMYQ1fX8OUJgAf8BkDhSQjFEZSyCBfRiW6P8xPe
      U3tqdbXzXh/rm10Ar7mG42WOdjG5Ch77zGtWXQ9IXrGK756F4/PII5uD/n/AF+O3Jh1t1KKN
      oW0asCnaGDwipD9qh3Ux93eM4A3BEkKUePrK2+N7C33DKZG7ZVGSPhgprTS0g/uq7Xouh3j2
      Qlv00K8jVZKzqcUZSYeglzqs7LIkPjTGu7VYX16EiiDT2ahSa/rRwdLmK0w64YP3Pgjnuzu8
      v/J8d9ZjhOf+XcX/+bPL8fP+w2V+swvg4vKKR0MgLE2TkMJGIC+VecadN747nlvXDWUVVKA4
      Tfns0RPOUkOD5OG65nj5OovFAmcPhSxuK8Y+Xyai7ELg9MhFeIKXUX8FguULmU3SROhEkip4
      JwR8UUbT6nCBiYv47usPxjLqJ31H3Xk+Os9I44i7sWR9ecFksTzYALcIdRkSohygB12+Zlta
      s8wzImF5GJ0BsHCaE9+Sxh5NoEz/l78VVO6gGt2wF+iLkNUdF1nDWddRZmtg29oGBgnw/ruY
      ZDIkPqx5+bvf462zeRi4MliToA7S4FZhQ6k3O3x+u1NGv8wzmq4fA2RzWePKNV5Z1nnG8TwZ
      iXJuKNQmvPc31pSrrmuaJogqObQ9DS80bdeTxtEYFRY7xko0lFHZSADfd5jh2GYBFHVLbDXx
      YRHcGlRFMWYO+p3EmL2swijhcuCVxTrwgOzQntc5N863zfk3ugAOOODbjhvdPtuqoqur544r
      KfFtvXdMaEPXb9eiUAo/sPiE0tsVLwSyCqvYRzHd4F0SWo+sP6kUvgvSxsTp/qofz5H4tkUo
      RT/sAUqIcGz4LKFDpHm3BEvftaiB0h3O0ci+Q+UrmslQecwH5qGNY+qiRCr1ubnPm/F87vtd
      h1SSvuvQ1qKyFTQVmIjKuPEadq95MyYlBaKqwFg6PEJp+r7HOkddFOP54dxwLarI8DaiRQzX
      3++MK5yjjaXNg8qqV9f4MsfPlrRxOtw/8F1obi7qoM72Lsa3HSqKkPkamuF3txYG7QBjw7Vt
      YB2+HbQFY5CzJTAUTevCeHzXgrH4rgu/YdchlR7H67t2vG7te0Rd0buEzgd7gKbG2xvmAuXn
      T1h99vFzx1Nr6S8e7x2Ty2PyansTzHROvQ5eIzuZUQ22QmoN7hc/A6B6+S2yOtxQM1uMAZA4
      jqmG/z3+zjs8fO9vAYjSCdU6fI5LEtqrC+xkSl4342d3l+fo2YKyyFHzo/A92ZpoMkF4qNYr
      JlHwPZd5hp4vifIV8x//Ky5++I8R3iO8p8wzTt58m0fv/ZwonQQDLU2psmce1+swrt33k5Qq
      W+PS8Di/e8bsr/8MHn8CJ/d5dPLqcD3peF/iOOjCZZaRRhb96QdwfMZ15zGzOWWec/ramzx6
      N9y7aDKlytYkUcjXmP7tX9GevcylUJjpnKIox3HFA4N3cfeUq7/5i3D+v/kT+nd/TPeP/hPO
      3/qdcEwJmtUVLknQn304/kb16prJ/ZdJf/rn4RoA7r4E5yE4yvEZPPpk/O27+131bx4AACAA
      SURBVK/SXZ4DII7uYv/hfwzA1UcfUK9XuDimWV0hj+5SZSvMdB5+o3Qa3KSxo15dD3MiZ9nX
      qIcfUb78HdZtx1z08OQzurOXf/OL40qpiIZuktbF4wIQ2qCWd1AuZjYsRpFOaI1FRhFWKdSz
      xpYHvEcbjRcCKyXaxWjh4eQeNg7nCO/x4tDB5u8CXowb1DnkfLl/0MVQPa8ufV30XTtKEuE9
      0SQsBm3tqA70KtwGiQAPXe8pygrKx9jJBOE9xWefoOZLEIKL66uwqLShePqYKJ2wfvm7VOfn
      uDgeJcBGPTng24ubLY5rLXbyfNJiLRRlt297R/3N2OJS7UuA6/On4Q3PqD5UQwPlqKqosjVS
      zcf/+bqjspPJ6L6zUVgcNnLbx96HtlBiK2Wsi0Ew0sOVjWhPH9DHKWJ+ROQmSCWRUiGnM2hD
      UdjOe5w2SDzi9AHeRsRSgY2IRKjGF02moWdulWOnUxh07frt79MgcVFE3/dMrUNWOS5NaIRE
      G4tUGjMLNTXl/VfCBR6fjvfKDFF67RxyGeq36iERRQ2q1teBnM6RxlIDdn5Em2dM7pzQr69x
      iyVF2zK9c4y4eEK8PKJoO2ZHR+F3fu276GRCXOQh5iQkcjK/2QXQ1fW4++7CTmbPHRNKY6bD
      zVUKoQ2R1vi2DXQKNYO6RiuFOHsQjicJdsg5Ns7BYMzaKEJujOCrc07++f8WvuT0AdV3fhDO
      GSaZdfFIlTJj4r2l6YrhsxxdXeOOTxDa0NY16XyJVIq2aUiXR0ipaOua6WwWnjcV6eIIqdR2
      kQ2P9TOvx8ci33+dZ+MidemEWllqHSNtSpmvgx/76oo4jukvHtMujsjqBpekrFdXROmU9vIp
      djpjPWRI9V1PmWVEqUA8fRzsrM24ju4GPVqGnOskiuifPMTMFhSdJ0onyDLCffBTAMo33iYf
      FoFpKur1NfVkxvJf/O/hZt57hYvFKWp1RZOtsdMZ7cl9fDREc9MpcuMgiSe0L72xnQyLO/jB
      0BfDnIAQCKuGfl/Ce+psjfA93eoKLRXVYA/KVeg/V7VhY2uGOeiFpMrWGKNpVldw00bwl0Hf
      95TF0P9pMqG6uiRKJ7Tra2ogjhN4/CkNwGxJm1+hzSX1EP0WHtrhwq1zcBFYpswXe9+zuYFS
      KoT3QacfPBAiihB47OqC5V/+CwAu//A/D+W0haAvC6p1mHwdUBY5bqhMUK3XJC6iF8EQtZPZ
      QQV6BjmCZuB7uWxN9KN/CYB48AbXD7b1fKKmoRsWrTaODek91gY95IIrpdj3I341vBAVyMTJ
      c+06lLV8binorwmfpLTf+T4AcrYk2rjslCS/WgVV5LNfANCdvUxV1eh0Qvfd3wOgqkqqPCdd
      hF1fzmaoIR9ZaI3aqCJSofAIrXHaILQd1S/rYkTvMc6F+qiDpNl99FJsVaB4K50g2Cv9ppRM
      HNMrhYkceDBRRN/OUXFKZFps5JB9j4ljZDdDxymR3QSNJIlzGGvpFkeoOMVs7J94E1F1gA+f
      uzxGJCmuafairy8KTZGNGkWkNC4JbFC9uIMwhtRa0AaxOMJaS1rVSOfAz0etwmmN8B5jLN6Y
      m10AfVXSXl9+7nsbUb+BndwQy7Np8OfBy9MDVTc05Z7OhvpCjualQJ9NpMDlKxApxSCqnTGo
      yOLbhny1wqUp2XVQMbyAcjCIvYDm4ilmNscjKLJL0qM7o8Rp1tcI31OWJV4IqjzffxzOq/I1
      CHZeZ7jJhLLrqdqeqK6psgzh/fbctiNqGurheJ1neCFosgwrJN3mXt85xj99iJ/NydueSFvq
      QfUy2lJlawQ99XqF8FPKpiVqO5rVdfBszWb4k/soY0jWl0RxytpN0XFCnF0iyjXFP/xP6eoK
      NZ1D75FxglYaGbmvXc5cTWboYcEKrWkff0YL2OmM5vFT7HTOugkLxOUr9OVTGvE6RdMGl/HV
      JS5JuV5fE6UTuiePvj0q0K6xqo1FzubEVU7vHLXSKG3g5B6+65BxghICMZ1h2340CN1iGQIi
      UdjFADqXkL3+DkCoTH19PX6nFwKPwA9ZRr3S9CZC9j39sGhIJyAEkZQoLVFGQzrBDDum8IzP
      +0mYDB5BP5R5/02Cbxua6wtEkmLe/RvU3Zeol/dAgBv8/tlb36euG4xQVMUqLMT1Cjtb/JJP
      /+WoqpJq8Nwlkyl68CSqOKH5go32l+GFLABtI7yQe8eE1lSX4SJCUGjC5K/+FI7v8VkypwXU
      8oSqXJHKki5bIVxMVRRESUp9/mQM+HgpaQdinQNWg8cp6nvcsMiE0uSra3ohqQbbwycplZfE
      xtGfvhTGUgYVSOtwq/qup8yzENgaCjBtjDOXJPRlSZmtiSZT+sEQ/7ZADF4cnUyIuqAmCR+M
      KB1v1LFBtXIJXkisi5F9F9TWr4lI67Gng44cvB1UU+ZL4ukMqvA7aGsp7gzVPtJtkStnLWq4
      p1JJ1gPpLdIGO52jk5RoMHxVFywHn6REbTuqkyaKwffYOKZrZzdcF0jrMYq4i67rxjLXG0TP
      LIhfF6SUo6FqIkczLAw11BuyzqE2fYedCwV8jaUf6BMmScOCEoqi7YmFHCXVr+IjjYaaRnY6
      Q7uYSKk9BuPo9uQLHn2QiLHWwQBsatxiQVXXnPoG82//P4q3f0De98yWS5o8Y3rnmLooSM7u
      UxcFkzsntEVG5z2rzhP1nmpQkzaOh1hI6myN6hr6qwu6fhnYud5T5zleSOR0hk2nyOmM6vV3
      kLMlk96jtKa/GzYMZy3aORgkoXEReFA2wn7wU3j4Ubh1D96g2QQK19e4rkN+8n54ffclHp0E
      D1PU9WNj9DZbjx6daKGI0m215+Qn/zo8B67e/iGPyppofkx5FRwjsmvprq/oJlPKuqYscqJ0
      crMLwJc5/cYbs3vcPO8TlkqO4XwAE1k4vgeLI2wUbsHGUNMm8G+IUyKpMc4h+w4dp3ipMHGC
      3FQD67o9e2Oj7oyPzzxn82zDEfRBzQkV6RK0MXRV+Gzr4pG7I6VCSYmUMlSskHJwg2Z73z3q
      9tnWzQmD7g+f+75LJ7RFTr2+3n5OWdJfncNnH9Lef4NKaPBBf/dSUmXZ8H1rdGSpV9dfO3VC
      lDnRL35K9cp3eJIsiNyEOz/6Uzg+40KEqZQ8/Qwun5JHydD8xFPna+xs/ks+/ZdDpxP8wEsS
      WtNcBLqE7Drk0clX+8yvPaqv8qXGEqn9kiZSKYqri71jH81Pw6wsK6LJlPzxI+x0xsXVFS5J
      qc6fsvQN3UfnqJP71B+9D8enZI8+Y2I0zfUl8pXXt4EaF7PaBMJga4Bu3K9SjR1r6mwbv6iy
      dVCBvKdvW5rrsKswHSZokgKeLM9wcRI63lxdkC7vjBXJgJHe/VWgJnOUDmJdGgODJPsy2PVK
      QVjAm4Rx44Z4irWB3BcnREpj4xAnMfGL9wKVdU1VBpe1e+Zefpocjc9nu9cnBFIqzKDCmjgh
      jjp8Fyj2L2QB9GU++nk30IsjonTrMn32houvyKvZBH8APGJUh0Z3YRQher9/zG2NaBMneCno
      vacsCmJtRteuGdyVJgruTYQYn4uB5bkrfZLlEVGaBiN/OpR4xAeX5aY/2nBcyk2/tBnaGrKL
      9fhZcjYLgSnfwNnL6MmMSKgxGBj0dTHew43e7duW9uqCdtxoBHW2xiUJ6yePSaKI/PIpYnlC
      dRk8JqsnT1iIDvJrePk1OLmHnC2ITBy+5/gM5kdohtKVkd37/cKYepT9+pFg62KG2rh7gU8z
      uIY3aIp8G3DM8+ABqjuqsqJXOpAaszVe3LAE6CYLmnuvPXdc45/z+fuu2ytZAXD8b/6v8fn1
      b/19vvye9zwVoim3ReWD6rPjfh0CYzyTIrFRgaI0DRyishvPF97TNTXFRioM/9sUGdO+29oL
      bNSxjIrA/KzLgnq9HlWwYnUdDPqigI2LNUnp6poossg+TCoF1FfnPAHs2z8YmZtXlxdE6YQ7
      /8c/g7OXeXx0H4B2cSe4NpXai8t82QzaWhnOp8eQl9iJpXv/Z1wfnZGXFWaaUhY5VDWzd/8G
      VZdcofDzI9oip0+n9PdfxaeBBeAjB6cThoJugTY90MnVdM7JZVCdpdnahk2R72wofm9z2XiH
      AGbLo7ARDBJgtyPM7vMblwBdUz/n7weQ8fOG8efi5N74VE+mRL1HSMlksaTvWtLlEXVdoWZH
      dAh0OqX1nvjOCV1dIbSl77pxNxCA6Le2QTmoQBt1R/ZdCJHjKUcVY9Cjh1001J0Z+lT1PXW2
      Ijk6GSeWHTgv0vcIpfdq1GyMtq+CJt8Ggdx8sSOFUoriV9sa+r7fcz7Y6dfXy78MuiKnH+wY
      1tf02pJvPHTa0G+o7U3D7IOfhPNO7sNv/zCM1wUOFTBO7vG53HeieCH27L9Al56MHrvERbT5
      +kWxQRPUMzqccg63s/OaKOKT+bbwre081TBRo8mUar3CTqYDr35CmQ+8+uFC22FHnj4jAdos
      /ABKQGoMRmsiPRhWSUKnNdZYojJMlC6O8WLYvdcr5Gwx6vV6EL1CK8SQ6FFV1eASTem7flS5
      4Plc1rosmJzcpS4LoigiiiKaohgJZJv/UTbCxsko/qXSW4nzJbxnu9JwdzxCSpLlHXzbEJ2c
      0nc90XSKKtbESTD0lY0Q2qCHHAkVx3RPPvuVv/vXgTbP97hlu7v+huYOQBpUn1iHaLGJ3Odu
      xHDTtUHpkTzvC6/rcs87AoHc1K6v947tiutdP/SX6QyzWynMC9DDIhPeD9qP2KdDh0P0OzuK
      8KAiG5iU1tI/a4DuaExj6Y5hge/feDGqeZsOlxu1SA6ZbVW2Hr975C0pRbsjAazYJxNGw32a
      HR3T5BmX//S/C8MqC6JoaE6uDX3fU+yM3cutjbJJrnFJSr26InEO//Bj1OKIvGmx0zm268ZN
      CEDeOaU3hjidBYm8WOCefkZ3/zXq05eRdY1Mp8HmiRzNyX26ZPubijiFwZPzq2DXLtQuHu/T
      bp4HQBRFIXahDXXbIvChp4SQaGtDX+quxeobrgzXl+WOwbWFj54PqkgVfOUbmDhF/vQvxtft
      vdeoh3wBN18QTaY7xl4SdL0NnyWORzbos8iqoaS20jR5hpeSvAnnRnU1TsaNkS5dMU6ScqQv
      bBfUlrKQD8fEKAGA5wx7P6yxceJPQyFgISXKWlQU0XX9WPc0lRItBOy4AI2LkZvYhbVcXm3t
      jzpbjwZhlWWjgV9n6yE5aCtdbLQzoYzhl2Vj2Lrg/qc/Dy+O7vKpSaEIG1W9vsZOpohPPqAH
      yuOXhrHoIKWnc5q6pi633xK5dPzNtYvHNFaVToLqA7C4M55fl+V4762UezbjrgsdEaL7gWBZ
      4KVEeo/vWtp6uykm7gWxQa1Sz3V4kQLWOxfkpSTduXjSyUh9FtpQXK4p8oIonbB6GgwmU5do
      qVg/WQ/q0Zo7znH2WqDaCqW2uaaAuP8gcN/Z5gvLsyEP9v7Lo48fwk07AoTvae/K8bhvG8Qm
      Stz3e+dvSnWM17SzYNLFcmtUF0Wolt009H23lzYZ+zbwjOpmXIjCe9rVVlruqngQJKRUO7EJ
      pYJU67q9nVLsxCE2niVlLG6+RGmNOH1Aby12yEmgruCzj7a/45shkmviZIxRfBn4Z3T0CZ7J
      w1/wyb03KO+/NfonjofzdyXArjppIkc2tOMF6JWiGjx2URr6y23myGSxQEmLFwJjb7hBRj+Z
      05698txx0Xd0zwbIdif7gE1wBYJhtDHgdqPGIcljk5Ah6aUk0ma8QU1R8PjnwaCK0in1QJkG
      0LNl8FzAmIf7XH7usGNW2ZqZBN3WnMtoPN5fPEHPl3ghKQeXWzg/4/T1N/d33J0fbUPH7rt2
      DIJtcgg2rtBwnkTEKVrVo9Gn4oRuQwpzMX5Qa7wQIWrd1DDkmxer63AtecbyGRsgUQI72D94
      z3WWAcGmapsWXDKoRROapmWyWFD+zh+EcU3niMefhjHMFkyFRzUV8s4p1CUmSZFaI7TB9h1W
      CojTPXVR2Qiy5/NFvgi7EmAT5Ntg97p0tI2g10MBhXQon9O3Lfn6kihNuT5/etMJMdXnJsQo
      97xPWGgdeBoDtIuh3zrqdJyM/CFnLa4YdHkBG1PIPvyQOoopVBQ4PlkWXH/p1m8v22b8zF5t
      F9KoN+5mZ/FMU2UBqmuJpB6P95MZyiWj2H12kj9r64wJHX2I2rr5Ypt91rUUA7u0LoMkIE1x
      3ocffyeesVk0401g4+cPfKrkdOtBG8fad3v/F/uOfiCRqeNtI+lxdx12YBOFYFjnIR+4Nqbb
      d6JO/ur/DU/u3oeP36e+93oIKD59zGl+gfAtOWrwsg0fr48x0x2SnDVkxhBHMSpJYYeo+Oxv
      8ezz9Y4E2DTJ20hTALupnmG2UqFer16UFyh+fsc3lmq1v1jaXQqD0uPqV72D4YeTSlM1X0w6
      e5YKoXY8F/rB6+MOvdk9PUE1CDSEbJQCsuvIzx9hpnO06qiB/vwJenFEO9gOsXM0eUZZFIEY
      17VfGAlWkcNIiYoc/eDN0MYSJSFQ1uwsVNi4AMOk2+QVhOcx1+eDz3w6G1MWm+EzN/esyrKB
      F7Udj1QSOZR+EUk6limpq2K0YwShxa0H5pMkVFQABD1PB+kuv2KugO+6PU+OVPMxYyx8p8Dv
      3LNNbgbDCEZ1zu87TOoqtOSN+pZ72VOE7DkfzjXJZPx97eSGSyOqKAp5p8+g81CW+yZX5JI9
      MWbdviGrd/2+1sAmfTJOiHX44fLju9RFwWxjDNcFSggmJlymNpr26Hj8zM777Q6x+XyxbeM0
      +7M/Def93j+g/4o+/F2vSbo4wsUbL5Ecq0xsJjbDNwuloG0Cqa0s0MZSXpyPXjLh+72JM9LI
      7bbSXjRMJL8jzZ7dDEgnY9pg3Pfj/R1312fIfqIqMR+/F14cn1EttxL08g/+CQAqnVK8/UNs
      5GjzjPj0Pk+qO6TLI9yTTzE7UlcYTad25ofWYxN190vut9h1b8cxqyePxvdOjaTPLxHmiDpK
      ggv3KDheOu9DyRzvUf6G+wR3dTXW59nFrmdkg7Ab7EeH+6t9jne9cSE6h9yUMjEG9L5btO86
      2qbGr66RVUH0YagLJJfHXNmtByqemlEC1MXg7fEMTElI3g8/tvzB36fWGn36En3vUZFFCkk7
      X6LjFOF7TF0hhh1T24iu75FK7y1qodS4wNqdIOFmMnsRPBtSP/+z6DTFy2EDiNNRHbTOUQ3e
      Md+11Judrg55unq2oC6hXq+QZ/ef22Q2kFJRXG3VkypbMxsIZpt14CNHd/+1cC2zBfGQt2ut
      pR/iJs9G0XcRv/8TeLStE9W89Tvkd+5vx7AzqU0c0xQ5Ntr+ts5YVDR4ioTYOk2EYBJtnSo2
      v4bsmjKZ8lQ7IrX9DBs57DREibsPfvbtSYj5qui7jqIZdj05qEk77AahzVihQM4WRHprf+zq
      iNM74ZxESebZBVJ5Hv83/y0A8Z0T+qZBWku2uiQiDR6UIg/1g7oOf/mU3kYIH3booiiYHZ/s
      RV61seME0SYimkz2Q/ODm1QoRX19GbK+sgyXTKjqeiwe7KUavS4CP7aUlVLhkkHCuAS1ycQa
      1Km+6/dskk1i+XhvNtHlYUzVoApFg9rUpTGrdsgf6DxNeTV8To8dypVTV4F2PJ0FdUWIYOsk
      z7u++67bsxGVEJhN1b/Btb3b3aUptoGwSOs971d1vrUBHt45pTITJknCnesLVNdwsaFFHx0H
      b6FS9Ed3b3YBJEfHexUgQjm+fuf1fmm/6c7zvu+R9x7guyaUuOu64K7clMF75Y2xrKAbHkOZ
      vJfG8nj93TNqIXiYBEMritK9CRCpZy5fgOxbXHYN1mDmoYexb1ua60vUfDkaUAF+8Ml3+Okc
      P/D3BT29DK7S+U4bV63NSKlQUYTUKgSJBj03VL8Ix4wxKGuJ0unQaMSMyTza2FFFUDaiGVy7
      2hik2pYxlEqhbEQkBF0SXK7zu2fb8RgzTnptbOi6QsjP3ozDpZMxaCejmPiVN8bnGyeFshFy
      syDjBJFMBvW3CXZNOgnf88Y7MCQaAejlCTOzpcVorRE63IsuTpBa7wU9dToZYxzG90TvB++e
      Wtyhm23rTMmh7IyyltaEPGG9OBrnFl0bfjMhb3YBZBfnXD38dHwdTaYjMxNCieptJHIyeigC
      tSG4FNurC6LJlGJQE6Jkslc2cOPvj+OEar1Czxdh14xjqmzN2Xfe2Uuc2IUd3GUAy7/+M3j0
      MeUbv80v7r66575UkcNO5ygpaR99Sk2InBohKS7PAz0gSqgePwoT03u61RX++O5Y/n38zoEC
      QZEH70V2Ph6z/fA4vI66jqbIw05ZbY8fnS2oP/sInU5Y5cN9cY5svWLe1nTra7rjM8qmwdUV
      3fqa+OSU6yePh893NIO6aeOEuixC9e0hI2szjsniCJo6qGtVTVPEtGWFiVPaq0tMklIXOTbu
      aMqK5M4JVVXQFDm678N3xTFtntH3HXk8RdnBNpEylMQ/f4JOJ1RVRRRF1G1HohWsLqnrOgQ7
      j4LDJPB4htqk1rCr+O6xbodNtwPWXhB5YAgilh6KPhyri+LFqkAb1yMEvX4j7UIA6ddTIaLv
      WprBsJJ9v2dnaGNGb8rF9/6A+s0wyaJhEvbvhR2mO7lHWVaI2QxxJ0gFLUVIGVR6TCeEgaZL
      UAuEet4NCuwd2ybAPJ8Qs1FRNrbB5ng/kvagGshkYmBHdk1Jd/mUJplS1TU6srSrK+xsQT0E
      08Quk3LHn17t3PMqy3DpZOtNGh7bQQUJmVmBSCg81OtrouksMDbXq73kn2a9wgsZorNtE+If
      SiOlol6v6KWiKnJE34dNbZAC9TOVAjcFxSA4Pza53tbF2B1Vyl9f4FfXiKPj5wNh8wVx7EYa
      /I2XRYl23FPTpmR2udXVCqPoVjuejQ1P5ddYsf1Zw2qX46PktjJ0GMP+ox/C8TqdYLVB2Yh+
      WEDZUCg3SlK6IUATeOfV6DrtvR/15w2iIecAAj/n118M8sViw9nSLqRE2jhG+h4dD1XuuiE3
      QX75FNhdOrSHvc2s3fW2nZwitUW4BFkWiL7fet+Uoh1p8De8ALp6nw49u3xE9LO/HF/Xr76N
      GbwZOk5HnXxUVfoeM52PyQ86CXTW6fFJENHHd0MO7NExTZGTnpxSlyWzozs0RY5LJwPteSd6
      uEsHVnqkR29v7tY16gdvjNpUjdjJZd4Yzbsl1z8Pz7IQpe9HA9bNl7gkRRkTKi08myM8ENk2
      xvEmIURKhVyeIJOEaKhsbYdk9s4saJIpajLFVSUqciGfN06gvuLLIrKhJIxM01CqfDoPyfQI
      dJIEno21JHiMVuTrAiEk2eOHofJcEXz3kVRj9NbFCcJ70qM7w++74XANi+f/r+5Nni1Z8vyu
      j08xnvFOmfnmsV7Xs+qhuhHWjQqTEKxAZgJWrFmxxIw/ghV/DXtMGEIY0GCllkxVXV3dVapX
      9YbMvHmHM8boWriHh8e5+cbufA1ulpbn3DPFiRPu/hu+g89j5vUBJcYFKtcK43cHZQxW+CQ4
      zUnT8Xe1QtH736W9fYGcLQKhqm1qjvuDOyf2+9gBorKb3FxPHq+rYyhtJlKF207zZgwT5MB1
      HUKBYduOqhin23h9cuG9bNRdS+XBceczQ6oESklU6pLQ7XO3WzWLFdVhj5wvQjVjiEdLn1yV
      q7WTazSGRGlXBn3JKqdNgvCdSikV+/sRLGg998DpAo3fZwgnhLUuZOgecTjs6aUMu6arGG1d
      bb9uyKqj1/fx1aqmGcGCWYbwu5CeiHT5MqsPNbQx8OlvaO9eoC4ecb8dL8Z6t8VK6XKzw4Gz
      rnIq2eqbI3Wbpg25nVP1c98z1e44Fn/xf8CjN+CDj935ub/BenBlJ0QI/wD0zXht9UlKs9ui
      Fivk2QUyy9ldu7L5wmjmRqKV5Ga3+x52gCg22775Ie3jd8L9NALEJXkeVmOTpujYQCNqh3/b
      IZUeySNRMw2mSXAvFZ3UCKlcR1gKtK8suAtHYExC7TVDnUpDgpKCtnEmFtsXz8kLlwQfD3vm
      F5cBpzSMWK06U2pSHvz2HoffbtTHQyCqN34X6gNcI8LW+MmUlTO+LRF12LWcpEoKCEcb9edQ
      dR25dP9/2/CveO+jyDgjIQ/8CIU4H5EFNkkj4xEHUCx8h1wJ4c0zFMn5Ky6Dng7X/IlW9i4J
      F4PsWsS17+YtVtQRbj29fEwymyM9G6yzlmJ97ldYgckyVJohlCLHovICnSS0TT2p9cM0AdVR
      ia3VCU3SIZShUy1KqtB4En2P6hpEn44KElJipST7i/+T4v/654i3P6T5j/9zpDEoIRHGPFCF
      ADDLFcZDgKVS1IMAFyDOrr7xuUzLGSpJyY1jvQ3wCGUMcr5wko2LpWvGMXPSk4dvX1jozy4Q
      ixWYhKyuUSZx7921qDxHphl9daRLVzRZTnN363bo/T50uGMAW7vbkPhON/P1V330g9F++ht6
      n/zL+ZJDhOyVizVVVTlk6vPnzp3neCBLErh9jirn7KwYK25ZTvnJL77fJDiJtlnwkIbhdpph
      G1ev1+UclY3JY++BY+DwG4dj5XX7CSuaFRLbNnSbe5TSAcuzlupLy6BKSjr/I7X7LY1XGx6V
      mn14pvaIF0+x60uaAXe0WFIdj6gf/jH23R+i84KjV50btJD6rntAg+z6nsNgDKh1UDcDx7IK
      itW9xaR5+MGGnMMZb2i3Wu+2zj3HX2CDOHBazjjcOsbc3nfT49/h24xBcRkvHZ+WM3qgv7+h
      1xorJM3mjk6dYa0NbLZUyFARs0KO7LO5hSSh73sy1zXEKEF1fklrLeX6zG341nL4D/4xmDTI
      ufSbO7rbMdRpIgyYNCnV4TCGkTipGdWlATdW2YFo5F11Xjx71SFQc7ICigk+Ptt3iAGNmOfk
      Aw/04jEvFuNqWKzP0F5az4lLmSkePEuxSBDQzeYTZ5eHO8CYGxilx4qMMu40vAAAIABJREFU
      J5yYLA/qDuOB5jRZQZJmpH5yDLGz1JrG7wbhYo+S4tMdoFytg6Kc0IZdFCKmepT/rndbjzCd
      HvNQBv0uY72/o9/cUq/eRxcFIs3pe0d/FHVFkWfY/RabGBBu14iZeBZCHtHPl0gvfiX6DpXl
      aJOwHeAkvqAAnkg0HH+U5yV9i3j+GbY9o52tORwPZMXMLUrWUhunXDdMABlxmOV8iVVjV98q
      CRE+6puO7zUJPpU2UdFjKk2dxAbA8ixAmMGtmsfAuJL0t8+x4oLkeGD5659x99GPcdBZqI4V
      qfK1690W03dc1Ht/PJrbOCnXmq7xiaoYoLfCAdS+VvbNKUL0UtFpg1IaM4Rz86XrRiv1YAeI
      AWlKLpzsux86qgLFmqPwELcz5DVz25IVOZVSFGcXTpe078nOndSKlQpttOMVf/pr+OJ3HM6u
      aDb3qKWk3m4o0oz29tpVm66/oE4yqqYlK+cjzghBfdgHDNKx68mqGrBUxyOZkCgPBxd9j6kP
      iHDMYtIfCd+l/nYX7EZqKp9kp1JPFobZckWeZQh6zHJFZy3lag11jXryFm3fM1cavb8nK0tq
      pWg+/IPvFwxXnJ1PLoidHbelVCVUngQ/kNuHUa7OQuvfZNm3kkexbTvZNqtkvJBEFFr1Xk0N
      XNPHShkaaEOo5R5zkynzlSjZtfT3d/SzBfknzoBu+/6PXIVoff7yHcBPQqkUh9uRE6u9dDsW
      jh6QBw8bZ24HcA/KF0+RngORZ5mXO3R6qaJtHTk8z17q1vkqRnM4YOoD2Se/ZPP+7ztluO2G
      YTdo7+9cBV4IzPqM/gd/QLXfYYrS4fgFQSRgAupiygs3fvcJo62DQK5ZrDgcK7LCieYm8wXH
      /d7Jp3/2CeLqNQ4obFF+v0lwXx1poobF7GLEpSSRhuhprO7CmCh0WazBa1XWH/6+E301icfy
      2yl5en3O4p/803D/bysP+JXjo4+/9jO6ugr6lmqxDPh9GHHsCIKAlpIS2fch5AK3Awyh5Pzs
      CiskuU5QQgQWVhDWUgolPGboyTv05RKRFSQ6AZOQCIFM3MSxWeaEo/KcPHcc5aR1sAlTlCGx
      TNJsvO13LZNl6CQh6S1KS+T6wv+ObqccQlbZde67COEchI6H0O0eQ75RJCCu2g1d5mFMChrr
      s5BPyTSD4zeb8K90ApRtRXocuaLNcjFR+23221Gzx/YTskOMEixX65BYmiRxLfKupW4brFAc
      N/dYL0/oFL/cSav2O6rthme//MvwXmaxHJOgLA8UyWS+DMkpwJvPfhMsPTcf/THbzmKWa477
      HckgvzJbRPan24BTygvHkb18/6MHIdCkna80++0I+R4S3aF1X7GjSBO6u5uJUkTfd4HYsvE7
      UVpK9l4qBmAf+RYcthtUmrHL51S9gDv32NEnyJ3UVG1HZqESCu7vncXS4OkrBF3T0PmFaDj+
      mM8rrPMVro+uoZiePcZWTvhrEPuq9juS2YzOh1Wz9RpdJ8jlysndh0XMlchP0aCnO4CMci3b
      tmGXzrQhLWeuMuaVra2QaGNQq3NsOSfFJemvNge4u0b95hfhfpWPSmAAs4sx0XU1+lHmIiaJ
      2KYJ25voey5/+r8BcPuT/8KtGlJ6hYORJfVlYwI/TlIYWFZ5MZHXo40Ya0kK31B86nS8TI9m
      CKMG0vbLRpYPitYu0VMnO8DwXZ3RXheaVyaOu4OHgUNGxufFOfI8xCmdjrqqgkMO1jJbrlFS
      0rRN4DCHUnSSkjW1Q4cqTf01yXpX1+xuXziziuunDrYunFxjoiW91BMZ/cDZwOUkXUTEd6Vy
      V14WWlPdvKDabRy/+Td/TbpYcbsHTE5qnVeY7PvvNwTSSTIhJ3D3AvwK3C/PAvhJ9F0gqwOU
      y/XEDGH7kVMKc7ibrdew/CLkDsMK1W7vkY+eTCTa2/0osS3mS47VsMq5Uucwnp9dUeMuvlQn
      8J2EGSErpo2wmBZ5WqGahH5+F6u7jkNVk+ohsd95bq9Hc2aFlwAZw8TDYU9WlLT7XShddnXt
      FaZHdbkg8OUrOH3fhs521/fubxFHoa9rd/HvdxyOTpGDBl+gsC7pFq4iJrVC1x0yz9HeOtYY
      TWf95AOMUpSJQWvNN0mHY2stkxUk1XiNdG0bwsL0WzROXy0c+sm77LIxxlUCmijpM19hnTnR
      1IzkCK2Q9PmIARF2xMHoJHm44tYVcnAnB9R7vxdux0R7kyTYqMwmYiGucoY0CR0wPzun223I
      Vmu6/RajJSJJR+FW4S+ovEQo/eB4nECuO/5cKxb1OAGOQQCEkACbJAkeA3H5M3SQvbjX0PHW
      Wf6lDa+YV6xNQuXhzwONcuj+Ahz321DyBGibhuNhj1TzsFsOE9YKQZJmqCShadvReadrHTH+
      eETaHtm1bjL70CxLEnf+pcsZTF7QHPbMzy7odptJ2RP/PtXOXwdIZOQKo8v5SOpPs9ElNE1f
      Is02jskE2H72Cb+8u6VsDLtEMFOKzc09H/+DP+a7aPueguHK1SpYoQJQFKNtZl6Q+O6vyXI2
      10+j152FH8bkOdvn7j1PezuDD67FhzQvweJUx4pqPzLIhlVD9i02OqE2K6gGfq1SIyE/TYMm
      T4BZ6ySQtwOGyfJSkFxX1+E5xmhk3NhZXXrrT/sAmjxbrbBdS1YUnk/sBa88ElVqHTjNaTlD
      eElwZRJEU2G0Zn93E3YAK0TQP52fXdI2tbd8lXS1s3nVEfRj8EeQWnN3OxU7c11ftwPU1dGF
      eD6UAZidXzn9pCwjTzvUoLMqpSshS4Xse6Ttww7ebu+RJwqAp8IA9aM3x/NqCflcXN0DEBeP
      aYACd/20+x3Z2RnHun64A9zdbnj0+A12npqWr1Z8c3jTdJz2AQZ7oWFMtV3EBAAXj86HOsMY
      3rM57MJJPh72QaAKRrCavLicxNnfxVozFZB6VKLFfuWKcjqu3n0/3B5Ya+BDiq5DvvVuwK0Y
      j1vpu5YlLkkO7LYB29I53NEQIs7PL3Hhh2QfSY70fUdzcN+2u73G5MXEZE57/X8Yz1VazlzZ
      cnOPmS9pTT2ex76n2d4HVpw7GQ97JYNKn8tJfCXn/oZmc0d/9ZpfGFqw3up065w6uXlG3y5J
      5gt6oHjkoOi9HH/TdrcZw9e+C0BGgPli7KmoSC5dZzmHz0cesrDu+1khqapqOgHysyt+8vh1
      9ne33H9x4NFrbzIvvruue1vXE0bUbLUOKzm4undIfNMU6XmlxphJCOISPT/z04zK17Szwcwh
      y5zup0kCPTAdoMPVgeS3fzO+1+O3QpMrNRrjhaFUmnG8HAnaQ3kPQB732EEE6q0PkOsLZJ4j
      lXEWSojA2DK+PHh1/VvEasEnvxtPfpYXE0jHYNNTb12ydjgcSMsyGHAMFauBOZflTqjq8v0f
      TBYWrEXI0fxi+8ztnvPzC7q6Ql8+QWY51d3tqCahTciVCiVJlUCkCb2QCF92dWVN7zGQ5vRC
      IpMM/OKYZI5NtvCMLZWkdAe3G4i+Q9fe86uYAfYB+G2w0TVZTn3xBPIc4Sd2V1X0fUcXGamY
      YsYgBmzygk6PE0BUR+y1Q+/2fRfULgDkOipo9FPI4WQCDHb289UZH63O+LsebV1PYMq9d+4G
      VwZt4xpv1NYeYMDDOPpkOTnu6Td3bjYfj0HRwb3I7y6LaRLaRJUE2WUhnNFSBfeRcAz+edls
      NnapTQJ1Hdr9Q/06Fpyqdlt48QzerKZqzGkWinoqSb8TOO3heLgKn3oSWCFpmjbkTOAWmdrH
      yb2U9Epj6zrIkghr6eNcUpz8H31yW9e+8639xd+7//1u54CDilI6s3FOCgPgpOlF34ddRWUZ
      ClDRDhALA/Qn+VU6n6O8+IEqZpRepUJrze39uDMmiyVmsUIqzWz5iv0BZuv1RN9FSTlxTpQe
      Nx/uv/ZGiJuXUoGHRAttQgIolJ6S54fnDyGFes2T4124YfuO9snb4TNMnocfTmVZYCbpvCCP
      KjQXm+dw5+Lzu/Qd7v1hZnUdtu2sKJACZOYSQHncOxlDk3Cvf4/ZbEXz+diDkLM+NHKyZWSi
      7Zt3vfSujN1AEz0hxvj/pRobYaY+Yjf39Mu1Cwks1H4yLm6/wNxeU73+PuQFTcSpBcbCQllS
      NS2zcjYKTPljaPY7n5fEIlvRZN9vJ2Jb/faebntPs1ix92DqvG6ojhWLpqK7uxkXkyQd3+vm
      OX275BghPOvtZgLiK4V1ADpACYuIkvTOWo71IHx8pPPFFtF1FFGxxTZNWEzNfPk9kOKfjkps
      RZZN/FzNfMkhWgXT2Tz8KHmWY31ZUq4vwg+ezBcjStMT4oFJE6ryJ67abbh690NuicSYoh3g
      dGeZaMzfXYMPe/Tjd0bxKZ9c6yx3u0/b0NaSrreI66eIsyt6pdm1PZkQkx8w7lBL5ZLSarel
      SFP6zR3t4UBSHTCeG9tZi5SS42efoJZn1Mcj7eYO2z7h7R/90YPzffHgL248XG+/+Vh8/VOm
      49Hjr39ONJaDhON7HwLwlXHH3TUMVcT2jEqM4VG5Hi22BvolgCwKDpFsYnF2EeDoKk3//68L
      9HVDaI2JTJqlN30DX1WIvMDiUZXv0i28GoE2o65/moYwYudXnLKYkUgFHiHZS6fGLKWatO4d
      TseL8X4HTmw8fvvTPw+3B01/gGS2mCg16+Xad63nY518yCm8XEm13YQco9ncOeyM5zW397ck
      swV7H3ZevvcDnv7KCY3l+dhJHz5nADGuL694/sufM1cS8fwzqjfep97es+5dnpf+2z9H/OGf
      cmuKQPAvE0N3e+1kTnx1TK3OKX/8ZwD0Z49ofQlc5CVZHZU0mprWv0b0K46D2JiUkz5QTGvN
      9StWhz6tAqk0o4+aFCovSCJtHted/LtRgxhG33UTKRajo17Bgx0gAu7ZEURnI1OHth5JPflQ
      B28btptr13V89gXJfIEU8iu5wjFZX6UOrJbnM2zXoKWkSBIMPermGYf1JX1WIGyPKue++zoO
      laShC2pOBKheNcvs+xzHpgmVn1QnEyfPcrkevQbi/k6WU0UNziQvw3kXSr3aCdDWzeTic0lq
      TF6Wk3hSqmVo8AipUI/foKtrrDHkeUFX1z6GF+gkpe87ytUZXV15orYNX157ZKQ4Nd6Ia8mx
      nMmJK2VvDJ0n5ahyTqbdCjh/+lvUL/4C+egNrj/4fcBJISalq2a0J3KOcd8jydJQzVJCst/7
      BNwYx+pKUra315RJgmpqxGGL+fXP2X/8D2iQyLal3m0c0SamWjZHei8V2XdLzn/6L8JDt//o
      nzl+Q5Y7CEVzRCdpyDuGbi8QSpcDdsb5L/fooiDVUz+Hv48xgOuG27oZixad7dlXUQ5w5z2E
      +3bMOfzzhh1HLdevdgLokx0gth8FJp1GeOgVrOcrl/Ufj04Ia79zchieLBKXCGGsyrhwxQPj
      +qkcIDA2g5hqzE+I9EUZaJnGpCEEytOc/uIJcnkW4VRECKvMfIFMUqTWSHUywW3/Umk/mob2
      /gbpXSW1Mag2QRoNl0+cQXTiFOgQ7jzFu5VZrgKqVBczuBrV1+rKNcpE3yF6i/rit3B2RdO0
      gV0mbq4R97eYNGH5y38NwLM/+U/YvLimSBOqTz/BzJdsmxb5mlOYVklC37Xk51e0TY0+sWYV
      WpPMF9g0o0kzFs0BW+2oX3sXAPXBEXV2BTKBJMPkBbvDHnP1BoeqInn0Js1+h8mLgK519qe+
      D2Chi/oe8cqeZBmdL7bovGQXLUqzyGBQJa84B3DQ3zEelX0XGhnuS9iJtotr54+rdZIkqM7H
      b98xZj61BjVRPHhqWhcD8ExRjmrUvrkDcFSag85C/R4GUSo3QY5eJSErCvLFcqKOnSqJSYZT
      btlvfSVntUYvz1B5jvjVX9IAhyfvIHVKX66RncX683SsKmYntey676m8Zmfa9VRFvOv4CzNN
      sG2LunoNm6RkCAeQ0/pbNQd77xOWiHlonlX7XbAsGiActlv4BUlxrFvOnn0CTz/l7sp1b+Vu
      C3VNY9vJAjbwiWPFj2HooqQPMjrjbgBecXyILoSg8nIxqWkDAw88JdXnB716xR5h33b0fTf5
      0rJrwwTKLh49cDmH8YIejZmH/13pqz/xHxY2bpOLCI7tOoTDiMOz+HZxdk4ym3kNnwF96ruf
      Wc762W8A2HtV4wmPQavRkOJUl9Qfz7xxu85DZ7XpiEuPOpY0yXNklPQPWYgV0jUJFyu2z566
      Eu79HvoOOV+640kS6vc+xnYtJi8QSrsy77ljlKX1d+mj/92N6sQhJu4bxaHmRDo9y9k8H4UH
      ygiL9cp9ggdh1HCQngjxVfdF1F5PjAmrspMTuafe3pMVJfsvPiWZzdn6L5dUe8T9He3FI6S1
      yBd3HK3iLElYRG4pWmtSv8uoJCUdSmImmcTVKs1CCVMlKVl0u23qQFYZ/haEbr2yQ7o6QyfJ
      hPKospzeS7mLvCD1lZVRrYxgfZRkmdPsfONd6uORNMtciHTcoQUPJ2vAINmAtwcH47DCg9n2
      e2J48TAObUfVtDRJCutH1NsNyfGAFYLDZkNSzhFNS7PbhOTdPFiIHjrqfJOhC4cGEEoxXyyd
      +FaaofZbzGqNiHKPNEuR1kvnZCnSjhd9miQYjxAQ1rIZJofv14Rz1Y59APnqk+ApJdLF7xEW
      KFqBhzFdMSWd7+LJ88vvdAxqc8vs//5fwn1xfsWNd1BvcD9AE0uYz2ZOOHa39SYPWxIlUbfX
      tBdPONzfMrcd6vpzqifvsG870jRzyFBjOO72dGdXHO83rGeLKRo0qjpZxpKoZfAkEGxWjhY6
      BE6Dj4DAoroW7m8nRn/gq21RuKaiZqOLm7eeM5tiEuPkTIRwaMuiJKkqwDqF6K+hTvZdz2G/
      57Dfk5UlzWGH7Do218/JijKI7oqVEzLogWQ24271Y5o3fsBqf0tdLGh++CfINKHebMPknStJ
      XyvaJMVeP4XzR/Tt9LucCgSEc9CmQRVDn4TLX+YlZrtXbJDxMAl28egwEl+5CY+fJMXKmACG
      0lkRanpD+GHyIqAwBzk98gKsRWlFaiVUR/jsN+E9LVAn09ZQXAq1SoZJK/qOZnNPqhXi5jlt
      Maeuavq+QV4/pV1cULWdd5i/R6cJ9u4FXV5SVTV91wVNSnfcIxtM57HPretHmEg3NFaeywqn
      SNHVFfrJW04UKnpf2zahsiFsT383Qs6T199xbC0pQziEtfRd5y6utnVYIt90k9Yyu/Dm3f54
      k8zBiwvxEHbxTUdzcD7H/f6Gthc0PRj6yY6hlXRCVmmGXV+4Sl50Ma9eezOUlpWU0AxIAY1t
      G3jsd3qTUvrz+GWS/EMp+ZVOALG9R33+SbjfXz4JasPgaZAnK2R8384XVF6zPj8eRjUzrTlU
      Fak21PudC4V6IJtR3dyQliXCCqrdhv7iXY5/8GfhPeViRSLHbVUXZTDKBiikIPGTqUcwder6
      9qOJcCjCElUxeuxQxbh4FC7CYQxgPCml/7vlcH/n9E5PkmDXBxiMAAv6NoqHsQiLJ6qoIOgF
      rnyrkgTbNAG/Y0/IJEHBom1QdzekJ2LDXV2h84KytwGpCm5SdhH3I1YAiUfgQQPGKOrNPWp9
      waHtWA7n5w0HZbn93ScjnTXPwfu9mcVqInzQX70eGneOJBVJ8XjZ/HQ2xwrx/60kOG4OwbRK
      o73IKwxisY6E8TIXynj01nKIVgDT9eyj+nGqzeQ9EiVofaKqn8wxixW9lCitkVlBlhb0bU3/
      xnvILCPvXD1dWOsg00VJZ7RTThNi0oUeYBTgdrdh1e7qmnrvtD8DxsfnDp23OjqVaSm8UQX4
      pK8bVjxJ76mKw8pXnPkJPax86/NwWyrF85sbquORVGmqw6BF6pP+QXGumNE+emPqNOkJ7LGV
      7PD7zSP3S4DiX/7vZP/ub+DHf0KhE3aXr2HznCTiYcskRSnjoNrSqevFwxRjNU6nGf3ahcWi
      KJHRxJVFGfoWyUleeQrhfrU7QF4gz8bYXRYlaQQ4M1mG6sY1VkrJPnaKFNMcYSiZqkAsHwBp
      wikBgFNUSDNUdWBx+wXivQ8mF6EqZ7AZ31NjycU4QfKnn2K/cAyy7XzFHskeR23sbq5JZgs2
      m3uS+YLOG7M19px6e8/59gU8/4yuPmBun6MePZ7uaNGFJRcrlHfKDGJc+ViKTb74BHX7AvnG
      O6jEoI2mn83pcRf801/82/E8zpZh4iy8sZ7J8tDHGN6zjkjz1X5HnhekszlZYlBdikkTYEaS
      puimQhtDc2yd/aps2Fc1CzmtsAz/t3XtOMJyMOVuJ7gvtcgQ6xlCg33xjPrqLTcZb54j/EJg
      33zP+xw7QTV5EhJXVRWuAStkgDynXU8fcQP0xE2SsKABlFePvYm4BPOKoRB1b9lEq29eHSc4
      FdU1E7qivJyauJn85TX7vmuD098QUgx+s9XeSWrIzQ3pL/4VzR/9R2wjCb2k7ViM0TCqrWmi
      5pv94lPsJ38NgP74T8hmjousjea76LEtHo8cg1gqUiUprffuMtp4O6PRLsnMZujVObacIeoa
      mWZk/aAmoSb9Ep2Por8D51n2XSgTlldP6LsWtVih0tTtJUJg0iEEqpADhHkgsQgFUoaJlWcF
      aVFOxH2NMQEXNQiB1ccDCLcDxB14kRhknsBsRrU6J9/ekJY5kxbl4LVsDDbPH+SEsaJGnE+Z
      LKOPej0qG6EQp26jjd9pq/tbxPctjvt1w54YOSOmwqpDLFeu1o5IkRdc/s6JUd1ePnGuo8Lx
      QJVt4fGbpx8BwPwv/uX4me98NOEmVz/+Ce0HPwKgL2Y0G1+3X6xIZgt0UQAWnZcBtiyHMttw
      NpdrhJSgE/b3Y2yaWEsXdoQNJs851nWg2yfWBlGo28MBXZTUuz1pktLc3TGTFnHzHFEUE4hJ
      KkY23eLsgl4qbyvrLoIhoc6Kks6XN+vtBuGdLI9NS1XXZLqivb9DWhtyrGGiDaR7qVQw/ejb
      kYhf77aICQ+hnYanN8/g6W/p33yX5tEb7nQpg5otsD4hVc8/x9zf0l08nogjD6PdjwxA0feT
      fCrWmzJKTXeAqGRcXj0OE128+j6ACfIeMLC+xtmoyjnHZCqIlUYx4UNncA9xjexGjx6o5hwN
      PbT4d7/mePU6L976mLe6htfvx0YIsp8AxERdoSKF5vvz16i8lWqR5iRD51FA+/wzWkCuL7m/
      cQmemS8RTQva8BuZkb/+vkvmW7h8iTp0e5KzVCc/9CAKVe22Xq1ui/RyipnoHYe4bSa17Vhy
      0vpV1HtBA6MVlVBqwr8YxvrJ6yEnsFePEVoz73qfR7ThnM8vrpzRnu+rDH8LxoXRcWhjOPvB
      x+P919+E6oCdLZ3BHm5HNH5XAYePsl0LJmHW9w9Af6e6QOPtHGHH/Vmf7gDR7lB5m6giTeFv
      fv6q+wBTUvxQLhzGwMuMx/GkTxAuoKiCIvuWdnOP7Fqe5q7i8fphQ7+9oRer6bba1KFaMIzt
      j/403FbzJe0hliYZwXK0o7+Yii44KWVAgn4dPzjmI8dkF3BJcRHBL75NiBWvrvn5ZWj3D6t9
      zHVIMgcgNNpgDzt0MUPM5kHL5+az341Jb5qG2F0v1yfVlO0kRK23G67e/YAX/+b/cZ8zX7Kv
      HAuuub/DLJbsjxXLq0ds7l0TUzc9cONh1nP2VcXy6jHt7YsQHg+f0d6+wCyWJB877kO324QF
      RFjL8ThCnmM2Xyb1CFPpe7ooB8heewuwaCnoeMVJ8IM+QJpOMnIVZesw6PV/vViTTDO0cKSU
      zHNGm66mSwso5jTFwhmn6QNWaYgsNCnnbGzUi+gtdTNeeul+F36IOM4WSgeFapnl1L48O6ej
      220QizXp+oxeaprjgdnlIy+LcgLEOxEFiHeE/LEDsQmpKM7O6bqecnWGbVuS2YLieA95jpRy
      0vp39Xsvd+L1RdMkwVTu3Ljk8RBKlKG5Zq3DX03EwpKwAIgkher70RT9JsPkEfwjEjI77T6b
      NBthKnkxKbQI2yP6HpsVNK+9/eodYuKVSp7IVRgpqaO+gFosyaOV1mTpBLocDCuUBtFMataH
      ckmtEsd7PR5Gie5E0f38p+F54vV34N0fjcek1MS5fmjNg8eV+7KlVJLWJ8sqybAe0mAjPm1r
      azptqHdbZJ8HBYivGjFQz63enrRSlqHEODDV1M3nbjf78Pcn6hrGl13dAbl/Vkg6LyuSZo4E
      1Fo4HCvKrCQp52hP5Tzc3oSY2QpB5ReEPBMvrfjEQ74U0/RqxrGpQ8QQl6+FtfQ3z8PzusUq
      LCyy7zhGqn45OA8JAeJV+wR/2xFLh8MAnYjsPGMPsUEOJej6dLS7DdJ21LvdGMakmbvoh3Hx
      mCRePZXmEOncWBlBmMVIklHzBXKoO2sT8PeH1QVV3VIWc6fDIzUCMGmCUIqrm9EnWfZn3JZj
      STbJc/aRj3Lx6Mno3fU1DpITVQht6LSP1cO5E5GkiJsVAzZLKUlX99iupavrl+Ra/m2TJIhm
      ud9mupsFpWqPt6+BYulJjX2PSXNSpZ0vWnCP9B1wIVB5QVH0qCTFaIUxGso5tmsdVLksJ5KQ
      p8cZqkB5jmrjqlicH5QBLQCQC0tiNBbLbrv5e3CKj9TNpFTMT+7Hj6fHPRQZzeqSvu9YyyHZ
      GtvZtm0CuX4ZeUL1XcsCaPqO29c/CO9pTtTGNLCKou86gtnqvBy5pVlOE0mzKP9DX2yewc01
      91nCfVWz6FtW/+//ys1P/il2sST9y3H34clbVG+OynTAZPdp9iPeXS5XQQTrSnR0JmX35oe0
      568xK2ZUn38xeZ8Y8VrvthOI9sCNGLSXZN+6as98CUnqPzeurvgdR4iwkEhvAJJk+SThlfLl
      XsidXziquiYrZ7T7PfXW6fF0WlPt96Ep2DY15u4F3F6P2qCzBf3N87AgAIib50ENzq7PA+QZ
      4BjdzlQVQk0r5QQ4mFxc0eQ9OitI5CuGQ29PSPGxG3y4H5fzynKeTWeCAAARBUlEQVSyA7z5
      yc/h80948Y//K6rdbtTHKUqq3YasKHyitArJ1+AwP0AQHkXCVMOQX/w23BZlifp8xAo1i7Ow
      6n8ZYUboSLTVS/sZrSkRmOYEL/PkrfH22dVk5U7ynMNno25Q8ehJuOCUVBx8Cfbi+lOqfM79
      +RMOVpIhePL2O+P7ahPgEbFSxnCROlM4V+lZD3973Dq4s5ravMYkJZ0kAdxmox0ghGZ+B/gy
      gd94DFRNnRcopYjtYLX5ZtJrOsL1y6IkNV7+MJ+aH5o0nXK9o7yz04bWuH6LsK84Cf62Q0o1
      wbn/nbynl0schsoLum41uc/EpyAPq06mJDmDHItE+PeRSnPYuLDJbu/h9hq7uqQ7HqnPr9j9
      o//SvUYbfvfGR+G903I2Ef21Uk661O1+NyEQhbE6R6ZF0OSUUnH3r0dSPOePOPg4Ny1nYRcZ
      COrNxhHbj4f9aPO6uSedLUhn8yB94g6aQCgX2jiCPx5G7ncAcC6ZiZaoEwunuUftdrM5Ji9J
      TYI2Cfv7O6rjgdRPwOpwCLhIqRSLvoGuosrd97R3NzTvfESjx8mxtQR18aydckcmUoh9OdWR
      inoCRhuc5aw77ldfBYow9kmWT4SVYvU1cAi//e1LLoC/xbDttCUPBO4ogJUKGZ2sbns/Nk6M
      QnppFJTCZqO/76A0cH/+Mc3jd9xKc9hDXmBf0sQZxmQH8D4Aw1iu1yFezfuGs792puJf/OE/
      dKuud6Hv+y6EYOB0VYfXmSwj81xjEkOvNNJ2rlssZTAdHzjBpz5gOrKSjXOArxrxd1r99F+A
      B0Bu/ugniMUZbV27HUA4Flr3FZWlIXSyt9e05ZImiXan7OXIWpPnk1U+iZQ/Tp1kRhn5DMsr
      3gGGcls8HiZS4+Nqvpis1nd/+BPqHxwQvWV+dk59PDI7dy7xzhX+QPra2zTHAwuPRZ97LEx5
      9Zj6eECmGcUb74T3lGmGjDDmRhtEEZ3Y+SokyYmS4G/bckHKeGEojxiVaeZhDGn4fyBxPAD3
      5UVooA0jDh+awyGEX7Kc0bztdo/Bz1ibhMqXiQ9R3TvRhwmzTQ0VqrrmsHnmVvlPfoVZrFDb
      W7LDls+LlbN/FYLy7GISNsV52Gy1Do+52z2LxQIrBN3ZBSrNp79xhP0iiQSpkM6dXSmQgsJb
      2yIE2iS8WFxSy5TZ2SVdXaPmS3SST8zGYy1Y2Xe03mRcdosH5eWh8pNKTR3zPXyEIXAl0e+V
      ERYkxP0w3g50GFIpdrFCcxyDC6IYdLTBHLYy2aXU2w3Kb3HD8/reETjCMSFCXFtKsDfPXY1k
      fcnOAjcv3Ip4d0OLizvb/QYtNbWfOH3hSDNpmlJtnqJmc44315is4Pjimtxo+s2tw72cLABx
      BzdJM+5fjFCJ+fkF2ocIIsupfIkx71p0W6OThMz3AXRkreS40y4J1ImhDspyGQkOK/RVsO64
      EebyqPFiyvPxAndCZDuW0tIpzabtePTuB857y49nxVtUhdudysUKjQg7ifVS7rZ1sunN8YCT
      dleoco6Wil4ZGhqsSeiOhwljMDnhVsjBWD0qV8NUFuUBGjSYITqRgu9hB4j5uA8dU05lUR74
      Cvvvf+ow+U3HQKUcxoCDAcikqywA9CaljhpkRBNxCKFqX2kYOMKy71x3U6kJsVsnmv4lzC04
      iVVPoLn1MVatG5PughZ5d4M9u6JqO6d1FOUSuq1HKcC+4+DBf0WADwvU+gJVlLR1Rb1Yk7ct
      89tnSCXYiy+XPJlADjwcRWiJEpK0aZFSTQGOq1Gfrm2caYVK09DjEJZJLX/87h7BGZe7T46l
      XJ+TL6KdKtKvzaWcKG/nQ1FAKvpFXPZWXnFb0S9Wf/9JcFZGEAOl2J9iZfxFMFssKdMELRxt
      EZMg1dIjEnsXE2rj/j5Xoet5qjShitlohaQU3ZDklTMWg16MgKM/uaooae6/jqL+5ePy/TEJ
      flkZePGSMnBcDpa+9Jv51+a4hSFedWMutSpGxTTbttSbe0d2kc69Zbfd0hUl9fYe9aufIZr3
      MO/8cDTkyPI4LXMXbgAkOnSoLUvwZKa+63jyxljpsllOc+nxQX3vZOD7ntnqDNvUDutzcYFQ
      Ojwu6yOL11+nHT7YgvZCurHk/cOdalwEiiwL4aNZLMNjcSNxeJ3TM529+iTYKEURu8EnBtml
      k/vb6winsdSTmDhNkkAR1Ict/VMHndYXj7nbOT3Q2tMBg4mc95waVpxBxmMYWutwcrQxdNF2
      r566kqRoKmrhJ4kUFGmKbBu0J7xQ7clmJa11vY4GQTKbkyQZoreUfY01GiUEn3oZQfimZeCx
      xAijjGH82kfvfhC60sDEEMIKAT50GpT5TF6g/vKnqNU52dyRZfKzC45/8Gfo+XLSgYbTqs64
      ohtvl5RkObZtkYsFUkn45/9zeE7z1odcm4JkvuR42JHMFhwOe5ZXj+mvnwYSkJkvORyPDtX7
      6a/J3v6Au56gLj03muO/+yV6ecbsj/5D4MvBkeAkK4f5Y6LHTJpPewlqDJXgFSfBjs0Ur+hi
      ImcHkMxiOQtNFYkYqa4b1ZRnM7SvfPRp/p1cwcHlJVnhTo6KVlGZZdjehyyzBakPd3SWI379
      CyyuyyrOH9HevUBcPKZqWpL5goN/ruzchaiOt47U/d606fWy8U1q6C8bMYRCleVE5br21kdx
      CCHXl8jZArD03rporxNSZUiyMbxMsnyyYtYRuURFSe3+5ppkNv9K+ce/zZBZ7rSSYqhIJGwc
      gyPdmEdkmSh3tP1kscguHpEVZbDlfbXaoGk28cE1WR5AW+Aurrvb8YLPtQ5Yc/d4Flb2g9Ic
      VOqfl5CWijT9cpGrcAxCMDORy0g8KedLjh7UlmlD13nZvc4ivNmCbdcc3/owvD7tGhhpvl87
      TsvAs/ux7Km6hKfHMT2dn184qcKuc66MjM2sJHeGFfawQwoRVlKAPoJdWyGifMA6qiWuX6GV
      4ugly9OiDDOkOcRVJBdODCNrKtJ6MK3IqL0d0mRcPAo3xXxJonNHX5QykP+1SSirHRz8cSea
      brbC5AV6eYbMcthHi9p+g6n2JJvn8MEP3TF7WDd4nFgUrOlJiXSU2zFZTh5Z0VoxIniP+92r
      nQBN23KIauICV98dhuxakugCEUpRRSRyR4jxFZvVaM0jleKwuZ/41Q4r4KmruprvKH71s/C3
      4+/9mG4WyWj7E5WkKV3nxVWLAjG4UpZzbnfjD6OLEnl+BXlJWipUmpHpCqGNK6lqTX1MEMUC
      mWRUuykU+7TnObFviszqRtlEgnk2gL27wT5+jaWHCEulUIcdXLjGVSMkPH7dTZymdlZLUmIf
      P6Gzlke+RDrkGlKpqX4rwPV4zPlv/wr721+5c/ef/td05TLocsq+deoMT0dWX18s2JcSag+L
      /s3fkKzOsIfdRHIe4OIX/2r8TKNI1o9HcYD6oUhyv72jG3zZ+m7So+ilnAL6otvrn41Nw7sf
      /SlHFFYIZ0b+4FO+5xFfsHI+rZsP9W+YgrHkXAWcjEpSlEno+x6dJGEF1cnL2+tt03DsfBVC
      yAkGphk8CKQMHcfUTkuXfd+6LubhgDh/RFcdHa5mfR4aPNd1SzI/ZynUAz7A9W5cqVKVTL7/
      /NzV451Sm3So1+i1AN1yjVCap3/1c/ce5Yz5Xzs9T7m+5Fq71TuZzRH+YsuKgk5pdnUThLuO
      +x1pUZKVM8r1aEKokgSRjJ8rF3PsG46Ar88fkSntntOPRBmuRtqnlSn9L93n2osz4gJTc/k6
      1gsOi/mKPo0acMvzUAVbXj1GkdItV1TygmE/Gkql4JL9JIbSfwVornpnDEXlbEHW9SRpyv2L
      F99vH0BlOXVkeWOznDwioygpOWym8UWc9U+G17axdU3f91T+BwW3Yg6JZHf5iP07PwwvE4tV
      kPiLOaexNqjzox2Fpg6fRdih9XmAL3RKY+1DhtXLjn8YpxPiAWOsqTHGsH9xHYwcJrtaVTO3
      NpImKUaU6mJJIr0Hb16yaHw/ZPYYIRVJ2iJ9lccKt8DoJHE84hiW7osISZazT2ZwMXO7orW0
      dzeOfys19fGI6S0v8jHMrX/1Bb/67/8nAFZ/9mPe+h//O9AGlWbcq5Rae1i1SqnS8Tedq4QJ
      vWi/od/cUWWzMAEOTTuRR49ttFIpvzSR35YjH6RUBvoay/ewA5z2AXhJHyDOyU87p2mSjlWg
      LJtgR3aDqcLqDOn/po1BHXbo2SyoRHS2ZxchBfWxCmW9bHeP8du3vXzCwasMyL4PiW0v9SSP
      sX0Xcgg9W9L1PdnjN2gPOxJP+CnWZ+zbKUVwGF/VGBuqMWq+cCrRX7KqSalGVTkp2WYupEtN
      QfErpxah1hc0foVNP/krePop8u2P2EjF+md/jlTKlY2fvMXzYjVR8NNRTqH8BG8OB4S1NNuN
      1zV19fq+6yad9nT+mHf+h//Wfbc3n5D4xUIlKcs33552nKMEWiUp3fUzfztB5DPk8filUO1T
      WE0aE+bTbPRCO2mEdX3vJSLFqwfDDd6ywzCRI8twfxN1QvuTWay68WKzcmyQyPkyTJS+6zhs
      7h0ytKnJ/vrf0L39A2rr4cAX301SMR6n9ebTYXuncCz6zrGsbE9Vt07H/6QTHo8ky9k+H80b
      ZhcuPBFKsd/cg3eNhHFyZHk+8Vn7qnHvE97s3Y9pr95C5OUDl0TwndP4vjfTM2lO5f2a88dv
      0NVHytUa03fsVEKxdiXV20GeJE1pcsX6v/nP3HmRkv3hQJJmyKZm/8X1WNUrSrCW42FHlpde
      o9WCtTSHPRYQu3tMtIjEjUJgUlJWXReI8bGfGTDpbJerswDq2z5/9orLoFUVLHTcgfUTtj48
      DAniodMskg8ca7sxSEt7J3WtDV31EIQmtEGvxi2wUJLcutVdzNc0gxhtmnHukz/RZVivFGGM
      QUWVKTVYIOGM2artFjWfk+c5Whsn5mQtma69P8BDEsnk+78E/ep2wq8ujw5iA844b6x4lEPF
      SymqpV8klKEzCYnWFIcdYn1BszgDpZDLs9HcejimQQ3bWsT5lf+rCzklFnnzjGM6wyyWrmFn
      h2c4mEFXV056UTqD8cFEe2JIkjqvCKuk41ckKaZvSRMDXUuFIP3xP6S5uwkX6cTSKooIwKnc
      hWZeVNwwWU7c4JdKImo30fI8+/tPgmNHFdn3k7gOYkeZSFTqJaGF0BrRG5oPfkSvdHBWtIOG
      kB+JlqPRmjIBfqyKEunVISRQm3HnaiOtTRFpEaUXj12jyRjsfottaprWTZx2e4+9emgYdzrh
      t5GBm3nJZEjSjK6p3QViDLZpnEHGRDAsOmdRlaW/cpKC+WGL2d6huxr91OUzd+UKKyRpUkDz
      5ep6A1bLCgdmw2jkYkmqc/TgOhOe7CaASlJE16G1dvpDWYZOUg7PbsP51nlOd3tNslhxdziy
      TDKS7S193Ddan1M9/YzMm2afulxOZO97S7UbKj+ji6Y9gWsbrzYn4NVLI7oQaPxRTZaH1XO4
      H4PhTARiGh5/2W0pJceh1m0t1X7v4QM9XTFjd/2c1IdA4rGe4IukMfR+6VDlHON3GFGU1PJ9
      //cZSTsArcoTKZcyQCmk1tC1dL3l4BPrmW/WCeyDlTzJ8gfw4jSCacRb/LBTDPTPZDZ3+jf3
      d8wvr8J3MlnO4rnLY6Sy3H/0Y3fuyzmHOz+5taQ9Hkm1oakfhk+xETkMYDLnd3D4whN2xBnV
      4YAVJbdVB9WW7LBBFPmEqlrvtkhPbEq8kgSefG+i3oMoZtgkw+Y5aVWjkgR1/TkikqgRb75D
      +e4Pwv3J9XBCgklOekLDqn8Khuu8Z5xFUB0O/Ht2C7mwPgYHdgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 24' width='192'>
      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
      D2OYGjuWBAUwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEH0lEQVR4nO3ZX08cVQCG8XeBJVgbKIFYscifrq1ua7eWKN7pVzB+0V56Y02MsVRiLVB1
      i21hd6EiXSOw0s1mpawXpkQuemNQYp7nd3UmJ3MyM5knc5Ip9Hq9XiSovtO+AOk0GYDQDEBo
      BiA0AxDasQBqtfUkycLCQpKkXq+l2Wy+9OTus73sPeu+fPXeQdbWG0mS9Vrt2FRrb++fXK90
      ogb+flCr1TN1/myWl1ZTmf8gjcZWZqcn09n5Od89/CXFYjHlyZF8X/8txeJgrk6dS7f4apa+
      /SbdP57nrcr72X3yMLu/tzMxU87E2NnU1h/n4uyFbDQ2MzzUn8eNrUyV3s6Xn93M5esfpjQx
      mupaPbOX3k1rey077V7m5irpP60nIpRjX4DpkcF8fqeaTz79OIu3vsjw5DvZ3NhMZ3crI2+W
      c9BpZb+5kddKlXTbO+nsbqW5f5B253nmb1zM6oNanmy3Mlcaz9r2fpLk3FBf6j/9kPFSJdVH
      65mfn8+j6kqmS5dy41o5X93+OgP9/bmzcDvN7adJoc99mf4zx961matXsrz0IK+fn8nyykrK
      M6NHc4VCISm8GPe9GB4d/2Ug7VYz9+5Xj+auv3clN28tpXxhOK8MFLK4uJjBM6MZ6k/u3q9m
      anIyh4dJpXIto2Nj2Wms5mn78N+6X+mYwkn/Cf5x5W52fm3mjcpHmR0/c5JLSyfuxAOQ/k/c
      bgvNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBC
      MwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxA
      aAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoB
      CM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIz
      AKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBo
      BiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEI
      zQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMA
      oRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgG
      IDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjN
      AIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAof0JwIW1FXRlVOsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Summary View' width='192'>
      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
      fwJ8EVXHHCP3RAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total by County' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total by County (2)' width='192'>
      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
      vF5nc/8+GJ//cOyb5nU9h+L6fb/vCq/rOrIsf6cYogkD/IkwVE6H8u9w9XNdF9/3R8e/rSnv
      +s7wOmvR+Gr4TR7b62N/1x3hur7yfTyz4+N8VwwZ6zpzXa/EMY4JA/wJMWSC8QQaiEUC27Yx
      DINMJvOtTX6vM/+NE54oilfSNK8T9bcVn74rMwydXtdDK94UsjHEJ7/77ZXqDd8WrutSr9ev
      5Ctfx/XfcOIJ/hNDEAQURRkph47j4Loutm2P6ukcHR3RrNVQ5IFnlbjWUDadHhUldlyXIIyw
      HYeMlaLV6dC3bQozMzRbLVLJJFEU0Wy3SSVM2p0euWyW4bNvNJtk0hbtTpcwDElbqfj8Vpv0
      4D7NVot0KkW92SKbtkAQaLXbWKkUnU6XZDJBb+DhVWSZRqtFxrJottuEYUjGshAEgUarRTpl
      0Wq3CaOQbDpNt9dD1zR6/T6pRIL64FrHddFUlWajTi6X+8F/++Hf0QLxg95hgm+NYULIMFkE
      4kjJXq9HpVKhVq/hOQ6+6xB4Lq7dZ22+wNrCHGsLc8xk0uQzFilDR5NElgqzXBaLrC3MYaoK
      G0sLrC/OIxNxa3UFWYiYzWdZmZ9jdWEeU1VYW5jDMg1MVWVtYZ71xQUMRWFtYZ7VhXkMRWZt
      cR5Tjf+uzheIfA/L0HGdPrP5HOlEgl67jd3r0W23yFkpjg4PUQSBhK5h93q4/T7ZVBJDlVFF
      gZlsBkNRsBImYhgym8sihgH5tIWpqhi6Rq/V4tnTJ5TLJXZ3dzg5Pv5WO5BpmiQSCfL5PPl8
      nkwmMxItb9o9JwzwZ8TQA3p6csLJyQmO46CqKpqmUa3W0HUNTdNwXQ9Vlmk0W6Nrw5GiCTNT
      U3R7fVaXFtnZP6A3qNkjCALpVAqAh/feYXd/n8OTEz57/ATX8zgvXgJgOzZHJ6dclssjnaFa
      q5PLZgCuhFwbuo4fhiwvLnJwdMzZxQUba6vc2dpkKpej3ekyMzWFJEl8+vgJd7Y20TWNvcND
      qrU63V6PUrVKs93GcVza3S71ZoPpfJ5ut8v5xTmNRoNGo85sxsJrN0nKIq3iGV98+oiL87PR
      b3Bdcc5kMriui2EY8a6kKGiaNso8u8lLPBGB3gKEgY9KxOHuLt4gGaRaqyGqOlYqhSCraJk0
      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
      JkRZY62+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='US House Map (2)' width='192'>
      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
      /f9+c6+DZiB1MQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Us Candidate Votes' width='192'>
      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
      Gv8fNEzhmmSLOFMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Votes per Candidate' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Votes vs Donations' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
